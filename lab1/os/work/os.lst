 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 90112
    3                      ; Data size: 33188
    4                      ; Text size: 37260
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0xb000
    8                      ; Compiled by GCC
    9  0000b000          	.text
   10  00001000          	.align 2
   11  00001000          	.proc _isspace
   12  00001000          	.global _isspace
   13  00001000          	_isspace:
   14                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
   15  00001000  afbefffc	sw	-4(r29),r30; push fp
   16  00001004  001df020	add	r30,r0,r29; fp = sp
   17  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   18  0000100c  2fbd0010	subui	r29,r29,#16; alloc local storage
   19  00001010  afa20000	sw	0(r29),r2
   20  00001014  83c20003	lb	r2,3(r30)
   21  00001018  201f0000	addi	r31,r0,#0
   22  0000101c  304100ff	andi	r1,r2,#0x00ff
   23  00001020  60210020	seqi	r1,r1,#32
   24  00001024  14200018	bnez	r1,L6_LF0
   25  00001028  54000000	nop; not filled.
   26  0000102c  2041fff7	addi	r1,r2,#-9
   27  00001030  302100ff	andi	r1,r1,#0x00ff
   28  00001034  70210001	sleui	r1,r1,#1
   29  00001038  10200008	beqz	r1,L5_LF0
   30  0000103c  54000000	nop; not filled.
   31  00001040          	L6_LF0:
   32  00001040  201f0001	addi	r31,r0,#1
   33  00001044          	L5_LF0:
   34  00001044  001f0820	add	r1,r0,r31
   35  00001048  8fa20000	lw	r2,0(r29)
   36  0000104c  8fdffff8	lw	r31,-8(r30)
   37  00001050  001ee820	add	r29,r0,r30
   38  00001054  8fdefffc	lw	r30,-4(r30)
   39  00001058  4be00000	jr	r31
   40  0000105c  54000000	nop
   41  00001060          	.endproc _isspace
   42  00001060          	.align 2
   43  00001060          	.proc _isxdigit
   44  00001060          	.global _isxdigit
   45  00001060          	_isxdigit:
   46                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
   47  00001060  afbefffc	sw	-4(r29),r30; push fp
   48  00001064  001df020	add	r30,r0,r29; fp = sp
   49  00001068  afbffff8	sw	-8(r29),r31; push ret addr
   50  0000106c  2fbd0010	subui	r29,r29,#16; alloc local storage
   51  00001070  afa20000	sw	0(r29),r2
   52  00001074  83df0003	lb	r31,3(r30)
   53  00001078  20020000	addi	r2,r0,#0
   54  0000107c  23e1ffd0	addi	r1,r31,#-48
   55  00001080  302100ff	andi	r1,r1,#0x00ff
   56  00001084  70210009	sleui	r1,r1,#9
   57  00001088  14200028	bnez	r1,L12_LF0
   58  0000108c  54000000	nop; not filled.
   59  00001090  23e1ff9f	addi	r1,r31,#-97
   60  00001094  302100ff	andi	r1,r1,#0x00ff
   61  00001098  70210005	sleui	r1,r1,#5
   62  0000109c  14200014	bnez	r1,L12_LF0
   63  000010a0  54000000	nop; not filled.
   64  000010a4  33e100ff	andi	r1,r31,#0x00ff
   65  000010a8  64210041	snei	r1,r1,#65
   66  000010ac  14200008	bnez	r1,L11_LF0
   67  000010b0  54000000	nop; not filled.
   68  000010b4          	L12_LF0:
   69  000010b4  20020001	addi	r2,r0,#1
   70  000010b8          	L11_LF0:
   71  000010b8  00020820	add	r1,r0,r2
   72  000010bc  8fa20000	lw	r2,0(r29)
   73  000010c0  8fdffff8	lw	r31,-8(r30)
   74  000010c4  001ee820	add	r29,r0,r30
   75  000010c8  8fdefffc	lw	r30,-4(r30)
   76  000010cc  4be00000	jr	r31
   77  000010d0  54000000	nop
   78  000010d4          	.endproc _isxdigit
   79  000010d4          	.align 2
   80  000010d4          	.proc _DisableIntrs
   81  000010d4          	.global _DisableIntrs
   82  000010d4          	_DisableIntrs:
   83                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
   84  000010d4  afbefffc	sw	-4(r29),r30; push fp
   85  000010d8  001df020	add	r30,r0,r29; fp = sp
   86  000010dc  afbffff8	sw	-8(r29),r31; push ret addr
   87  000010e0  2fbd0010	subui	r29,r29,#16; alloc local storage
   88  000010e4  afa20000	sw	0(r29),r2
   89  000010e8  23bdfff8	addi	r29,r29,#-8
   90  000010ec  2002000f	addi	r2,r0,#15
   91  000010f0  afa20000	sw	(r29),r2
   92  000010f4  0c008f34	jal	_SetIntrs
   93  000010f8  54000000	nop; not filled.
   94  000010fc  23bd0008	addi	r29,r29,#8
   95  00001100  8fa20000	lw	r2,0(r29)
   96  00001104  8fdffff8	lw	r31,-8(r30)
   97  00001108  001ee820	add	r29,r0,r30
   98  0000110c  8fdefffc	lw	r30,-4(r30)
   99  00001110  4be00000	jr	r31
  100  00001114  54000000	nop
  101  00001118          	.endproc _DisableIntrs
  102  00001118          	.align 2
  103  00001118          	.proc _EnableIntrs
  104  00001118          	.global _EnableIntrs
  105  00001118          	_EnableIntrs:
  106                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
  107  00001118  afbefffc	sw	-4(r29),r30; push fp
  108  0000111c  001df020	add	r30,r0,r29; fp = sp
  109  00001120  afbffff8	sw	-8(r29),r31; push ret addr
  110  00001124  2fbd0010	subui	r29,r29,#16; alloc local storage
  111  00001128  afa20000	sw	0(r29),r2
  112  0000112c  23bdfff8	addi	r29,r29,#-8
  113  00001130  20020000	addi	r2,r0,#0
  114  00001134  afa20000	sw	(r29),r2
  115  00001138  0c008ef0	jal	_SetIntrs
  116  0000113c  54000000	nop; not filled.
  117  00001140  23bd0008	addi	r29,r29,#8
  118  00001144  8fa20000	lw	r2,0(r29)
  119  00001148  8fdffff8	lw	r31,-8(r30)
  120  0000114c  001ee820	add	r29,r0,r30
  121  00001150  8fdefffc	lw	r30,-4(r30)
  122  00001154  4be00000	jr	r31
  123  00001158  54000000	nop
  124  0000115c          	.endproc _EnableIntrs
  125  0000115c          	.align 2
  126  0000115c          	.proc _RestoreIntrs
  127  0000115c          	.global _RestoreIntrs
  128  0000115c          	_RestoreIntrs:
  129                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
  130  0000115c  afbefffc	sw	-4(r29),r30; push fp
  131  00001160  001df020	add	r30,r0,r29; fp = sp
  132  00001164  afbffff8	sw	-8(r29),r31; push ret addr
  133  00001168  2fbd0010	subui	r29,r29,#16; alloc local storage
  134  0000116c  afa20000	sw	0(r29),r2
  135  00001170  23bdfff8	addi	r29,r29,#-8
  136  00001174  8fc20000	lw	r2,(r30)
  137  00001178  afa20000	sw	(r29),r2
  138  0000117c  0c008eac	jal	_SetIntrs
  139  00001180  54000000	nop; not filled.
  140  00001184  23bd0008	addi	r29,r29,#8
  141  00001188  8fa20000	lw	r2,0(r29)
  142  0000118c  8fdffff8	lw	r31,-8(r30)
  143  00001190  001ee820	add	r29,r0,r30
  144  00001194  8fdefffc	lw	r30,-4(r30)
  145  00001198  4be00000	jr	r31
  146  0000119c  54000000	nop
  147  000011a0          	.endproc _RestoreIntrs
  148  000011a0          	.align 2
  149  000011a0          	.proc _QueueLinkInit
  150  000011a0          	.global _QueueLinkInit
  151  000011a0          	_QueueLinkInit:
  152                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
  153  000011a0  afbefffc	sw	-4(r29),r30; push fp
  154  000011a4  001df020	add	r30,r0,r29; fp = sp
  155  000011a8  afbffff8	sw	-8(r29),r31; push ret addr
  156  000011ac  2fbd0010	subui	r29,r29,#16; alloc local storage
  157  000011b0  afa20000	sw	0(r29),r2
  158  000011b4  8fc10000	lw	r1,(r30)
  159  000011b8  8fc20004	lw	r2,4(r30)
  160  000011bc  201f0000	addi	r31,r0,#0
  161  000011c0  ac3f0000	sw	(r1),r31
  162  000011c4  ac22000c	sw	12(r1),r2
  163  000011c8  8fa20000	lw	r2,0(r29)
  164  000011cc  8fdffff8	lw	r31,-8(r30)
  165  000011d0  001ee820	add	r29,r0,r30
  166  000011d4  8fdefffc	lw	r30,-4(r30)
  167  000011d8  4be00000	jr	r31
  168  000011dc  54000000	nop
  169  000011e0          	.endproc _QueueLinkInit
  170  000011e0          	.align 2
  171  000011e0          	.proc _QueueNext
  172  000011e0          	.global _QueueNext
  173  000011e0          	_QueueNext:
  174                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
  175  000011e0  afbefffc	sw	-4(r29),r30; push fp
  176  000011e4  001df020	add	r30,r0,r29; fp = sp
  177  000011e8  afbffff8	sw	-8(r29),r31; push ret addr
  178  000011ec  2fbd0008	subui	r29,r29,#8; alloc local storage
  179  000011f0  8fc10000	lw	r1,(r30)
  180  000011f4  8c210000	lw	r1,(r1)
  181  000011f8  8fdffff8	lw	r31,-8(r30)
  182  000011fc  001ee820	add	r29,r0,r30
  183  00001200  8fdefffc	lw	r30,-4(r30)
  184  00001204  4be00000	jr	r31
  185  00001208  54000000	nop
  186  0000120c          	.endproc _QueueNext
  187  0000120c          	.align 2
  188  0000120c          	.proc _QueuePrev
  189  0000120c          	.global _QueuePrev
  190  0000120c          	_QueuePrev:
  191                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
  192  0000120c  afbefffc	sw	-4(r29),r30; push fp
  193  00001210  001df020	add	r30,r0,r29; fp = sp
  194  00001214  afbffff8	sw	-8(r29),r31; push ret addr
  195  00001218  2fbd0008	subui	r29,r29,#8; alloc local storage
  196  0000121c  8fc10000	lw	r1,(r30)
  197  00001220  8c210004	lw	r1,4(r1)
  198  00001224  8fdffff8	lw	r31,-8(r30)
  199  00001228  001ee820	add	r29,r0,r30
  200  0000122c  8fdefffc	lw	r30,-4(r30)
  201  00001230  4be00000	jr	r31
  202  00001234  54000000	nop
  203  00001238          	.endproc _QueuePrev
  204  00001238          	.align 2
  205  00001238          	.proc _QueueFirst
  206  00001238          	.global _QueueFirst
  207  00001238          	_QueueFirst:
  208                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
  209  00001238  afbefffc	sw	-4(r29),r30; push fp
  210  0000123c  001df020	add	r30,r0,r29; fp = sp
  211  00001240  afbffff8	sw	-8(r29),r31; push ret addr
  212  00001244  2fbd0008	subui	r29,r29,#8; alloc local storage
  213  00001248  8fc10000	lw	r1,(r30)
  214  0000124c  8c210000	lw	r1,(r1)
  215  00001250  8fdffff8	lw	r31,-8(r30)
  216  00001254  001ee820	add	r29,r0,r30
  217  00001258  8fdefffc	lw	r30,-4(r30)
  218  0000125c  4be00000	jr	r31
  219  00001260  54000000	nop
  220  00001264          	.endproc _QueueFirst
  221  00001264          	.align 2
  222  00001264          	.proc _QueueLast
  223  00001264          	.global _QueueLast
  224  00001264          	_QueueLast:
  225                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
  226  00001264  afbefffc	sw	-4(r29),r30; push fp
  227  00001268  001df020	add	r30,r0,r29; fp = sp
  228  0000126c  afbffff8	sw	-8(r29),r31; push ret addr
  229  00001270  2fbd0008	subui	r29,r29,#8; alloc local storage
  230  00001274  8fc10000	lw	r1,(r30)
  231  00001278  8c210004	lw	r1,4(r1)
  232  0000127c  8fdffff8	lw	r31,-8(r30)
  233  00001280  001ee820	add	r29,r0,r30
  234  00001284  8fdefffc	lw	r30,-4(r30)
  235  00001288  4be00000	jr	r31
  236  0000128c  54000000	nop
  237  00001290          	.endproc _QueueLast
  238  00001290          	.align 2
  239  00001290          	.proc _QueueInsertAfter
  240  00001290          	.global _QueueInsertAfter
  241  00001290          	_QueueInsertAfter:
  242                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
  243  00001290  afbefffc	sw	-4(r29),r30; push fp
  244  00001294  001df020	add	r30,r0,r29; fp = sp
  245  00001298  afbffff8	sw	-8(r29),r31; push ret addr
  246  0000129c  2fbd0010	subui	r29,r29,#16; alloc local storage
  247  000012a0  afa20000	sw	0(r29),r2
  248  000012a4  afa30004	sw	4(r29),r3
  249  000012a8  8fc30000	lw	r3,(r30)
  250  000012ac  8fc20004	lw	r2,4(r30)
  251  000012b0  8fc10008	lw	r1,8(r30)
  252  000012b4  ac230008	sw	8(r1),r3
  253  000012b8  ac220004	sw	4(r1),r2
  254  000012bc  8c5f0000	lw	r31,(r2)
  255  000012c0  ac3f0000	sw	(r1),r31
  256  000012c4  ac410000	sw	(r2),r1
  257  000012c8  8c220000	lw	r2,(r1)
  258  000012cc  ac410004	sw	4(r2),r1
  259  000012d0  8c610008	lw	r1,8(r3)
  260  000012d4  20210001	addi	r1,r1,#1
  261  000012d8  ac610008	sw	8(r3),r1
  262  000012dc  8fa20000	lw	r2,0(r29)
  263  000012e0  8fa30004	lw	r3,4(r29)
  264  000012e4  8fdffff8	lw	r31,-8(r30)
  265  000012e8  001ee820	add	r29,r0,r30
  266  000012ec  8fdefffc	lw	r30,-4(r30)
  267  000012f0  4be00000	jr	r31
  268  000012f4  54000000	nop
  269  000012f8          	.endproc _QueueInsertAfter
  270  000012f8          	.align 2
  271  000012f8          	.proc _QueueInsertFirst
  272  000012f8          	.global _QueueInsertFirst
  273  000012f8          	_QueueInsertFirst:
  274                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
  275  000012f8  afbefffc	sw	-4(r29),r30; push fp
  276  000012fc  001df020	add	r30,r0,r29; fp = sp
  277  00001300  afbffff8	sw	-8(r29),r31; push ret addr
  278  00001304  2fbd0010	subui	r29,r29,#16; alloc local storage
  279  00001308  afa20000	sw	0(r29),r2
  280  0000130c  afa30004	sw	4(r29),r3
  281  00001310  8fc30000	lw	r3,(r30)
  282  00001314  8fc10004	lw	r1,4(r30)
  283  00001318  ac230008	sw	8(r1),r3
  284  0000131c  ac230004	sw	4(r1),r3
  285  00001320  8c7f0000	lw	r31,(r3)
  286  00001324  ac3f0000	sw	(r1),r31
  287  00001328  ac610000	sw	(r3),r1
  288  0000132c  8c220000	lw	r2,(r1)
  289  00001330  ac410004	sw	4(r2),r1
  290  00001334  8c610008	lw	r1,8(r3)
  291  00001338  20210001	addi	r1,r1,#1
  292  0000133c  ac610008	sw	8(r3),r1
  293  00001340  8fa20000	lw	r2,0(r29)
  294  00001344  8fa30004	lw	r3,4(r29)
  295  00001348  8fdffff8	lw	r31,-8(r30)
  296  0000134c  001ee820	add	r29,r0,r30
  297  00001350  8fdefffc	lw	r30,-4(r30)
  298  00001354  4be00000	jr	r31
  299  00001358  54000000	nop
  300  0000135c          	.endproc _QueueInsertFirst
  301  0000135c          	.align 2
  302  0000135c          	.proc _QueueInsertLast
  303  0000135c          	.global _QueueInsertLast
  304  0000135c          	_QueueInsertLast:
  305                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
  306  0000135c  afbefffc	sw	-4(r29),r30; push fp
  307  00001360  001df020	add	r30,r0,r29; fp = sp
  308  00001364  afbffff8	sw	-8(r29),r31; push ret addr
  309  00001368  2fbd0010	subui	r29,r29,#16; alloc local storage
  310  0000136c  afa20000	sw	0(r29),r2
  311  00001370  afa30004	sw	4(r29),r3
  312  00001374  8fc30000	lw	r3,(r30)
  313  00001378  8fc10004	lw	r1,4(r30)
  314  0000137c  8c620004	lw	r2,4(r3)
  315  00001380  ac230008	sw	8(r1),r3
  316  00001384  ac220004	sw	4(r1),r2
  317  00001388  8c5f0000	lw	r31,(r2)
  318  0000138c  ac3f0000	sw	(r1),r31
  319  00001390  ac410000	sw	(r2),r1
  320  00001394  8c220000	lw	r2,(r1)
  321  00001398  ac410004	sw	4(r2),r1
  322  0000139c  8c610008	lw	r1,8(r3)
  323  000013a0  20210001	addi	r1,r1,#1
  324  000013a4  ac610008	sw	8(r3),r1
  325  000013a8  8fa20000	lw	r2,0(r29)
  326  000013ac  8fa30004	lw	r3,4(r29)
  327  000013b0  8fdffff8	lw	r31,-8(r30)
  328  000013b4  001ee820	add	r29,r0,r30
  329  000013b8  8fdefffc	lw	r30,-4(r30)
  330  000013bc  4be00000	jr	r31
  331  000013c0  54000000	nop
  332  000013c4          	.endproc _QueueInsertLast
  333  000013c4          	.align 2
  334  000013c4          	.proc _QueueRemove
  335  000013c4          	.global _QueueRemove
  336  000013c4          	_QueueRemove:
  337                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
  338  000013c4  afbefffc	sw	-4(r29),r30; push fp
  339  000013c8  001df020	add	r30,r0,r29; fp = sp
  340  000013cc  afbffff8	sw	-8(r29),r31; push ret addr
  341  000013d0  2fbd0010	subui	r29,r29,#16; alloc local storage
  342  000013d4  afa20000	sw	0(r29),r2
  343  000013d8  afa30004	sw	4(r29),r3
  344  000013dc  8fdf0000	lw	r31,(r30)
  345  000013e0  8fe10008	lw	r1,8(r31)
  346  000013e4  8c210008	lw	r1,8(r1)
  347  000013e8  6c210000	sgti	r1,r1,#0
  348  000013ec  1020002c	beqz	r1,L44_LF0
  349  000013f0  54000000	nop; not filled.
  350  000013f4  8fe10004	lw	r1,4(r31)
  351  000013f8  8fe30000	lw	r3,(r31)
  352  000013fc  ac230000	sw	(r1),r3
  353  00001400  8fe10000	lw	r1,(r31)
  354  00001404  8fe30004	lw	r3,4(r31)
  355  00001408  ac230004	sw	4(r1),r3
  356  0000140c  8fe20008	lw	r2,8(r31)
  357  00001410  8c410008	lw	r1,8(r2)
  358  00001414  2021ffff	addi	r1,r1,#-1
  359  00001418  ac410008	sw	8(r2),r1
  360  0000141c          	L44_LF0:
  361  0000141c  20030000	addi	r3,r0,#0
  362  00001420  afe30000	sw	(r31),r3
  363  00001424  8fa20000	lw	r2,0(r29)
  364  00001428  8fa30004	lw	r3,4(r29)
  365  0000142c  8fdffff8	lw	r31,-8(r30)
  366  00001430  001ee820	add	r29,r0,r30
  367  00001434  8fdefffc	lw	r30,-4(r30)
  368  00001438  4be00000	jr	r31
  369  0000143c  54000000	nop
  370  00001440          	.endproc _QueueRemove
  371  00001440          	.align 2
  372  00001440          	.proc _QueueLength
  373  00001440          	.global _QueueLength
  374  00001440          	_QueueLength:
  375                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
  376  00001440  afbefffc	sw	-4(r29),r30; push fp
  377  00001444  001df020	add	r30,r0,r29; fp = sp
  378  00001448  afbffff8	sw	-8(r29),r31; push ret addr
  379  0000144c  2fbd0008	subui	r29,r29,#8; alloc local storage
  380  00001450  8fc10000	lw	r1,(r30)
  381  00001454  8c210008	lw	r1,8(r1)
  382  00001458  8fdffff8	lw	r31,-8(r30)
  383  0000145c  001ee820	add	r29,r0,r30
  384  00001460  8fdefffc	lw	r30,-4(r30)
  385  00001464  4be00000	jr	r31
  386  00001468  54000000	nop
  387  0000146c          	.endproc _QueueLength
  388  0000146c          	.align 2
  389  0000146c          	.proc _QueueEmpty
  390  0000146c          	.global _QueueEmpty
  391  0000146c          	_QueueEmpty:
  392                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
  393  0000146c  afbefffc	sw	-4(r29),r30; push fp
  394  00001470  001df020	add	r30,r0,r29; fp = sp
  395  00001474  afbffff8	sw	-8(r29),r31; push ret addr
  396  00001478  2fbd0008	subui	r29,r29,#8; alloc local storage
  397  0000147c  8fc10000	lw	r1,(r30)
  398  00001480  8c210008	lw	r1,8(r1)
  399  00001484  60210000	seqi	r1,r1,#0
  400  00001488  8fdffff8	lw	r31,-8(r30)
  401  0000148c  001ee820	add	r29,r0,r30
  402  00001490  8fdefffc	lw	r30,-4(r30)
  403  00001494  4be00000	jr	r31
  404  00001498  54000000	nop
  405  0000149c          	.endproc _QueueEmpty
  406  0000149c          	.data
  407  0000b000          	.align 2
  408  0000b000          	LC0_LF0:
  409  0000b000  41747465	.ascii "Attepmting to open %s mode=%d.\n\000"
  409  0000b004  706d7469	
  409  0000b008  6e672074	
  409  0000b00c  6f206f70	
  409  0000b010  656e2025	
  409  0000b014  73206d6f	
  409  0000b018  64653d25	
  409  0000b01c  642e0a00	
  410  0000b020          	.align 2
  411  0000b020          	LC1_LF0:
  412  0000b020  646c783a	.ascii "dlx:\000"
  412  0000b024  00      	
  413  0000b025          	.align 2
  414  0000b028          	LC2_LF0:
  415  0000b028  46696c65	.ascii "File %s opening in file system %d.\n\000"
  415  0000b02c  20257320	
  415  0000b030  6f70656e	
  415  0000b034  696e6720	
  415  0000b038  696e2066	
  415  0000b03c  696c6520	
  415  0000b040  73797374	
  415  0000b044  656d2025	
  415  0000b048  642e0a00	
  416  0000b04c          	.align 2
  417  0000b04c          	LC3_LF0:
  418  0000b04c  4f70656e	.ascii "Opened %s in FS %d, mode=%d slot=%d.\n\000"
  418  0000b050  65642025	
  418  0000b054  7320696e	
  418  0000b058  20465320	
  418  0000b05c  25642c20	
  418  0000b060  6d6f6465	
  418  0000b064  3d256420	
  418  0000b068  736c6f74	
  418  0000b06c  3d25642e	
  418  0000b070  0a00    	
  419  0000b072          	.text
  420  0000149c          	.align 2
  421  0000149c          	.proc _FsOpen
  422  0000149c          	.global _FsOpen
  423  0000149c          	_FsOpen:
  424                      ;  Function 'FsOpen'; 0 bytes of locals, 7 regs to save.
  425  0000149c  afbefffc	sw	-4(r29),r30; push fp
  426  000014a0  001df020	add	r30,r0,r29; fp = sp
  427  000014a4  afbffff8	sw	-8(r29),r31; push ret addr
  428  000014a8  2fbd0028	subui	r29,r29,#40; alloc local storage
  429  000014ac  afa20000	sw	0(r29),r2
  430  000014b0  afa30004	sw	4(r29),r3
  431  000014b4  afa40008	sw	8(r29),r4
  432  000014b8  afa5000c	sw	12(r29),r5
  433  000014bc  afa60010	sw	16(r29),r6
  434  000014c0  afa70014	sw	20(r29),r7
  435  000014c4  afa80018	sw	24(r29),r8
  436  000014c8  8fc40000	lw	r4,(r30)
  437  000014cc  8fc50004	lw	r5,4(r30)
  438  000014d0  23bdfff8	addi	r29,r29,#-8
  439  000014d4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
  440  000014d8  2442fc26	addui	r2,r2,(_debugstr)&0xffff
  441  000014dc  afa20000	sw	(r29),r2
  442  000014e0  20080066	addi	r8,r0,#102
  443  000014e4  afa80004	sw	4(r29),r8
  444  000014e8  0c002630	jal	_dindex
  445  000014ec  54000000	nop; not filled.
  446  000014f0  23bd0008	addi	r29,r29,#8
  447  000014f4  64210000	snei	r1,r1,#0
  448  000014f8  1420002c	bnez	r1,L59_LF0
  449  000014fc  54000000	nop; not filled.
  450  00001500  23bdfff8	addi	r29,r29,#-8
  451  00001504  afa20000	sw	(r29),r2
  452  00001508  2008002b	addi	r8,r0,#43
  453  0000150c  afa80004	sw	4(r29),r8
  454  00001510  0c002608	jal	_dindex
  455  00001514  54000000	nop; not filled.
  456  00001518  23bd0008	addi	r29,r29,#8
  457  0000151c  64210000	snei	r1,r1,#0
  458  00001520  10200028	beqz	r1,L58_LF0
  459  00001524  54000000	nop; not filled.
  460  00001528          	L59_LF0:
  461  00001528  23bdfff0	addi	r29,r29,#-16
  462  0000152c  3c080000	lhi	r8,((LC0_LF0)>>16)&0xffff
  463  00001530  2508b000	addui	r8,r8,(LC0_LF0)&0xffff
  464  00001534  afa80000	sw	(r29),r8
  465  00001538  afa40004	sw	4(r29),r4
  466  0000153c  afa50008	sw	8(r29),r5
  467  00001540  0c008c3c	jal	_printf
  468  00001544  54000000	nop; not filled.
  469  00001548  23bd0010	addi	r29,r29,#16
  470  0000154c          	L58_LF0:
  471  0000154c  30a50003	andi	r5,r5,#3
  472  00001550  64a10000	snei	r1,r5,#0
  473  00001554  10200044	beqz	r1,L77_LF0
  474  00001558  54000000	nop; not filled.
  475  0000155c  20030000	addi	r3,r0,#0
  476  00001560  3c060000	lhi	r6,((_openfiles_LF0)>>16)&0xffff
  477  00001564  24c6b0d8	addui	r6,r6,(_openfiles_LF0)&0xffff
  478  00001568  00061020	add	r2,r0,r6
  479  0000156c          	L64_LF0:
  480  0000156c  8c410004	lw	r1,4(r2)
  481  00001570  64210000	snei	r1,r1,#0
  482  00001574  10200018	beqz	r1,L62_LF0
  483  00001578  54000000	nop; not filled.
  484  0000157c  2042010c	addi	r2,r2,#268
  485  00001580  20630001	addi	r3,r3,#1
  486  00001584  7061001f	slei	r1,r3,#31
  487  00001588  1420ffe0	bnez	r1,L64_LF0
  488  0000158c  54000000	nop; not filled.
  489  00001590          	L62_LF0:
  490  00001590  6c61001f	sgti	r1,r3,#31
  491  00001594  10200010	beqz	r1,L67_LF0
  492  00001598  54000000	nop; not filled.
  493  0000159c          	L77_LF0:
  494  0000159c  2001ffff	addi	r1,r0,#-1
  495  000015a0  08000224	j	L76_LF0
  496  000015a4  54000000	nop; not filled.
  497  000015a8          	L67_LF0:
  498  000015a8  50610004	slli	r1,r3,#0x4
  499  000015ac  00230820	add	r1,r1,r3
  500  000015b0  50210002	slli	r1,r1,#0x2
  501  000015b4  00230822	sub	r1,r1,r3
  502  000015b8  50210002	slli	r1,r1,#0x2
  503  000015bc  00261020	add	r2,r1,r6
  504  000015c0  ac450004	sw	4(r2),r5
  505  000015c4  23bdfff0	addi	r29,r29,#-16
  506  000015c8  afa40000	sw	(r29),r4
  507  000015cc  3c010000	lhi	r1,((LC1_LF0)>>16)&0xffff
  508  000015d0  2421b020	addui	r1,r1,(LC1_LF0)&0xffff
  509  000015d4  afa10004	sw	4(r29),r1
  510  000015d8  20080004	addi	r8,r0,#4
  511  000015dc  afa80008	sw	8(r29),r8
  512  000015e0  0c0021f4	jal	_dstrncmp
  513  000015e4  54000000	nop; not filled.
  514  000015e8  23bd0010	addi	r29,r29,#16
  515  000015ec  64210000	snei	r1,r1,#0
  516  000015f0  14200014	bnez	r1,L68_LF0
  517  000015f4  54000000	nop; not filled.
  518  000015f8  20840004	addi	r4,r4,#4
  519  000015fc  20080001	addi	r8,r0,#1
  520  00001600  08000008	j	L78_LF0
  521  00001604  54000000	nop; not filled.
  522  00001608          	L68_LF0:
  523  00001608  20080000	addi	r8,r0,#0
  524  0000160c          	L78_LF0:
  525  0000160c  ac480000	sw	(r2),r8
  526  00001610  23bdfff8	addi	r29,r29,#-8
  527  00001614  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
  528  00001618  2442fc26	addui	r2,r2,(_debugstr)&0xffff
  529  0000161c  afa20000	sw	(r29),r2
  530  00001620  20080066	addi	r8,r0,#102
  531  00001624  afa80004	sw	4(r29),r8
  532  00001628  0c0024f0	jal	_dindex
  533  0000162c  54000000	nop; not filled.
  534  00001630  23bd0008	addi	r29,r29,#8
  535  00001634  64210000	snei	r1,r1,#0
  536  00001638  1420002c	bnez	r1,L71_LF0
  537  0000163c  54000000	nop; not filled.
  538  00001640  23bdfff8	addi	r29,r29,#-8
  539  00001644  afa20000	sw	(r29),r2
  540  00001648  2008002b	addi	r8,r0,#43
  541  0000164c  afa80004	sw	4(r29),r8
  542  00001650  0c0024c8	jal	_dindex
  543  00001654  54000000	nop; not filled.
  544  00001658  23bd0008	addi	r29,r29,#8
  545  0000165c  64210000	snei	r1,r1,#0
  546  00001660  1020004c	beqz	r1,L70_LF0
  547  00001664  54000000	nop; not filled.
  548  00001668          	L71_LF0:
  549  00001668  23bdfff0	addi	r29,r29,#-16
  550  0000166c  3c080000	lhi	r8,((LC2_LF0)>>16)&0xffff
  551  00001670  2508b028	addui	r8,r8,(LC2_LF0)&0xffff
  552  00001674  afa80000	sw	(r29),r8
  553  00001678  afa40004	sw	4(r29),r4
  554  0000167c  50610004	slli	r1,r3,#0x4
  555  00001680  00230820	add	r1,r1,r3
  556  00001684  50210002	slli	r1,r1,#0x2
  557  00001688  00230822	sub	r1,r1,r3
  558  0000168c  50210002	slli	r1,r1,#0x2
  559  00001690  3c080000	lhi	r8,((_openfiles_LF0)>>16)&0xffff
  560  00001694  2508b0d8	addui	r8,r8,(_openfiles_LF0)&0xffff
  561  00001698  00280820	add	r1,r1,r8
  562  0000169c  8c210000	lw	r1,(r1)
  563  000016a0  afa10008	sw	8(r29),r1
  564  000016a4  0c008ad8	jal	_printf
  565  000016a8  54000000	nop; not filled.
  566  000016ac  23bd0010	addi	r29,r29,#16
  567  000016b0          	L70_LF0:
  568  000016b0  23bdfff0	addi	r29,r29,#-16
  569  000016b4  50610004	slli	r1,r3,#0x4
  570  000016b8  00230820	add	r1,r1,r3
  571  000016bc  50210002	slli	r1,r1,#0x2
  572  000016c0  00230822	sub	r1,r1,r3
  573  000016c4  50260002	slli	r6,r1,#0x2
  574  000016c8  3c080000	lhi	r8,((_openfiles_LF0)>>16)&0xffff
  575  000016cc  2508b0d8	addui	r8,r8,(_openfiles_LF0)&0xffff
  576  000016d0  00c83820	add	r7,r6,r8
  577  000016d4  8ce20000	lw	r2,(r7)
  578  000016d8  50410001	slli	r1,r2,#0x1
  579  000016dc  00220820	add	r1,r1,r2
  580  000016e0  50210003	slli	r1,r1,#0x3
  581  000016e4  3c080000	lhi	r8,((_fs_LF0)>>16)&0xffff
  582  000016e8  2508b0a8	addui	r8,r8,(_fs_LF0)&0xffff
  583  000016ec  00280820	add	r1,r1,r8
  584  000016f0  afa30000	sw	(r29),r3
  585  000016f4  afa40004	sw	4(r29),r4
  586  000016f8  afa50008	sw	8(r29),r5
  587  000016fc  8c210000	lw	r1,(r1)
  588  00001700  4c200000	jalr	r1
  589  00001704  54000000	nop; not filled.
  590  00001708  00011020	add	r2,r0,r1
  591  0000170c  23bd0010	addi	r29,r29,#16
  592  00001710  68410000	slti	r1,r2,#0
  593  00001714  10200024	beqz	r1,L72_LF0
  594  00001718  54000000	nop; not filled.
  595  0000171c  3c080000	lhi	r8,((_openfiles_LF0)>>16)&0xffff
  596  00001720  2508b0d8	addui	r8,r8,(_openfiles_LF0)&0xffff
  597  00001724  00c80820	add	r1,r6,r8
  598  00001728  20080000	addi	r8,r0,#0
  599  0000172c  ac280004	sw	4(r1),r8
  600  00001730  00020820	add	r1,r0,r2
  601  00001734  08000090	j	L76_LF0
  602  00001738  54000000	nop; not filled.
  603  0000173c          	L72_LF0:
  604  0000173c  23bdfff8	addi	r29,r29,#-8
  605  00001740  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
  606  00001744  2442fc26	addui	r2,r2,(_debugstr)&0xffff
  607  00001748  afa20000	sw	(r29),r2
  608  0000174c  20080066	addi	r8,r0,#102
  609  00001750  afa80004	sw	4(r29),r8
  610  00001754  0c0023c4	jal	_dindex
  611  00001758  54000000	nop; not filled.
  612  0000175c  23bd0008	addi	r29,r29,#8
  613  00001760  64210000	snei	r1,r1,#0
  614  00001764  1420002c	bnez	r1,L75_LF0
  615  00001768  54000000	nop; not filled.
  616  0000176c  23bdfff8	addi	r29,r29,#-8
  617  00001770  afa20000	sw	(r29),r2
  618  00001774  2008002b	addi	r8,r0,#43
  619  00001778  afa80004	sw	4(r29),r8
  620  0000177c  0c00239c	jal	_dindex
  621  00001780  54000000	nop; not filled.
  622  00001784  23bd0008	addi	r29,r29,#8
  623  00001788  64210000	snei	r1,r1,#0
  624  0000178c  10200034	beqz	r1,L74_LF0
  625  00001790  54000000	nop; not filled.
  626  00001794          	L75_LF0:
  627  00001794  23bdffe8	addi	r29,r29,#-24
  628  00001798  3c080000	lhi	r8,((LC3_LF0)>>16)&0xffff
  629  0000179c  2508b04c	addui	r8,r8,(LC3_LF0)&0xffff
  630  000017a0  afa80000	sw	(r29),r8
  631  000017a4  afa40004	sw	4(r29),r4
  632  000017a8  8ce70000	lw	r7,(r7)
  633  000017ac  afa70008	sw	8(r29),r7
  634  000017b0  afa5000c	sw	12(r29),r5
  635  000017b4  afa30010	sw	16(r29),r3
  636  000017b8  0c0089c4	jal	_printf
  637  000017bc  54000000	nop; not filled.
  638  000017c0  23bd0018	addi	r29,r29,#24
  639  000017c4          	L74_LF0:
  640  000017c4  00030820	add	r1,r0,r3
  641  000017c8          	L76_LF0:
  642  000017c8  8fa20000	lw	r2,0(r29)
  643  000017cc  8fa30004	lw	r3,4(r29)
  644  000017d0  8fa40008	lw	r4,8(r29)
  645  000017d4  8fa5000c	lw	r5,12(r29)
  646  000017d8  8fa60010	lw	r6,16(r29)
  647  000017dc  8fa70014	lw	r7,20(r29)
  648  000017e0  8fa80018	lw	r8,24(r29)
  649  000017e4  8fdffff8	lw	r31,-8(r30)
  650  000017e8  001ee820	add	r29,r0,r30
  651  000017ec  8fdefffc	lw	r30,-4(r30)
  652  000017f0  4be00000	jr	r31
  653  000017f4  54000000	nop
  654  000017f8          	.endproc _FsOpen
  655  000017f8          	.align 2
  656  000017f8          	.proc _FsClose
  657  000017f8          	.global _FsClose
  658  000017f8          	_FsClose:
  659                      ;  Function 'FsClose'; 0 bytes of locals, 3 regs to save.
  660  000017f8  afbefffc	sw	-4(r29),r30; push fp
  661  000017fc  001df020	add	r30,r0,r29; fp = sp
  662  00001800  afbffff8	sw	-8(r29),r31; push ret addr
  663  00001804  2fbd0018	subui	r29,r29,#24; alloc local storage
  664  00001808  afa20000	sw	0(r29),r2
  665  0000180c  afa30004	sw	4(r29),r3
  666  00001810  afa40008	sw	8(r29),r4
  667  00001814  8fdf0000	lw	r31,(r30)
  668  00001818  20020000	addi	r2,r0,#0
  669  0000181c  23e1ffff	addi	r1,r31,#-1
  670  00001820  7021001e	sleui	r1,r1,#30
  671  00001824  10200038	beqz	r1,L87_LF0
  672  00001828  54000000	nop; not filled.
  673  0000182c  53e10004	slli	r1,r31,#0x4
  674  00001830  003f0820	add	r1,r1,r31
  675  00001834  50210002	slli	r1,r1,#0x2
  676  00001838  003f0822	sub	r1,r1,r31
  677  0000183c  50210002	slli	r1,r1,#0x2
  678  00001840  3c040000	lhi	r4,((_openfiles_LF0)>>16)&0xffff
  679  00001844  2484b0d8	addui	r4,r4,(_openfiles_LF0)&0xffff
  680  00001848  00240820	add	r1,r1,r4
  681  0000184c  8c210004	lw	r1,4(r1)
  682  00001850  64210000	snei	r1,r1,#0
  683  00001854  10200008	beqz	r1,L87_LF0
  684  00001858  54000000	nop; not filled.
  685  0000185c  20020001	addi	r2,r0,#1
  686  00001860          	L87_LF0:
  687  00001860  64410000	snei	r1,r2,#0
  688  00001864  10200074	beqz	r1,L85_LF0
  689  00001868  54000000	nop; not filled.
  690  0000186c  23bdfff8	addi	r29,r29,#-8
  691  00001870  53e10004	slli	r1,r31,#0x4
  692  00001874  003f0820	add	r1,r1,r31
  693  00001878  50210002	slli	r1,r1,#0x2
  694  0000187c  003f0822	sub	r1,r1,r31
  695  00001880  50230002	slli	r3,r1,#0x2
  696  00001884  3c040000	lhi	r4,((_openfiles_LF0)>>16)&0xffff
  697  00001888  2484b0d8	addui	r4,r4,(_openfiles_LF0)&0xffff
  698  0000188c  00640820	add	r1,r3,r4
  699  00001890  8c220000	lw	r2,(r1)
  700  00001894  50410001	slli	r1,r2,#0x1
  701  00001898  00220820	add	r1,r1,r2
  702  0000189c  50210003	slli	r1,r1,#0x3
  703  000018a0  3c040000	lhi	r4,((_fs_LF0)>>16)&0xffff
  704  000018a4  2484b0a8	addui	r4,r4,(_fs_LF0)&0xffff
  705  000018a8  00240820	add	r1,r1,r4
  706  000018ac  afbf0000	sw	(r29),r31
  707  000018b0  8c210010	lw	r1,16(r1)
  708  000018b4  4c200000	jalr	r1
  709  000018b8  54000000	nop; not filled.
  710  000018bc  23bd0008	addi	r29,r29,#8
  711  000018c0  3c040000	lhi	r4,((_openfiles_LF0)>>16)&0xffff
  712  000018c4  2484b0d8	addui	r4,r4,(_openfiles_LF0)&0xffff
  713  000018c8  00641020	add	r2,r3,r4
  714  000018cc  20040000	addi	r4,r0,#0
  715  000018d0  ac440004	sw	4(r2),r4
  716  000018d4  08000008	j	L89_LF0
  717  000018d8  54000000	nop; not filled.
  718  000018dc          	L85_LF0:
  719  000018dc  2001ffff	addi	r1,r0,#-1
  720  000018e0          	L89_LF0:
  721  000018e0  8fa20000	lw	r2,0(r29)
  722  000018e4  8fa30004	lw	r3,4(r29)
  723  000018e8  8fa40008	lw	r4,8(r29)
  724  000018ec  8fdffff8	lw	r31,-8(r30)
  725  000018f0  001ee820	add	r29,r0,r30
  726  000018f4  8fdefffc	lw	r30,-4(r30)
  727  000018f8  4be00000	jr	r31
  728  000018fc  54000000	nop
  729  00001900          	.endproc _FsClose
  730  00001900          	.align 2
  731  00001900          	.proc _FsRead
  732  00001900          	.global _FsRead
  733  00001900          	_FsRead:
  734                      ;  Function 'FsRead'; 0 bytes of locals, 2 regs to save.
  735  00001900  afbefffc	sw	-4(r29),r30; push fp
  736  00001904  001df020	add	r30,r0,r29; fp = sp
  737  00001908  afbffff8	sw	-8(r29),r31; push ret addr
  738  0000190c  2fbd0010	subui	r29,r29,#16; alloc local storage
  739  00001910  afa20000	sw	0(r29),r2
  740  00001914  afa30004	sw	4(r29),r3
  741  00001918  8fdf0000	lw	r31,(r30)
  742  0000191c  20020000	addi	r2,r0,#0
  743  00001920  23e1ffff	addi	r1,r31,#-1
  744  00001924  7021001e	sleui	r1,r1,#30
  745  00001928  10200038	beqz	r1,L97_LF0
  746  0000192c  54000000	nop; not filled.
  747  00001930  53e10004	slli	r1,r31,#0x4
  748  00001934  003f0820	add	r1,r1,r31
  749  00001938  50210002	slli	r1,r1,#0x2
  750  0000193c  003f0822	sub	r1,r1,r31
  751  00001940  50210002	slli	r1,r1,#0x2
  752  00001944  3c030000	lhi	r3,((_openfiles_LF0)>>16)&0xffff
  753  00001948  2463b0d8	addui	r3,r3,(_openfiles_LF0)&0xffff
  754  0000194c  00230820	add	r1,r1,r3
  755  00001950  8c210004	lw	r1,4(r1)
  756  00001954  64210000	snei	r1,r1,#0
  757  00001958  10200008	beqz	r1,L97_LF0
  758  0000195c  54000000	nop; not filled.
  759  00001960  20020001	addi	r2,r0,#1
  760  00001964          	L97_LF0:
  761  00001964  64410000	snei	r1,r2,#0
  762  00001968  10200070	beqz	r1,L95_LF0
  763  0000196c  54000000	nop; not filled.
  764  00001970  23bdfff0	addi	r29,r29,#-16
  765  00001974  53e10004	slli	r1,r31,#0x4
  766  00001978  003f0820	add	r1,r1,r31
  767  0000197c  50210002	slli	r1,r1,#0x2
  768  00001980  003f0822	sub	r1,r1,r31
  769  00001984  50210002	slli	r1,r1,#0x2
  770  00001988  3c030000	lhi	r3,((_openfiles_LF0)>>16)&0xffff
  771  0000198c  2463b0d8	addui	r3,r3,(_openfiles_LF0)&0xffff
  772  00001990  00230820	add	r1,r1,r3
  773  00001994  8c220000	lw	r2,(r1)
  774  00001998  50410001	slli	r1,r2,#0x1
  775  0000199c  00220820	add	r1,r1,r2
  776  000019a0  50210003	slli	r1,r1,#0x3
  777  000019a4  3c030000	lhi	r3,((_fs_LF0)>>16)&0xffff
  778  000019a8  2463b0a8	addui	r3,r3,(_fs_LF0)&0xffff
  779  000019ac  00230820	add	r1,r1,r3
  780  000019b0  afbf0000	sw	(r29),r31
  781  000019b4  8fc30004	lw	r3,4(r30)
  782  000019b8  afa30004	sw	4(r29),r3
  783  000019bc  8fc30008	lw	r3,8(r30)
  784  000019c0  afa30008	sw	8(r29),r3
  785  000019c4  8c210004	lw	r1,4(r1)
  786  000019c8  4c200000	jalr	r1
  787  000019cc  54000000	nop; not filled.
  788  000019d0  23bd0010	addi	r29,r29,#16
  789  000019d4  08000008	j	L94_LF0
  790  000019d8  54000000	nop; not filled.
  791  000019dc          	L95_LF0:
  792  000019dc  2001ffff	addi	r1,r0,#-1
  793  000019e0          	L94_LF0:
  794  000019e0  8fa20000	lw	r2,0(r29)
  795  000019e4  8fa30004	lw	r3,4(r29)
  796  000019e8  8fdffff8	lw	r31,-8(r30)
  797  000019ec  001ee820	add	r29,r0,r30
  798  000019f0  8fdefffc	lw	r30,-4(r30)
  799  000019f4  4be00000	jr	r31
  800  000019f8  54000000	nop
  801  000019fc          	.endproc _FsRead
  802  000019fc          	.align 2
  803  000019fc          	.proc _FsWrite
  804  000019fc          	.global _FsWrite
  805  000019fc          	_FsWrite:
  806                      ;  Function 'FsWrite'; 0 bytes of locals, 2 regs to save.
  807  000019fc  afbefffc	sw	-4(r29),r30; push fp
  808  00001a00  001df020	add	r30,r0,r29; fp = sp
  809  00001a04  afbffff8	sw	-8(r29),r31; push ret addr
  810  00001a08  2fbd0010	subui	r29,r29,#16; alloc local storage
  811  00001a0c  afa20000	sw	0(r29),r2
  812  00001a10  afa30004	sw	4(r29),r3
  813  00001a14  8fdf0000	lw	r31,(r30)
  814  00001a18  20020000	addi	r2,r0,#0
  815  00001a1c  23e1ffff	addi	r1,r31,#-1
  816  00001a20  7021001e	sleui	r1,r1,#30
  817  00001a24  10200038	beqz	r1,L106_LF0
  818  00001a28  54000000	nop; not filled.
  819  00001a2c  53e10004	slli	r1,r31,#0x4
  820  00001a30  003f0820	add	r1,r1,r31
  821  00001a34  50210002	slli	r1,r1,#0x2
  822  00001a38  003f0822	sub	r1,r1,r31
  823  00001a3c  50210002	slli	r1,r1,#0x2
  824  00001a40  3c030000	lhi	r3,((_openfiles_LF0)>>16)&0xffff
  825  00001a44  2463b0d8	addui	r3,r3,(_openfiles_LF0)&0xffff
  826  00001a48  00230820	add	r1,r1,r3
  827  00001a4c  8c210004	lw	r1,4(r1)
  828  00001a50  64210000	snei	r1,r1,#0
  829  00001a54  10200008	beqz	r1,L106_LF0
  830  00001a58  54000000	nop; not filled.
  831  00001a5c  20020001	addi	r2,r0,#1
  832  00001a60          	L106_LF0:
  833  00001a60  64410000	snei	r1,r2,#0
  834  00001a64  10200070	beqz	r1,L104_LF0
  835  00001a68  54000000	nop; not filled.
  836  00001a6c  23bdfff0	addi	r29,r29,#-16
  837  00001a70  53e10004	slli	r1,r31,#0x4
  838  00001a74  003f0820	add	r1,r1,r31
  839  00001a78  50210002	slli	r1,r1,#0x2
  840  00001a7c  003f0822	sub	r1,r1,r31
  841  00001a80  50210002	slli	r1,r1,#0x2
  842  00001a84  3c030000	lhi	r3,((_openfiles_LF0)>>16)&0xffff
  843  00001a88  2463b0d8	addui	r3,r3,(_openfiles_LF0)&0xffff
  844  00001a8c  00230820	add	r1,r1,r3
  845  00001a90  8c220000	lw	r2,(r1)
  846  00001a94  50410001	slli	r1,r2,#0x1
  847  00001a98  00220820	add	r1,r1,r2
  848  00001a9c  50210003	slli	r1,r1,#0x3
  849  00001aa0  3c030000	lhi	r3,((_fs_LF0)>>16)&0xffff
  850  00001aa4  2463b0a8	addui	r3,r3,(_fs_LF0)&0xffff
  851  00001aa8  00230820	add	r1,r1,r3
  852  00001aac  afbf0000	sw	(r29),r31
  853  00001ab0  8fc30004	lw	r3,4(r30)
  854  00001ab4  afa30004	sw	4(r29),r3
  855  00001ab8  8fc30008	lw	r3,8(r30)
  856  00001abc  afa30008	sw	8(r29),r3
  857  00001ac0  8c210008	lw	r1,8(r1)
  858  00001ac4  4c200000	jalr	r1
  859  00001ac8  54000000	nop; not filled.
  860  00001acc  23bd0010	addi	r29,r29,#16
  861  00001ad0  08000008	j	L103_LF0
  862  00001ad4  54000000	nop; not filled.
  863  00001ad8          	L104_LF0:
  864  00001ad8  2001ffff	addi	r1,r0,#-1
  865  00001adc          	L103_LF0:
  866  00001adc  8fa20000	lw	r2,0(r29)
  867  00001ae0  8fa30004	lw	r3,4(r29)
  868  00001ae4  8fdffff8	lw	r31,-8(r30)
  869  00001ae8  001ee820	add	r29,r0,r30
  870  00001aec  8fdefffc	lw	r30,-4(r30)
  871  00001af0  4be00000	jr	r31
  872  00001af4  54000000	nop
  873  00001af8          	.endproc _FsWrite
  874  00001af8          	.align 2
  875  00001af8          	.proc _FsSeek
  876  00001af8          	.global _FsSeek
  877  00001af8          	_FsSeek:
  878                      ;  Function 'FsSeek'; 0 bytes of locals, 2 regs to save.
  879  00001af8  afbefffc	sw	-4(r29),r30; push fp
  880  00001afc  001df020	add	r30,r0,r29; fp = sp
  881  00001b00  afbffff8	sw	-8(r29),r31; push ret addr
  882  00001b04  2fbd0010	subui	r29,r29,#16; alloc local storage
  883  00001b08  afa20000	sw	0(r29),r2
  884  00001b0c  afa30004	sw	4(r29),r3
  885  00001b10  8fdf0000	lw	r31,(r30)
  886  00001b14  20020000	addi	r2,r0,#0
  887  00001b18  23e1ffff	addi	r1,r31,#-1
  888  00001b1c  7021001e	sleui	r1,r1,#30
  889  00001b20  10200038	beqz	r1,L115_LF0
  890  00001b24  54000000	nop; not filled.
  891  00001b28  53e10004	slli	r1,r31,#0x4
  892  00001b2c  003f0820	add	r1,r1,r31
  893  00001b30  50210002	slli	r1,r1,#0x2
  894  00001b34  003f0822	sub	r1,r1,r31
  895  00001b38  50210002	slli	r1,r1,#0x2
  896  00001b3c  3c030000	lhi	r3,((_openfiles_LF0)>>16)&0xffff
  897  00001b40  2463b0d8	addui	r3,r3,(_openfiles_LF0)&0xffff
  898  00001b44  00230820	add	r1,r1,r3
  899  00001b48  8c210004	lw	r1,4(r1)
  900  00001b4c  64210000	snei	r1,r1,#0
  901  00001b50  10200008	beqz	r1,L115_LF0
  902  00001b54  54000000	nop; not filled.
  903  00001b58  20020001	addi	r2,r0,#1
  904  00001b5c          	L115_LF0:
  905  00001b5c  64410000	snei	r1,r2,#0
  906  00001b60  10200070	beqz	r1,L113_LF0
  907  00001b64  54000000	nop; not filled.
  908  00001b68  23bdfff0	addi	r29,r29,#-16
  909  00001b6c  53e10004	slli	r1,r31,#0x4
  910  00001b70  003f0820	add	r1,r1,r31
  911  00001b74  50210002	slli	r1,r1,#0x2
  912  00001b78  003f0822	sub	r1,r1,r31
  913  00001b7c  50210002	slli	r1,r1,#0x2
  914  00001b80  3c030000	lhi	r3,((_openfiles_LF0)>>16)&0xffff
  915  00001b84  2463b0d8	addui	r3,r3,(_openfiles_LF0)&0xffff
  916  00001b88  00230820	add	r1,r1,r3
  917  00001b8c  8c220000	lw	r2,(r1)
  918  00001b90  50410001	slli	r1,r2,#0x1
  919  00001b94  00220820	add	r1,r1,r2
  920  00001b98  50210003	slli	r1,r1,#0x3
  921  00001b9c  3c030000	lhi	r3,((_fs_LF0)>>16)&0xffff
  922  00001ba0  2463b0a8	addui	r3,r3,(_fs_LF0)&0xffff
  923  00001ba4  00230820	add	r1,r1,r3
  924  00001ba8  afbf0000	sw	(r29),r31
  925  00001bac  8fc30004	lw	r3,4(r30)
  926  00001bb0  afa30004	sw	4(r29),r3
  927  00001bb4  8fc30008	lw	r3,8(r30)
  928  00001bb8  afa30008	sw	8(r29),r3
  929  00001bbc  8c21000c	lw	r1,12(r1)
  930  00001bc0  4c200000	jalr	r1
  931  00001bc4  54000000	nop; not filled.
  932  00001bc8  23bd0010	addi	r29,r29,#16
  933  00001bcc  08000008	j	L112_LF0
  934  00001bd0  54000000	nop; not filled.
  935  00001bd4          	L113_LF0:
  936  00001bd4  2001ffff	addi	r1,r0,#-1
  937  00001bd8          	L112_LF0:
  938  00001bd8  8fa20000	lw	r2,0(r29)
  939  00001bdc  8fa30004	lw	r3,4(r29)
  940  00001be0  8fdffff8	lw	r31,-8(r30)
  941  00001be4  001ee820	add	r29,r0,r30
  942  00001be8  8fdefffc	lw	r30,-4(r30)
  943  00001bec  4be00000	jr	r31
  944  00001bf0  54000000	nop
  945  00001bf4          	.endproc _FsSeek
  946  00001bf4          	.align 2
  947  00001bf4          	.proc _FsDelete
  948  00001bf4          	.global _FsDelete
  949  00001bf4          	_FsDelete:
  950                      ;  Function 'FsDelete'; 0 bytes of locals, 2 regs to save.
  951  00001bf4  afbefffc	sw	-4(r29),r30; push fp
  952  00001bf8  001df020	add	r30,r0,r29; fp = sp
  953  00001bfc  afbffff8	sw	-8(r29),r31; push ret addr
  954  00001c00  2fbd0010	subui	r29,r29,#16; alloc local storage
  955  00001c04  afa20000	sw	0(r29),r2
  956  00001c08  afa30004	sw	4(r29),r3
  957  00001c0c  8fc20000	lw	r2,(r30)
  958  00001c10  23bdfff0	addi	r29,r29,#-16
  959  00001c14  afa20000	sw	(r29),r2
  960  00001c18  3c010000	lhi	r1,((LC1_LF0)>>16)&0xffff
  961  00001c1c  2421b020	addui	r1,r1,(LC1_LF0)&0xffff
  962  00001c20  afa10004	sw	4(r29),r1
  963  00001c24  20030004	addi	r3,r0,#4
  964  00001c28  afa30008	sw	8(r29),r3
  965  00001c2c  0c001ba8	jal	_dstrncmp
  966  00001c30  54000000	nop; not filled.
  967  00001c34  23bd0010	addi	r29,r29,#16
  968  00001c38  64210000	snei	r1,r1,#0
  969  00001c3c  1420001c	bnez	r1,L121_LF0
  970  00001c40  54000000	nop; not filled.
  971  00001c44  20420004	addi	r2,r2,#4
  972  00001c48  23bdfff8	addi	r29,r29,#-8
  973  00001c4c  3c010000	lhi	r1,((_fs_LF0+44)>>16)&0xffff
  974  00001c50  2421b0d4	addui	r1,r1,(_fs_LF0+44)&0xffff
  975  00001c54  08000010	j	L123_LF0
  976  00001c58  54000000	nop; not filled.
  977  00001c5c          	L121_LF0:
  978  00001c5c  23bdfff8	addi	r29,r29,#-8
  979  00001c60  3c010000	lhi	r1,((_fs_LF0+20)>>16)&0xffff
  980  00001c64  2421b0bc	addui	r1,r1,(_fs_LF0+20)&0xffff
  981  00001c68          	L123_LF0:
  982  00001c68  afa20000	sw	(r29),r2
  983  00001c6c  8c210000	lw	r1,(r1)
  984  00001c70  4c200000	jalr	r1
  985  00001c74  54000000	nop; not filled.
  986  00001c78  23bd0008	addi	r29,r29,#8
  987  00001c7c  8fa20000	lw	r2,0(r29)
  988  00001c80  8fa30004	lw	r3,4(r29)
  989  00001c84  8fdffff8	lw	r31,-8(r30)
  990  00001c88  001ee820	add	r29,r0,r30
  991  00001c8c  8fdefffc	lw	r30,-4(r30)
  992  00001c90  4be00000	jr	r31
  993  00001c94  54000000	nop
  994  00001c98          	.endproc _FsDelete
  995  00001c98          	.data
  996  0000b072          	.align 2
  997  0000b074          	LC4_LF0:
  998  0000b074  41747465	.ascii "Attempting to open file %s into desc %d, mode %d.\n\000"
  998  0000b078  6d707469	
  998  0000b07c  6e672074	
  998  0000b080  6f206f70	
  998  0000b084  656e2066	
  998  0000b088  696c6520	
  998  0000b08c  25732069	
  998  0000b090  6e746f20	
  998  0000b094  64657363	
  998  0000b098  2025642c	
  998  0000b09c  206d6f64	
  998  0000b0a0  65202564	
  998  0000b0a4  2e0a00  	
  999  0000b0a7          	.text
 1000  00001c98          	.align 2
 1001  00001c98          	.proc _FsUnixOpen
 1002  00001c98          	.global _FsUnixOpen
 1003  00001c98          	_FsUnixOpen:
 1004                      ;  Function 'FsUnixOpen'; 0 bytes of locals, 5 regs to save.
 1005  00001c98  afbefffc	sw	-4(r29),r30; push fp
 1006  00001c9c  001df020	add	r30,r0,r29; fp = sp
 1007  00001ca0  afbffff8	sw	-8(r29),r31; push ret addr
 1008  00001ca4  2fbd0020	subui	r29,r29,#32; alloc local storage
 1009  00001ca8  afa20000	sw	0(r29),r2
 1010  00001cac  afa30004	sw	4(r29),r3
 1011  00001cb0  afa40008	sw	8(r29),r4
 1012  00001cb4  afa5000c	sw	12(r29),r5
 1013  00001cb8  afa60010	sw	16(r29),r6
 1014  00001cbc  8fc40000	lw	r4,(r30)
 1015  00001cc0  8fc30004	lw	r3,4(r30)
 1016  00001cc4  8fc50008	lw	r5,8(r30)
 1017  00001cc8  23bdfff8	addi	r29,r29,#-8
 1018  00001ccc  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 1019  00001cd0  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 1020  00001cd4  afa20000	sw	(r29),r2
 1021  00001cd8  20060066	addi	r6,r0,#102
 1022  00001cdc  afa60004	sw	4(r29),r6
 1023  00001ce0  0c001e38	jal	_dindex
 1024  00001ce4  54000000	nop; not filled.
 1025  00001ce8  23bd0008	addi	r29,r29,#8
 1026  00001cec  64210000	snei	r1,r1,#0
 1027  00001cf0  1420002c	bnez	r1,L130_LF0
 1028  00001cf4  54000000	nop; not filled.
 1029  00001cf8  23bdfff8	addi	r29,r29,#-8
 1030  00001cfc  afa20000	sw	(r29),r2
 1031  00001d00  2006002b	addi	r6,r0,#43
 1032  00001d04  afa60004	sw	4(r29),r6
 1033  00001d08  0c001e10	jal	_dindex
 1034  00001d0c  54000000	nop; not filled.
 1035  00001d10  23bd0008	addi	r29,r29,#8
 1036  00001d14  64210000	snei	r1,r1,#0
 1037  00001d18  1020002c	beqz	r1,L129_LF0
 1038  00001d1c  54000000	nop; not filled.
 1039  00001d20          	L130_LF0:
 1040  00001d20  23bdfff0	addi	r29,r29,#-16
 1041  00001d24  3c060000	lhi	r6,((LC4_LF0)>>16)&0xffff
 1042  00001d28  24c6b074	addui	r6,r6,(LC4_LF0)&0xffff
 1043  00001d2c  afa60000	sw	(r29),r6
 1044  00001d30  afa30004	sw	4(r29),r3
 1045  00001d34  afa40008	sw	8(r29),r4
 1046  00001d38  afa5000c	sw	12(r29),r5
 1047  00001d3c  0c008440	jal	_printf
 1048  00001d40  54000000	nop; not filled.
 1049  00001d44  23bd0010	addi	r29,r29,#16
 1050  00001d48          	L129_LF0:
 1051  00001d48  23bdfff8	addi	r29,r29,#-8
 1052  00001d4c  afa30000	sw	(r29),r3
 1053  00001d50  afa50004	sw	4(r29),r5
 1054  00001d54  0c008398	jal	_open
 1055  00001d58  54000000	nop; not filled.
 1056  00001d5c  00011820	add	r3,r0,r1
 1057  00001d60  50810004	slli	r1,r4,#0x4
 1058  00001d64  00240820	add	r1,r1,r4
 1059  00001d68  50210002	slli	r1,r1,#0x2
 1060  00001d6c  00240822	sub	r1,r1,r4
 1061  00001d70  50210002	slli	r1,r1,#0x2
 1062  00001d74  3c060000	lhi	r6,((_openfiles_LF0)>>16)&0xffff
 1063  00001d78  24c6b0d8	addui	r6,r6,(_openfiles_LF0)&0xffff
 1064  00001d7c  00260820	add	r1,r1,r6
 1065  00001d80  ac230108	sw	264(r1),r3
 1066  00001d84  23bd0008	addi	r29,r29,#8
 1067  00001d88  68620000	slti	r2,r3,#0
 1068  00001d8c  00030820	add	r1,r0,r3
 1069  00001d90  14400008	bnez	r2,L131_LF0
 1070  00001d94  54000000	nop; not filled.
 1071  00001d98  20010001	addi	r1,r0,#1
 1072  00001d9c          	L131_LF0:
 1073  00001d9c  8fa20000	lw	r2,0(r29)
 1074  00001da0  8fa30004	lw	r3,4(r29)
 1075  00001da4  8fa40008	lw	r4,8(r29)
 1076  00001da8  8fa5000c	lw	r5,12(r29)
 1077  00001dac  8fa60010	lw	r6,16(r29)
 1078  00001db0  8fdffff8	lw	r31,-8(r30)
 1079  00001db4  001ee820	add	r29,r0,r30
 1080  00001db8  8fdefffc	lw	r30,-4(r30)
 1081  00001dbc  4be00000	jr	r31
 1082  00001dc0  54000000	nop
 1083  00001dc4          	.endproc _FsUnixOpen
 1084  00001dc4          	.align 2
 1085  00001dc4          	.proc _FsUnixRead
 1086  00001dc4          	.global _FsUnixRead
 1087  00001dc4          	_FsUnixRead:
 1088                      ;  Function 'FsUnixRead'; 0 bytes of locals, 4 regs to save.
 1089  00001dc4  afbefffc	sw	-4(r29),r30; push fp
 1090  00001dc8  001df020	add	r30,r0,r29; fp = sp
 1091  00001dcc  afbffff8	sw	-8(r29),r31; push ret addr
 1092  00001dd0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1093  00001dd4  afa20000	sw	0(r29),r2
 1094  00001dd8  afa30004	sw	4(r29),r3
 1095  00001ddc  afa40008	sw	8(r29),r4
 1096  00001de0  afa5000c	sw	12(r29),r5
 1097  00001de4  8fc20000	lw	r2,(r30)
 1098  00001de8  8fc30004	lw	r3,4(r30)
 1099  00001dec  8fc40008	lw	r4,8(r30)
 1100  00001df0  23bdfff0	addi	r29,r29,#-16
 1101  00001df4  50410004	slli	r1,r2,#0x4
 1102  00001df8  00220820	add	r1,r1,r2
 1103  00001dfc  50210002	slli	r1,r1,#0x2
 1104  00001e00  00220822	sub	r1,r1,r2
 1105  00001e04  50210002	slli	r1,r1,#0x2
 1106  00001e08  3c050000	lhi	r5,((_openfiles_LF0)>>16)&0xffff
 1107  00001e0c  24a5b0d8	addui	r5,r5,(_openfiles_LF0)&0xffff
 1108  00001e10  00250820	add	r1,r1,r5
 1109  00001e14  8c210108	lw	r1,264(r1)
 1110  00001e18  afa10000	sw	(r29),r1
 1111  00001e1c  afa30004	sw	4(r29),r3
 1112  00001e20  afa40008	sw	8(r29),r4
 1113  00001e24  0c0082e0	jal	_read
 1114  00001e28  54000000	nop; not filled.
 1115  00001e2c  23bd0010	addi	r29,r29,#16
 1116  00001e30  8fa20000	lw	r2,0(r29)
 1117  00001e34  8fa30004	lw	r3,4(r29)
 1118  00001e38  8fa40008	lw	r4,8(r29)
 1119  00001e3c  8fa5000c	lw	r5,12(r29)
 1120  00001e40  8fdffff8	lw	r31,-8(r30)
 1121  00001e44  001ee820	add	r29,r0,r30
 1122  00001e48  8fdefffc	lw	r30,-4(r30)
 1123  00001e4c  4be00000	jr	r31
 1124  00001e50  54000000	nop
 1125  00001e54          	.endproc _FsUnixRead
 1126  00001e54          	.align 2
 1127  00001e54          	.proc _FsUnixWrite
 1128  00001e54          	.global _FsUnixWrite
 1129  00001e54          	_FsUnixWrite:
 1130                      ;  Function 'FsUnixWrite'; 0 bytes of locals, 4 regs to save.
 1131  00001e54  afbefffc	sw	-4(r29),r30; push fp
 1132  00001e58  001df020	add	r30,r0,r29; fp = sp
 1133  00001e5c  afbffff8	sw	-8(r29),r31; push ret addr
 1134  00001e60  2fbd0018	subui	r29,r29,#24; alloc local storage
 1135  00001e64  afa20000	sw	0(r29),r2
 1136  00001e68  afa30004	sw	4(r29),r3
 1137  00001e6c  afa40008	sw	8(r29),r4
 1138  00001e70  afa5000c	sw	12(r29),r5
 1139  00001e74  8fc20000	lw	r2,(r30)
 1140  00001e78  8fc30004	lw	r3,4(r30)
 1141  00001e7c  8fc40008	lw	r4,8(r30)
 1142  00001e80  23bdfff0	addi	r29,r29,#-16
 1143  00001e84  50410004	slli	r1,r2,#0x4
 1144  00001e88  00220820	add	r1,r1,r2
 1145  00001e8c  50210002	slli	r1,r1,#0x2
 1146  00001e90  00220822	sub	r1,r1,r2
 1147  00001e94  50210002	slli	r1,r1,#0x2
 1148  00001e98  3c050000	lhi	r5,((_openfiles_LF0)>>16)&0xffff
 1149  00001e9c  24a5b0d8	addui	r5,r5,(_openfiles_LF0)&0xffff
 1150  00001ea0  00250820	add	r1,r1,r5
 1151  00001ea4  8c210108	lw	r1,264(r1)
 1152  00001ea8  afa10000	sw	(r29),r1
 1153  00001eac  afa30004	sw	4(r29),r3
 1154  00001eb0  afa40008	sw	8(r29),r4
 1155  00001eb4  0c00825c	jal	_write
 1156  00001eb8  54000000	nop; not filled.
 1157  00001ebc  23bd0010	addi	r29,r29,#16
 1158  00001ec0  8fa20000	lw	r2,0(r29)
 1159  00001ec4  8fa30004	lw	r3,4(r29)
 1160  00001ec8  8fa40008	lw	r4,8(r29)
 1161  00001ecc  8fa5000c	lw	r5,12(r29)
 1162  00001ed0  8fdffff8	lw	r31,-8(r30)
 1163  00001ed4  001ee820	add	r29,r0,r30
 1164  00001ed8  8fdefffc	lw	r30,-4(r30)
 1165  00001edc  4be00000	jr	r31
 1166  00001ee0  54000000	nop
 1167  00001ee4          	.endproc _FsUnixWrite
 1168  00001ee4          	.align 2
 1169  00001ee4          	.proc _FsUnixSeek
 1170  00001ee4          	.global _FsUnixSeek
 1171  00001ee4          	_FsUnixSeek:
 1172                      ;  Function 'FsUnixSeek'; 0 bytes of locals, 4 regs to save.
 1173  00001ee4  afbefffc	sw	-4(r29),r30; push fp
 1174  00001ee8  001df020	add	r30,r0,r29; fp = sp
 1175  00001eec  afbffff8	sw	-8(r29),r31; push ret addr
 1176  00001ef0  2fbd0018	subui	r29,r29,#24; alloc local storage
 1177  00001ef4  afa20000	sw	0(r29),r2
 1178  00001ef8  afa30004	sw	4(r29),r3
 1179  00001efc  afa40008	sw	8(r29),r4
 1180  00001f00  afa5000c	sw	12(r29),r5
 1181  00001f04  8fc20000	lw	r2,(r30)
 1182  00001f08  8fc30004	lw	r3,4(r30)
 1183  00001f0c  8fc40008	lw	r4,8(r30)
 1184  00001f10  23bdfff0	addi	r29,r29,#-16
 1185  00001f14  50410004	slli	r1,r2,#0x4
 1186  00001f18  00220820	add	r1,r1,r2
 1187  00001f1c  50210002	slli	r1,r1,#0x2
 1188  00001f20  00220822	sub	r1,r1,r2
 1189  00001f24  50210002	slli	r1,r1,#0x2
 1190  00001f28  3c050000	lhi	r5,((_openfiles_LF0)>>16)&0xffff
 1191  00001f2c  24a5b0d8	addui	r5,r5,(_openfiles_LF0)&0xffff
 1192  00001f30  00250820	add	r1,r1,r5
 1193  00001f34  8c210108	lw	r1,264(r1)
 1194  00001f38  afa10000	sw	(r29),r1
 1195  00001f3c  afa30004	sw	4(r29),r3
 1196  00001f40  afa40008	sw	8(r29),r4
 1197  00001f44  0c0081d8	jal	_lseek
 1198  00001f48  54000000	nop; not filled.
 1199  00001f4c  23bd0010	addi	r29,r29,#16
 1200  00001f50  8fa20000	lw	r2,0(r29)
 1201  00001f54  8fa30004	lw	r3,4(r29)
 1202  00001f58  8fa40008	lw	r4,8(r29)
 1203  00001f5c  8fa5000c	lw	r5,12(r29)
 1204  00001f60  8fdffff8	lw	r31,-8(r30)
 1205  00001f64  001ee820	add	r29,r0,r30
 1206  00001f68  8fdefffc	lw	r30,-4(r30)
 1207  00001f6c  4be00000	jr	r31
 1208  00001f70  54000000	nop
 1209  00001f74          	.endproc _FsUnixSeek
 1210  00001f74          	.align 2
 1211  00001f74          	.proc _FsUnixClose
 1212  00001f74          	.global _FsUnixClose
 1213  00001f74          	_FsUnixClose:
 1214                      ;  Function 'FsUnixClose'; 0 bytes of locals, 2 regs to save.
 1215  00001f74  afbefffc	sw	-4(r29),r30; push fp
 1216  00001f78  001df020	add	r30,r0,r29; fp = sp
 1217  00001f7c  afbffff8	sw	-8(r29),r31; push ret addr
 1218  00001f80  2fbd0010	subui	r29,r29,#16; alloc local storage
 1219  00001f84  afa20000	sw	0(r29),r2
 1220  00001f88  afa30004	sw	4(r29),r3
 1221  00001f8c  8fc20000	lw	r2,(r30)
 1222  00001f90  23bdfff8	addi	r29,r29,#-8
 1223  00001f94  50410004	slli	r1,r2,#0x4
 1224  00001f98  00220820	add	r1,r1,r2
 1225  00001f9c  50210002	slli	r1,r1,#0x2
 1226  00001fa0  00220822	sub	r1,r1,r2
 1227  00001fa4  50210002	slli	r1,r1,#0x2
 1228  00001fa8  3c030000	lhi	r3,((_openfiles_LF0)>>16)&0xffff
 1229  00001fac  2463b0d8	addui	r3,r3,(_openfiles_LF0)&0xffff
 1230  00001fb0  00230820	add	r1,r1,r3
 1231  00001fb4  8c210108	lw	r1,264(r1)
 1232  00001fb8  afa10000	sw	(r29),r1
 1233  00001fbc  0c00813c	jal	_close
 1234  00001fc0  54000000	nop; not filled.
 1235  00001fc4  23bd0008	addi	r29,r29,#8
 1236  00001fc8  8fa20000	lw	r2,0(r29)
 1237  00001fcc  8fa30004	lw	r3,4(r29)
 1238  00001fd0  8fdffff8	lw	r31,-8(r30)
 1239  00001fd4  001ee820	add	r29,r0,r30
 1240  00001fd8  8fdefffc	lw	r30,-4(r30)
 1241  00001fdc  4be00000	jr	r31
 1242  00001fe0  54000000	nop
 1243  00001fe4          	.endproc _FsUnixClose
 1244  00001fe4          	.align 2
 1245  00001fe4          	.proc _FsUnixDelete
 1246  00001fe4          	.global _FsUnixDelete
 1247  00001fe4          	_FsUnixDelete:
 1248                      ;  Function 'FsUnixDelete'; 0 bytes of locals, 0 regs to save.
 1249  00001fe4  afbefffc	sw	-4(r29),r30; push fp
 1250  00001fe8  001df020	add	r30,r0,r29; fp = sp
 1251  00001fec  afbffff8	sw	-8(r29),r31; push ret addr
 1252  00001ff0  2fbd0008	subui	r29,r29,#8; alloc local storage
 1253  00001ff4  2001ffff	addi	r1,r0,#-1
 1254  00001ff8  8fdffff8	lw	r31,-8(r30)
 1255  00001ffc  001ee820	add	r29,r0,r30
 1256  00002000  8fdefffc	lw	r30,-4(r30)
 1257  00002004  4be00000	jr	r31
 1258  00002008  54000000	nop
 1259  0000200c          	.endproc _FsUnixDelete
 1260  0000200c          	.align 2
 1261  0000200c          	.proc _FsDlxIo
 1262  0000200c          	.global _FsDlxIo
 1263  0000200c          	_FsDlxIo:
 1264                      ;  Function 'FsDlxIo'; 0 bytes of locals, 0 regs to save.
 1265  0000200c  afbefffc	sw	-4(r29),r30; push fp
 1266  00002010  001df020	add	r30,r0,r29; fp = sp
 1267  00002014  afbffff8	sw	-8(r29),r31; push ret addr
 1268  00002018  2fbd0008	subui	r29,r29,#8; alloc local storage
 1269  0000201c  20010001	addi	r1,r0,#1
 1270  00002020  8fdffff8	lw	r31,-8(r30)
 1271  00002024  001ee820	add	r29,r0,r30
 1272  00002028  8fdefffc	lw	r30,-4(r30)
 1273  0000202c  4be00000	jr	r31
 1274  00002030  54000000	nop
 1275  00002034          	.endproc _FsDlxIo
 1276  00002034          	.align 2
 1277  00002034          	.proc _FsDlxRead
 1278  00002034          	.global _FsDlxRead
 1279  00002034          	_FsDlxRead:
 1280                      ;  Function 'FsDlxRead'; 0 bytes of locals, 0 regs to save.
 1281  00002034  afbefffc	sw	-4(r29),r30; push fp
 1282  00002038  001df020	add	r30,r0,r29; fp = sp
 1283  0000203c  afbffff8	sw	-8(r29),r31; push ret addr
 1284  00002040  2fbd0008	subui	r29,r29,#8; alloc local storage
 1285  00002044  20010001	addi	r1,r0,#1
 1286  00002048  8fdffff8	lw	r31,-8(r30)
 1287  0000204c  001ee820	add	r29,r0,r30
 1288  00002050  8fdefffc	lw	r30,-4(r30)
 1289  00002054  4be00000	jr	r31
 1290  00002058  54000000	nop
 1291  0000205c          	.endproc _FsDlxRead
 1292  0000205c          	.align 2
 1293  0000205c          	.proc _FsDlxWrite
 1294  0000205c          	.global _FsDlxWrite
 1295  0000205c          	_FsDlxWrite:
 1296                      ;  Function 'FsDlxWrite'; 0 bytes of locals, 0 regs to save.
 1297  0000205c  afbefffc	sw	-4(r29),r30; push fp
 1298  00002060  001df020	add	r30,r0,r29; fp = sp
 1299  00002064  afbffff8	sw	-8(r29),r31; push ret addr
 1300  00002068  2fbd0008	subui	r29,r29,#8; alloc local storage
 1301  0000206c  20010001	addi	r1,r0,#1
 1302  00002070  8fdffff8	lw	r31,-8(r30)
 1303  00002074  001ee820	add	r29,r0,r30
 1304  00002078  8fdefffc	lw	r30,-4(r30)
 1305  0000207c  4be00000	jr	r31
 1306  00002080  54000000	nop
 1307  00002084          	.endproc _FsDlxWrite
 1308  00002084          	.align 2
 1309  00002084          	.proc _FsDlxOpen
 1310  00002084          	.global _FsDlxOpen
 1311  00002084          	_FsDlxOpen:
 1312                      ;  Function 'FsDlxOpen'; 0 bytes of locals, 1 regs to save.
 1313  00002084  afbefffc	sw	-4(r29),r30; push fp
 1314  00002088  001df020	add	r30,r0,r29; fp = sp
 1315  0000208c  afbffff8	sw	-8(r29),r31; push ret addr
 1316  00002090  2fbd0010	subui	r29,r29,#16; alloc local storage
 1317  00002094  afa20000	sw	0(r29),r2
 1318  00002098  8fc10000	lw	r1,(r30)
 1319  0000209c  50220004	slli	r2,r1,#0x4
 1320  000020a0  00411020	add	r2,r2,r1
 1321  000020a4  50420002	slli	r2,r2,#0x2
 1322  000020a8  00410822	sub	r1,r2,r1
 1323  000020ac  50210002	slli	r1,r1,#0x2
 1324  000020b0  3c1f0000	lhi	r31,((_openfiles_LF0)>>16)&0xffff
 1325  000020b4  27ffb0d8	addui	r31,r31,(_openfiles_LF0)&0xffff
 1326  000020b8  003f0820	add	r1,r1,r31
 1327  000020bc  201f0000	addi	r31,r0,#0
 1328  000020c0  ac3f0108	sw	264(r1),r31
 1329  000020c4  20010001	addi	r1,r0,#1
 1330  000020c8  8fa20000	lw	r2,0(r29)
 1331  000020cc  8fdffff8	lw	r31,-8(r30)
 1332  000020d0  001ee820	add	r29,r0,r30
 1333  000020d4  8fdefffc	lw	r30,-4(r30)
 1334  000020d8  4be00000	jr	r31
 1335  000020dc  54000000	nop
 1336  000020e0          	.endproc _FsDlxOpen
 1337  000020e0          	.align 2
 1338  000020e0          	.proc _FsDlxSeek
 1339  000020e0          	.global _FsDlxSeek
 1340  000020e0          	_FsDlxSeek:
 1341                      ;  Function 'FsDlxSeek'; 0 bytes of locals, 1 regs to save.
 1342  000020e0  afbefffc	sw	-4(r29),r30; push fp
 1343  000020e4  001df020	add	r30,r0,r29; fp = sp
 1344  000020e8  afbffff8	sw	-8(r29),r31; push ret addr
 1345  000020ec  2fbd0010	subui	r29,r29,#16; alloc local storage
 1346  000020f0  afa20000	sw	0(r29),r2
 1347  000020f4  8fc10000	lw	r1,(r30)
 1348  000020f8  50220004	slli	r2,r1,#0x4
 1349  000020fc  00411020	add	r2,r2,r1
 1350  00002100  50420002	slli	r2,r2,#0x2
 1351  00002104  00410822	sub	r1,r2,r1
 1352  00002108  50210002	slli	r1,r1,#0x2
 1353  0000210c  3c1f0000	lhi	r31,((_openfiles_LF0)>>16)&0xffff
 1354  00002110  27ffb0d8	addui	r31,r31,(_openfiles_LF0)&0xffff
 1355  00002114  003f0820	add	r1,r1,r31
 1356  00002118  8c210108	lw	r1,264(r1)
 1357  0000211c  8fa20000	lw	r2,0(r29)
 1358  00002120  8fdffff8	lw	r31,-8(r30)
 1359  00002124  001ee820	add	r29,r0,r30
 1360  00002128  8fdefffc	lw	r30,-4(r30)
 1361  0000212c  4be00000	jr	r31
 1362  00002130  54000000	nop
 1363  00002134          	.endproc _FsDlxSeek
 1364  00002134          	.align 2
 1365  00002134          	.proc _FsDlxClose
 1366  00002134          	.global _FsDlxClose
 1367  00002134          	_FsDlxClose:
 1368                      ;  Function 'FsDlxClose'; 0 bytes of locals, 0 regs to save.
 1369  00002134  afbefffc	sw	-4(r29),r30; push fp
 1370  00002138  001df020	add	r30,r0,r29; fp = sp
 1371  0000213c  afbffff8	sw	-8(r29),r31; push ret addr
 1372  00002140  2fbd0008	subui	r29,r29,#8; alloc local storage
 1373  00002144  20010001	addi	r1,r0,#1
 1374  00002148  8fdffff8	lw	r31,-8(r30)
 1375  0000214c  001ee820	add	r29,r0,r30
 1376  00002150  8fdefffc	lw	r30,-4(r30)
 1377  00002154  4be00000	jr	r31
 1378  00002158  54000000	nop
 1379  0000215c          	.endproc _FsDlxClose
 1380  0000215c          	.align 2
 1381  0000215c          	.proc _FsDlxDelete
 1382  0000215c          	.global _FsDlxDelete
 1383  0000215c          	_FsDlxDelete:
 1384                      ;  Function 'FsDlxDelete'; 0 bytes of locals, 0 regs to save.
 1385  0000215c  afbefffc	sw	-4(r29),r30; push fp
 1386  00002160  001df020	add	r30,r0,r29; fp = sp
 1387  00002164  afbffff8	sw	-8(r29),r31; push ret addr
 1388  00002168  2fbd0008	subui	r29,r29,#8; alloc local storage
 1389  0000216c  20010001	addi	r1,r0,#1
 1390  00002170  8fdffff8	lw	r31,-8(r30)
 1391  00002174  001ee820	add	r29,r0,r30
 1392  00002178  8fdefffc	lw	r30,-4(r30)
 1393  0000217c  4be00000	jr	r31
 1394  00002180  54000000	nop
 1395  00002184          	.endproc _FsDlxDelete
 1396  00002184          	.align 2
 1397  00002184          	.proc _FsModuleInit
 1398  00002184          	.global _FsModuleInit
 1399  00002184          	_FsModuleInit:
 1400                      ;  Function 'FsModuleInit'; 0 bytes of locals, 2 regs to save.
 1401  00002184  afbefffc	sw	-4(r29),r30; push fp
 1402  00002188  001df020	add	r30,r0,r29; fp = sp
 1403  0000218c  afbffff8	sw	-8(r29),r31; push ret addr
 1404  00002190  2fbd0010	subui	r29,r29,#16; alloc local storage
 1405  00002194  afa20000	sw	0(r29),r2
 1406  00002198  afa30004	sw	4(r29),r3
 1407  0000219c  3c1f0000	lhi	r31,((_openfiles_LF0)>>16)&0xffff
 1408  000021a0  27ffb0d8	addui	r31,r31,(_openfiles_LF0)&0xffff
 1409  000021a4  23e22074	addi	r2,r31,#8308
 1410  000021a8          	L185_LF0:
 1411  000021a8  20030000	addi	r3,r0,#0
 1412  000021ac  afe30004	sw	4(r31),r3
 1413  000021b0  23ff010c	addi	r31,r31,#268
 1414  000021b4  03e2082c	sle	r1,r31,r2
 1415  000021b8  1420ffec	bnez	r1,L185_LF0
 1416  000021bc  54000000	nop; not filled.
 1417  000021c0  3c010000	lhi	r1,((_fs_LF0)>>16)&0xffff
 1418  000021c4  2421b0a8	addui	r1,r1,(_fs_LF0)&0xffff
 1419  000021c8  3c030000	lhi	r3,((_FsUnixOpen)>>16)&0xffff
 1420  000021cc  24631c98	addui	r3,r3,(_FsUnixOpen)&0xffff
 1421  000021d0  ac230000	sw	(r1),r3
 1422  000021d4  3c030000	lhi	r3,((_FsUnixClose)>>16)&0xffff
 1423  000021d8  24631f74	addui	r3,r3,(_FsUnixClose)&0xffff
 1424  000021dc  ac230010	sw	16(r1),r3
 1425  000021e0  3c030000	lhi	r3,((_FsUnixRead)>>16)&0xffff
 1426  000021e4  24631dc4	addui	r3,r3,(_FsUnixRead)&0xffff
 1427  000021e8  ac230004	sw	4(r1),r3
 1428  000021ec  3c030000	lhi	r3,((_FsUnixWrite)>>16)&0xffff
 1429  000021f0  24631e54	addui	r3,r3,(_FsUnixWrite)&0xffff
 1430  000021f4  ac230008	sw	8(r1),r3
 1431  000021f8  3c030000	lhi	r3,((_FsUnixSeek)>>16)&0xffff
 1432  000021fc  24631ee4	addui	r3,r3,(_FsUnixSeek)&0xffff
 1433  00002200  ac23000c	sw	12(r1),r3
 1434  00002204  3c030000	lhi	r3,((_FsUnixDelete)>>16)&0xffff
 1435  00002208  24631fe4	addui	r3,r3,(_FsUnixDelete)&0xffff
 1436  0000220c  ac230014	sw	20(r1),r3
 1437  00002210  3c030000	lhi	r3,((_FsDlxOpen)>>16)&0xffff
 1438  00002214  24632084	addui	r3,r3,(_FsDlxOpen)&0xffff
 1439  00002218  ac230018	sw	24(r1),r3
 1440  0000221c  3c030000	lhi	r3,((_FsDlxClose)>>16)&0xffff
 1441  00002220  24632134	addui	r3,r3,(_FsDlxClose)&0xffff
 1442  00002224  ac230028	sw	40(r1),r3
 1443  00002228  3c030000	lhi	r3,((_FsDlxRead)>>16)&0xffff
 1444  0000222c  24632034	addui	r3,r3,(_FsDlxRead)&0xffff
 1445  00002230  ac23001c	sw	28(r1),r3
 1446  00002234  3c030000	lhi	r3,((_FsDlxWrite)>>16)&0xffff
 1447  00002238  2463205c	addui	r3,r3,(_FsDlxWrite)&0xffff
 1448  0000223c  ac230020	sw	32(r1),r3
 1449  00002240  3c030000	lhi	r3,((_FsDlxSeek)>>16)&0xffff
 1450  00002244  246320e0	addui	r3,r3,(_FsDlxSeek)&0xffff
 1451  00002248  ac230024	sw	36(r1),r3
 1452  0000224c  3c030000	lhi	r3,((_FsDlxDelete)>>16)&0xffff
 1453  00002250  2463215c	addui	r3,r3,(_FsDlxDelete)&0xffff
 1454  00002254  ac23002c	sw	44(r1),r3
 1455  00002258  8fa20000	lw	r2,0(r29)
 1456  0000225c  8fa30004	lw	r3,4(r29)
 1457  00002260  8fdffff8	lw	r31,-8(r30)
 1458  00002264  001ee820	add	r29,r0,r30
 1459  00002268  8fdefffc	lw	r30,-4(r30)
 1460  0000226c  4be00000	jr	r31
 1461  00002270  54000000	nop
 1462  00002274          	.endproc _FsModuleInit
 1463  00002274          	.data
 1464  0000b0a7          	.align 2
 1465  0000b0a8          	_fs_LF0:
 1466  0000b0a8          	.space 48
 1467  0000b0d8          	.align 2
 1468  0000b0d8          	_openfiles_LF0:
 1469  0000b0d8          	.space 8576
 1470                      ; Compiled by GCC
 1471  0000d258          	.text
 1472  00002274          	.align 2
 1473  00002274          	.proc _isspace
 1474  00002274          	.global _isspace
 1475  00002274          	_isspace:
 1476                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 1477  00002274  afbefffc	sw	-4(r29),r30; push fp
 1478  00002278  001df020	add	r30,r0,r29; fp = sp
 1479  0000227c  afbffff8	sw	-8(r29),r31; push ret addr
 1480  00002280  2fbd0010	subui	r29,r29,#16; alloc local storage
 1481  00002284  afa20000	sw	0(r29),r2
 1482  00002288  83c20003	lb	r2,3(r30)
 1483  0000228c  201f0000	addi	r31,r0,#0
 1484  00002290  304100ff	andi	r1,r2,#0x00ff
 1485  00002294  60210020	seqi	r1,r1,#32
 1486  00002298  14200018	bnez	r1,L6_LF1
 1487  0000229c  54000000	nop; not filled.
 1488  000022a0  2041fff7	addi	r1,r2,#-9
 1489  000022a4  302100ff	andi	r1,r1,#0x00ff
 1490  000022a8  70210001	sleui	r1,r1,#1
 1491  000022ac  10200008	beqz	r1,L5_LF1
 1492  000022b0  54000000	nop; not filled.
 1493  000022b4          	L6_LF1:
 1494  000022b4  201f0001	addi	r31,r0,#1
 1495  000022b8          	L5_LF1:
 1496  000022b8  001f0820	add	r1,r0,r31
 1497  000022bc  8fa20000	lw	r2,0(r29)
 1498  000022c0  8fdffff8	lw	r31,-8(r30)
 1499  000022c4  001ee820	add	r29,r0,r30
 1500  000022c8  8fdefffc	lw	r30,-4(r30)
 1501  000022cc  4be00000	jr	r31
 1502  000022d0  54000000	nop
 1503  000022d4          	.endproc _isspace
 1504  000022d4          	.align 2
 1505  000022d4          	.proc _isxdigit
 1506  000022d4          	.global _isxdigit
 1507  000022d4          	_isxdigit:
 1508                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 1509  000022d4  afbefffc	sw	-4(r29),r30; push fp
 1510  000022d8  001df020	add	r30,r0,r29; fp = sp
 1511  000022dc  afbffff8	sw	-8(r29),r31; push ret addr
 1512  000022e0  2fbd0010	subui	r29,r29,#16; alloc local storage
 1513  000022e4  afa20000	sw	0(r29),r2
 1514  000022e8  83df0003	lb	r31,3(r30)
 1515  000022ec  20020000	addi	r2,r0,#0
 1516  000022f0  23e1ffd0	addi	r1,r31,#-48
 1517  000022f4  302100ff	andi	r1,r1,#0x00ff
 1518  000022f8  70210009	sleui	r1,r1,#9
 1519  000022fc  14200028	bnez	r1,L12_LF1
 1520  00002300  54000000	nop; not filled.
 1521  00002304  23e1ff9f	addi	r1,r31,#-97
 1522  00002308  302100ff	andi	r1,r1,#0x00ff
 1523  0000230c  70210005	sleui	r1,r1,#5
 1524  00002310  14200014	bnez	r1,L12_LF1
 1525  00002314  54000000	nop; not filled.
 1526  00002318  33e100ff	andi	r1,r31,#0x00ff
 1527  0000231c  64210041	snei	r1,r1,#65
 1528  00002320  14200008	bnez	r1,L11_LF1
 1529  00002324  54000000	nop; not filled.
 1530  00002328          	L12_LF1:
 1531  00002328  20020001	addi	r2,r0,#1
 1532  0000232c          	L11_LF1:
 1533  0000232c  00020820	add	r1,r0,r2
 1534  00002330  8fa20000	lw	r2,0(r29)
 1535  00002334  8fdffff8	lw	r31,-8(r30)
 1536  00002338  001ee820	add	r29,r0,r30
 1537  0000233c  8fdefffc	lw	r30,-4(r30)
 1538  00002340  4be00000	jr	r31
 1539  00002344  54000000	nop
 1540  00002348          	.endproc _isxdigit
 1541  00002348          	.align 2
 1542  00002348          	.proc _DisableIntrs
 1543  00002348          	.global _DisableIntrs
 1544  00002348          	_DisableIntrs:
 1545                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 1546  00002348  afbefffc	sw	-4(r29),r30; push fp
 1547  0000234c  001df020	add	r30,r0,r29; fp = sp
 1548  00002350  afbffff8	sw	-8(r29),r31; push ret addr
 1549  00002354  2fbd0010	subui	r29,r29,#16; alloc local storage
 1550  00002358  afa20000	sw	0(r29),r2
 1551  0000235c  23bdfff8	addi	r29,r29,#-8
 1552  00002360  2002000f	addi	r2,r0,#15
 1553  00002364  afa20000	sw	(r29),r2
 1554  00002368  0c007cc0	jal	_SetIntrs
 1555  0000236c  54000000	nop; not filled.
 1556  00002370  23bd0008	addi	r29,r29,#8
 1557  00002374  8fa20000	lw	r2,0(r29)
 1558  00002378  8fdffff8	lw	r31,-8(r30)
 1559  0000237c  001ee820	add	r29,r0,r30
 1560  00002380  8fdefffc	lw	r30,-4(r30)
 1561  00002384  4be00000	jr	r31
 1562  00002388  54000000	nop
 1563  0000238c          	.endproc _DisableIntrs
 1564  0000238c          	.align 2
 1565  0000238c          	.proc _EnableIntrs
 1566  0000238c          	.global _EnableIntrs
 1567  0000238c          	_EnableIntrs:
 1568                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 1569  0000238c  afbefffc	sw	-4(r29),r30; push fp
 1570  00002390  001df020	add	r30,r0,r29; fp = sp
 1571  00002394  afbffff8	sw	-8(r29),r31; push ret addr
 1572  00002398  2fbd0010	subui	r29,r29,#16; alloc local storage
 1573  0000239c  afa20000	sw	0(r29),r2
 1574  000023a0  23bdfff8	addi	r29,r29,#-8
 1575  000023a4  20020000	addi	r2,r0,#0
 1576  000023a8  afa20000	sw	(r29),r2
 1577  000023ac  0c007c7c	jal	_SetIntrs
 1578  000023b0  54000000	nop; not filled.
 1579  000023b4  23bd0008	addi	r29,r29,#8
 1580  000023b8  8fa20000	lw	r2,0(r29)
 1581  000023bc  8fdffff8	lw	r31,-8(r30)
 1582  000023c0  001ee820	add	r29,r0,r30
 1583  000023c4  8fdefffc	lw	r30,-4(r30)
 1584  000023c8  4be00000	jr	r31
 1585  000023cc  54000000	nop
 1586  000023d0          	.endproc _EnableIntrs
 1587  000023d0          	.align 2
 1588  000023d0          	.proc _RestoreIntrs
 1589  000023d0          	.global _RestoreIntrs
 1590  000023d0          	_RestoreIntrs:
 1591                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 1592  000023d0  afbefffc	sw	-4(r29),r30; push fp
 1593  000023d4  001df020	add	r30,r0,r29; fp = sp
 1594  000023d8  afbffff8	sw	-8(r29),r31; push ret addr
 1595  000023dc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1596  000023e0  afa20000	sw	0(r29),r2
 1597  000023e4  23bdfff8	addi	r29,r29,#-8
 1598  000023e8  8fc20000	lw	r2,(r30)
 1599  000023ec  afa20000	sw	(r29),r2
 1600  000023f0  0c007c38	jal	_SetIntrs
 1601  000023f4  54000000	nop; not filled.
 1602  000023f8  23bd0008	addi	r29,r29,#8
 1603  000023fc  8fa20000	lw	r2,0(r29)
 1604  00002400  8fdffff8	lw	r31,-8(r30)
 1605  00002404  001ee820	add	r29,r0,r30
 1606  00002408  8fdefffc	lw	r30,-4(r30)
 1607  0000240c  4be00000	jr	r31
 1608  00002410  54000000	nop
 1609  00002414          	.endproc _RestoreIntrs
 1610  00002414          	.align 2
 1611  00002414          	.proc _QueueLinkInit
 1612  00002414          	.global _QueueLinkInit
 1613  00002414          	_QueueLinkInit:
 1614                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 1615  00002414  afbefffc	sw	-4(r29),r30; push fp
 1616  00002418  001df020	add	r30,r0,r29; fp = sp
 1617  0000241c  afbffff8	sw	-8(r29),r31; push ret addr
 1618  00002420  2fbd0010	subui	r29,r29,#16; alloc local storage
 1619  00002424  afa20000	sw	0(r29),r2
 1620  00002428  8fc10000	lw	r1,(r30)
 1621  0000242c  8fc20004	lw	r2,4(r30)
 1622  00002430  201f0000	addi	r31,r0,#0
 1623  00002434  ac3f0000	sw	(r1),r31
 1624  00002438  ac22000c	sw	12(r1),r2
 1625  0000243c  8fa20000	lw	r2,0(r29)
 1626  00002440  8fdffff8	lw	r31,-8(r30)
 1627  00002444  001ee820	add	r29,r0,r30
 1628  00002448  8fdefffc	lw	r30,-4(r30)
 1629  0000244c  4be00000	jr	r31
 1630  00002450  54000000	nop
 1631  00002454          	.endproc _QueueLinkInit
 1632  00002454          	.align 2
 1633  00002454          	.proc _QueueNext
 1634  00002454          	.global _QueueNext
 1635  00002454          	_QueueNext:
 1636                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 1637  00002454  afbefffc	sw	-4(r29),r30; push fp
 1638  00002458  001df020	add	r30,r0,r29; fp = sp
 1639  0000245c  afbffff8	sw	-8(r29),r31; push ret addr
 1640  00002460  2fbd0008	subui	r29,r29,#8; alloc local storage
 1641  00002464  8fc10000	lw	r1,(r30)
 1642  00002468  8c210000	lw	r1,(r1)
 1643  0000246c  8fdffff8	lw	r31,-8(r30)
 1644  00002470  001ee820	add	r29,r0,r30
 1645  00002474  8fdefffc	lw	r30,-4(r30)
 1646  00002478  4be00000	jr	r31
 1647  0000247c  54000000	nop
 1648  00002480          	.endproc _QueueNext
 1649  00002480          	.align 2
 1650  00002480          	.proc _QueuePrev
 1651  00002480          	.global _QueuePrev
 1652  00002480          	_QueuePrev:
 1653                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 1654  00002480  afbefffc	sw	-4(r29),r30; push fp
 1655  00002484  001df020	add	r30,r0,r29; fp = sp
 1656  00002488  afbffff8	sw	-8(r29),r31; push ret addr
 1657  0000248c  2fbd0008	subui	r29,r29,#8; alloc local storage
 1658  00002490  8fc10000	lw	r1,(r30)
 1659  00002494  8c210004	lw	r1,4(r1)
 1660  00002498  8fdffff8	lw	r31,-8(r30)
 1661  0000249c  001ee820	add	r29,r0,r30
 1662  000024a0  8fdefffc	lw	r30,-4(r30)
 1663  000024a4  4be00000	jr	r31
 1664  000024a8  54000000	nop
 1665  000024ac          	.endproc _QueuePrev
 1666  000024ac          	.align 2
 1667  000024ac          	.proc _QueueFirst
 1668  000024ac          	.global _QueueFirst
 1669  000024ac          	_QueueFirst:
 1670                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 1671  000024ac  afbefffc	sw	-4(r29),r30; push fp
 1672  000024b0  001df020	add	r30,r0,r29; fp = sp
 1673  000024b4  afbffff8	sw	-8(r29),r31; push ret addr
 1674  000024b8  2fbd0008	subui	r29,r29,#8; alloc local storage
 1675  000024bc  8fc10000	lw	r1,(r30)
 1676  000024c0  8c210000	lw	r1,(r1)
 1677  000024c4  8fdffff8	lw	r31,-8(r30)
 1678  000024c8  001ee820	add	r29,r0,r30
 1679  000024cc  8fdefffc	lw	r30,-4(r30)
 1680  000024d0  4be00000	jr	r31
 1681  000024d4  54000000	nop
 1682  000024d8          	.endproc _QueueFirst
 1683  000024d8          	.align 2
 1684  000024d8          	.proc _QueueLast
 1685  000024d8          	.global _QueueLast
 1686  000024d8          	_QueueLast:
 1687                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 1688  000024d8  afbefffc	sw	-4(r29),r30; push fp
 1689  000024dc  001df020	add	r30,r0,r29; fp = sp
 1690  000024e0  afbffff8	sw	-8(r29),r31; push ret addr
 1691  000024e4  2fbd0008	subui	r29,r29,#8; alloc local storage
 1692  000024e8  8fc10000	lw	r1,(r30)
 1693  000024ec  8c210004	lw	r1,4(r1)
 1694  000024f0  8fdffff8	lw	r31,-8(r30)
 1695  000024f4  001ee820	add	r29,r0,r30
 1696  000024f8  8fdefffc	lw	r30,-4(r30)
 1697  000024fc  4be00000	jr	r31
 1698  00002500  54000000	nop
 1699  00002504          	.endproc _QueueLast
 1700  00002504          	.align 2
 1701  00002504          	.proc _QueueInsertAfter
 1702  00002504          	.global _QueueInsertAfter
 1703  00002504          	_QueueInsertAfter:
 1704                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 1705  00002504  afbefffc	sw	-4(r29),r30; push fp
 1706  00002508  001df020	add	r30,r0,r29; fp = sp
 1707  0000250c  afbffff8	sw	-8(r29),r31; push ret addr
 1708  00002510  2fbd0010	subui	r29,r29,#16; alloc local storage
 1709  00002514  afa20000	sw	0(r29),r2
 1710  00002518  afa30004	sw	4(r29),r3
 1711  0000251c  8fc30000	lw	r3,(r30)
 1712  00002520  8fc20004	lw	r2,4(r30)
 1713  00002524  8fc10008	lw	r1,8(r30)
 1714  00002528  ac230008	sw	8(r1),r3
 1715  0000252c  ac220004	sw	4(r1),r2
 1716  00002530  8c5f0000	lw	r31,(r2)
 1717  00002534  ac3f0000	sw	(r1),r31
 1718  00002538  ac410000	sw	(r2),r1
 1719  0000253c  8c220000	lw	r2,(r1)
 1720  00002540  ac410004	sw	4(r2),r1
 1721  00002544  8c610008	lw	r1,8(r3)
 1722  00002548  20210001	addi	r1,r1,#1
 1723  0000254c  ac610008	sw	8(r3),r1
 1724  00002550  8fa20000	lw	r2,0(r29)
 1725  00002554  8fa30004	lw	r3,4(r29)
 1726  00002558  8fdffff8	lw	r31,-8(r30)
 1727  0000255c  001ee820	add	r29,r0,r30
 1728  00002560  8fdefffc	lw	r30,-4(r30)
 1729  00002564  4be00000	jr	r31
 1730  00002568  54000000	nop
 1731  0000256c          	.endproc _QueueInsertAfter
 1732  0000256c          	.align 2
 1733  0000256c          	.proc _QueueInsertFirst
 1734  0000256c          	.global _QueueInsertFirst
 1735  0000256c          	_QueueInsertFirst:
 1736                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 1737  0000256c  afbefffc	sw	-4(r29),r30; push fp
 1738  00002570  001df020	add	r30,r0,r29; fp = sp
 1739  00002574  afbffff8	sw	-8(r29),r31; push ret addr
 1740  00002578  2fbd0010	subui	r29,r29,#16; alloc local storage
 1741  0000257c  afa20000	sw	0(r29),r2
 1742  00002580  afa30004	sw	4(r29),r3
 1743  00002584  8fc30000	lw	r3,(r30)
 1744  00002588  8fc10004	lw	r1,4(r30)
 1745  0000258c  ac230008	sw	8(r1),r3
 1746  00002590  ac230004	sw	4(r1),r3
 1747  00002594  8c7f0000	lw	r31,(r3)
 1748  00002598  ac3f0000	sw	(r1),r31
 1749  0000259c  ac610000	sw	(r3),r1
 1750  000025a0  8c220000	lw	r2,(r1)
 1751  000025a4  ac410004	sw	4(r2),r1
 1752  000025a8  8c610008	lw	r1,8(r3)
 1753  000025ac  20210001	addi	r1,r1,#1
 1754  000025b0  ac610008	sw	8(r3),r1
 1755  000025b4  8fa20000	lw	r2,0(r29)
 1756  000025b8  8fa30004	lw	r3,4(r29)
 1757  000025bc  8fdffff8	lw	r31,-8(r30)
 1758  000025c0  001ee820	add	r29,r0,r30
 1759  000025c4  8fdefffc	lw	r30,-4(r30)
 1760  000025c8  4be00000	jr	r31
 1761  000025cc  54000000	nop
 1762  000025d0          	.endproc _QueueInsertFirst
 1763  000025d0          	.align 2
 1764  000025d0          	.proc _QueueInsertLast
 1765  000025d0          	.global _QueueInsertLast
 1766  000025d0          	_QueueInsertLast:
 1767                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 1768  000025d0  afbefffc	sw	-4(r29),r30; push fp
 1769  000025d4  001df020	add	r30,r0,r29; fp = sp
 1770  000025d8  afbffff8	sw	-8(r29),r31; push ret addr
 1771  000025dc  2fbd0010	subui	r29,r29,#16; alloc local storage
 1772  000025e0  afa20000	sw	0(r29),r2
 1773  000025e4  afa30004	sw	4(r29),r3
 1774  000025e8  8fc30000	lw	r3,(r30)
 1775  000025ec  8fc10004	lw	r1,4(r30)
 1776  000025f0  8c620004	lw	r2,4(r3)
 1777  000025f4  ac230008	sw	8(r1),r3
 1778  000025f8  ac220004	sw	4(r1),r2
 1779  000025fc  8c5f0000	lw	r31,(r2)
 1780  00002600  ac3f0000	sw	(r1),r31
 1781  00002604  ac410000	sw	(r2),r1
 1782  00002608  8c220000	lw	r2,(r1)
 1783  0000260c  ac410004	sw	4(r2),r1
 1784  00002610  8c610008	lw	r1,8(r3)
 1785  00002614  20210001	addi	r1,r1,#1
 1786  00002618  ac610008	sw	8(r3),r1
 1787  0000261c  8fa20000	lw	r2,0(r29)
 1788  00002620  8fa30004	lw	r3,4(r29)
 1789  00002624  8fdffff8	lw	r31,-8(r30)
 1790  00002628  001ee820	add	r29,r0,r30
 1791  0000262c  8fdefffc	lw	r30,-4(r30)
 1792  00002630  4be00000	jr	r31
 1793  00002634  54000000	nop
 1794  00002638          	.endproc _QueueInsertLast
 1795  00002638          	.align 2
 1796  00002638          	.proc _QueueRemove
 1797  00002638          	.global _QueueRemove
 1798  00002638          	_QueueRemove:
 1799                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 1800  00002638  afbefffc	sw	-4(r29),r30; push fp
 1801  0000263c  001df020	add	r30,r0,r29; fp = sp
 1802  00002640  afbffff8	sw	-8(r29),r31; push ret addr
 1803  00002644  2fbd0010	subui	r29,r29,#16; alloc local storage
 1804  00002648  afa20000	sw	0(r29),r2
 1805  0000264c  afa30004	sw	4(r29),r3
 1806  00002650  8fdf0000	lw	r31,(r30)
 1807  00002654  8fe10008	lw	r1,8(r31)
 1808  00002658  8c210008	lw	r1,8(r1)
 1809  0000265c  6c210000	sgti	r1,r1,#0
 1810  00002660  1020002c	beqz	r1,L44_LF1
 1811  00002664  54000000	nop; not filled.
 1812  00002668  8fe10004	lw	r1,4(r31)
 1813  0000266c  8fe30000	lw	r3,(r31)
 1814  00002670  ac230000	sw	(r1),r3
 1815  00002674  8fe10000	lw	r1,(r31)
 1816  00002678  8fe30004	lw	r3,4(r31)
 1817  0000267c  ac230004	sw	4(r1),r3
 1818  00002680  8fe20008	lw	r2,8(r31)
 1819  00002684  8c410008	lw	r1,8(r2)
 1820  00002688  2021ffff	addi	r1,r1,#-1
 1821  0000268c  ac410008	sw	8(r2),r1
 1822  00002690          	L44_LF1:
 1823  00002690  20030000	addi	r3,r0,#0
 1824  00002694  afe30000	sw	(r31),r3
 1825  00002698  8fa20000	lw	r2,0(r29)
 1826  0000269c  8fa30004	lw	r3,4(r29)
 1827  000026a0  8fdffff8	lw	r31,-8(r30)
 1828  000026a4  001ee820	add	r29,r0,r30
 1829  000026a8  8fdefffc	lw	r30,-4(r30)
 1830  000026ac  4be00000	jr	r31
 1831  000026b0  54000000	nop
 1832  000026b4          	.endproc _QueueRemove
 1833  000026b4          	.align 2
 1834  000026b4          	.proc _QueueLength
 1835  000026b4          	.global _QueueLength
 1836  000026b4          	_QueueLength:
 1837                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 1838  000026b4  afbefffc	sw	-4(r29),r30; push fp
 1839  000026b8  001df020	add	r30,r0,r29; fp = sp
 1840  000026bc  afbffff8	sw	-8(r29),r31; push ret addr
 1841  000026c0  2fbd0008	subui	r29,r29,#8; alloc local storage
 1842  000026c4  8fc10000	lw	r1,(r30)
 1843  000026c8  8c210008	lw	r1,8(r1)
 1844  000026cc  8fdffff8	lw	r31,-8(r30)
 1845  000026d0  001ee820	add	r29,r0,r30
 1846  000026d4  8fdefffc	lw	r30,-4(r30)
 1847  000026d8  4be00000	jr	r31
 1848  000026dc  54000000	nop
 1849  000026e0          	.endproc _QueueLength
 1850  000026e0          	.align 2
 1851  000026e0          	.proc _QueueEmpty
 1852  000026e0          	.global _QueueEmpty
 1853  000026e0          	_QueueEmpty:
 1854                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 1855  000026e0  afbefffc	sw	-4(r29),r30; push fp
 1856  000026e4  001df020	add	r30,r0,r29; fp = sp
 1857  000026e8  afbffff8	sw	-8(r29),r31; push ret addr
 1858  000026ec  2fbd0008	subui	r29,r29,#8; alloc local storage
 1859  000026f0  8fc10000	lw	r1,(r30)
 1860  000026f4  8c210008	lw	r1,8(r1)
 1861  000026f8  60210000	seqi	r1,r1,#0
 1862  000026fc  8fdffff8	lw	r31,-8(r30)
 1863  00002700  001ee820	add	r29,r0,r30
 1864  00002704  8fdefffc	lw	r30,-4(r30)
 1865  00002708  4be00000	jr	r31
 1866  0000270c  54000000	nop
 1867  00002710          	.endproc _QueueEmpty
 1868  00002710          	.data
 1869  0000d258          	.align 2
 1870  0000d258          	_negativeone_LF1:
 1871  0000d258  ffffffff	.word -1
 1872  0000d25c          	.text
 1873  00002710          	.align 2
 1874  00002710          	.proc _MemoryGetSize
 1875  00002710          	.global _MemoryGetSize
 1876  00002710          	_MemoryGetSize:
 1877                      ;  Function 'MemoryGetSize'; 0 bytes of locals, 0 regs to save.
 1878  00002710  afbefffc	sw	-4(r29),r30; push fp
 1879  00002714  001df020	add	r30,r0,r29; fp = sp
 1880  00002718  afbffff8	sw	-8(r29),r31; push ret addr
 1881  0000271c  2fbd0008	subui	r29,r29,#8; alloc local storage
 1882  00002720  3c01ffff	lhi	r1,#-1
 1883  00002724  24210000	addui	r1,r1,#0
 1884  00002728  8c210000	lw	r1,(r1)
 1885  0000272c  8fdffff8	lw	r31,-8(r30)
 1886  00002730  001ee820	add	r29,r0,r30
 1887  00002734  8fdefffc	lw	r30,-4(r30)
 1888  00002738  4be00000	jr	r31
 1889  0000273c  54000000	nop
 1890  00002740          	.endproc _MemoryGetSize
 1891  00002740          	.data
 1892  0000d25c          	.align 2
 1893  0000d25c          	LC0_LF1:
 1894  0000d25c  53657420	.ascii "Set freemap entry %d to 0x%x.\n\000"
 1894  0000d260  66726565	
 1894  0000d264  6d617020	
 1894  0000d268  656e7472	
 1894  0000d26c  79202564	
 1894  0000d270  20746f20	
 1894  0000d274  30782578	
 1894  0000d278  2e0a00  	
 1895  0000d27b          	.text
 1896  00002740          	.align 2
 1897  00002740          	.proc _MemorySetFreemap
 1898  00002740          	.global _MemorySetFreemap
 1899  00002740          	_MemorySetFreemap:
 1900                      ;  Function 'MemorySetFreemap'; 0 bytes of locals, 5 regs to save.
 1901  00002740  afbefffc	sw	-4(r29),r30; push fp
 1902  00002744  001df020	add	r30,r0,r29; fp = sp
 1903  00002748  afbffff8	sw	-8(r29),r31; push ret addr
 1904  0000274c  2fbd0020	subui	r29,r29,#32; alloc local storage
 1905  00002750  afa20000	sw	0(r29),r2
 1906  00002754  afa30004	sw	4(r29),r3
 1907  00002758  afa40008	sw	8(r29),r4
 1908  0000275c  afa5000c	sw	12(r29),r5
 1909  00002760  afa60010	sw	16(r29),r6
 1910  00002764  8fc30000	lw	r3,(r30)
 1911  00002768  8fdf0004	lw	r31,4(r30)
 1912  0000276c  00031020	add	r2,r0,r3
 1913  00002770  74610000	sgei	r1,r3,#0
 1914  00002774  14200008	bnez	r1,L62_LF1
 1915  00002778  54000000	nop; not filled.
 1916  0000277c  2062001f	addi	r2,r3,#31
 1917  00002780          	L62_LF1:
 1918  00002780  5c450005	srai	r5,r2,#0x5
 1919  00002784  50a10005	slli	r1,r5,#0x5
 1920  00002788  00611822	sub	r3,r3,r1
 1921  0000278c  20010001	addi	r1,r0,#1
 1922  00002790  00231004	sll	r2,r1,r3
 1923  00002794  3c010000	lhi	r1,((_negativeone_LF1)>>16)&0xffff
 1924  00002798  2421d258	addui	r1,r1,(_negativeone_LF1)&0xffff
 1925  0000279c  8c210000	lw	r1,(r1)
 1926  000027a0  00411026	xor	r2,r2,r1
 1927  000027a4  50a10002	slli	r1,r5,#0x2
 1928  000027a8  3c060000	lhi	r6,((_freepages_LF1)>>16)&0xffff
 1929  000027ac  24c6d3b4	addui	r6,r6,(_freepages_LF1)&0xffff
 1930  000027b0  00262020	add	r4,r1,r6
 1931  000027b4  8c810000	lw	r1,(r4)
 1932  000027b8  00221024	and	r2,r1,r2
 1933  000027bc  03e30804	sll	r1,r31,r3
 1934  000027c0  00410825	or	r1,r2,r1
 1935  000027c4  ac810000	sw	(r4),r1
 1936  000027c8  23bdfff8	addi	r29,r29,#-8
 1937  000027cc  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 1938  000027d0  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 1939  000027d4  afa20000	sw	(r29),r2
 1940  000027d8  2006006d	addi	r6,r0,#109
 1941  000027dc  afa60004	sw	4(r29),r6
 1942  000027e0  0c001338	jal	_dindex
 1943  000027e4  54000000	nop; not filled.
 1944  000027e8  23bd0008	addi	r29,r29,#8
 1945  000027ec  64210000	snei	r1,r1,#0
 1946  000027f0  1420002c	bnez	r1,L66_LF1
 1947  000027f4  54000000	nop; not filled.
 1948  000027f8  23bdfff8	addi	r29,r29,#-8
 1949  000027fc  afa20000	sw	(r29),r2
 1950  00002800  2006002b	addi	r6,r0,#43
 1951  00002804  afa60004	sw	4(r29),r6
 1952  00002808  0c001310	jal	_dindex
 1953  0000280c  54000000	nop; not filled.
 1954  00002810  23bd0008	addi	r29,r29,#8
 1955  00002814  64210000	snei	r1,r1,#0
 1956  00002818  1020002c	beqz	r1,L65_LF1
 1957  0000281c  54000000	nop; not filled.
 1958  00002820          	L66_LF1:
 1959  00002820  23bdfff0	addi	r29,r29,#-16
 1960  00002824  3c060000	lhi	r6,((LC0_LF1)>>16)&0xffff
 1961  00002828  24c6d25c	addui	r6,r6,(LC0_LF1)&0xffff
 1962  0000282c  afa60000	sw	(r29),r6
 1963  00002830  afa50004	sw	4(r29),r5
 1964  00002834  8c840000	lw	r4,(r4)
 1965  00002838  afa40008	sw	8(r29),r4
 1966  0000283c  0c007940	jal	_printf
 1967  00002840  54000000	nop; not filled.
 1968  00002844  23bd0010	addi	r29,r29,#16
 1969  00002848          	L65_LF1:
 1970  00002848  8fa20000	lw	r2,0(r29)
 1971  0000284c  8fa30004	lw	r3,4(r29)
 1972  00002850  8fa40008	lw	r4,8(r29)
 1973  00002854  8fa5000c	lw	r5,12(r29)
 1974  00002858  8fa60010	lw	r6,16(r29)
 1975  0000285c  8fdffff8	lw	r31,-8(r30)
 1976  00002860  001ee820	add	r29,r0,r30
 1977  00002864  8fdefffc	lw	r30,-4(r30)
 1978  00002868  4be00000	jr	r31
 1979  0000286c  54000000	nop
 1980  00002870          	.endproc _MemorySetFreemap
 1981  00002870          	.data
 1982  0000d27b          	.align 2
 1983  0000d27c          	LC1_LF1:
 1984  0000d27c  4d617020	.ascii "Map has %d entries, memory size is 0x%x.\n\000"
 1984  0000d280  68617320	
 1984  0000d284  25642065	
 1984  0000d288  6e747269	
 1984  0000d28c  65732c20	
 1984  0000d290  6d656d6f	
 1984  0000d294  72792073	
 1984  0000d298  697a6520	
 1984  0000d29c  69732030	
 1984  0000d2a0  7825782e	
 1984  0000d2a4  0a00    	
 1985  0000d2a6          	.align 2
 1986  0000d2a8          	LC2_LF1:
 1987  0000d2a8  46726565	.ascii "Free pages start with page # 0x%x.\n\000"
 1987  0000d2ac  20706167	
 1987  0000d2b0  65732073	
 1987  0000d2b4  74617274	
 1987  0000d2b8  20776974	
 1987  0000d2bc  68207061	
 1987  0000d2c0  67652023	
 1987  0000d2c4  20307825	
 1987  0000d2c8  782e0a00	
 1988  0000d2cc          	.align 2
 1989  0000d2cc          	LC3_LF1:
 1990  0000d2cc  496e6974	.ascii "Initialized %d free pages.\n\000"
 1990  0000d2d0  69616c69	
 1990  0000d2d4  7a656420	
 1990  0000d2d8  25642066	
 1990  0000d2dc  72656520	
 1990  0000d2e0  70616765	
 1990  0000d2e4  732e0a00	
 1991  0000d2e8          	.text
 1992  00002870          	.align 2
 1993  00002870          	.proc _MemoryModuleInit
 1994  00002870          	.global _MemoryModuleInit
 1995  00002870          	_MemoryModuleInit:
 1996                      ;  Function 'MemoryModuleInit'; 0 bytes of locals, 10 regs to save.
 1997  00002870  afbefffc	sw	-4(r29),r30; push fp
 1998  00002874  001df020	add	r30,r0,r29; fp = sp
 1999  00002878  afbffff8	sw	-8(r29),r31; push ret addr
 2000  0000287c  2fbd0030	subui	r29,r29,#48; alloc local storage
 2001  00002880  afa20000	sw	0(r29),r2
 2002  00002884  afa30004	sw	4(r29),r3
 2003  00002888  afa40008	sw	8(r29),r4
 2004  0000288c  afa5000c	sw	12(r29),r5
 2005  00002890  afa60010	sw	16(r29),r6
 2006  00002894  afa70014	sw	20(r29),r7
 2007  00002898  afa80018	sw	24(r29),r8
 2008  0000289c  afa9001c	sw	28(r29),r9
 2009  000028a0  afaa0020	sw	32(r29),r10
 2010  000028a4  afab0024	sw	36(r29),r11
 2011  000028a8  3c01ffff	lhi	r1,#-1
 2012  000028ac  24210000	addui	r1,r1,#0
 2013  000028b0  8c220000	lw	r2,(r1)
 2014  000028b4  74410000	sgei	r1,r2,#0
 2015  000028b8  14200008	bnez	r1,L69_LF1
 2016  000028bc  54000000	nop; not filled.
 2017  000028c0  2442ffff	addui	r2,r2,#65535
 2018  000028c4          	L69_LF1:
 2019  000028c4  5c480010	srai	r8,r2,#0x10
 2020  000028c8  3c030000	lhi	r3,((_pagestart_LF1)>>16)&0xffff
 2021  000028cc  2463d3a8	addui	r3,r3,(_pagestart_LF1)&0xffff
 2022  000028d0  3c010001	lhi	r1,((_lastosaddress)>>16)&0xffff
 2023  000028d4  242131a0	addui	r1,r1,(_lastosaddress)&0xffff
 2024  000028d8  8c210000	lw	r1,(r1)
 2025  000028dc  2422fffc	addui	r2,r1,#65532
 2026  000028e0  74410000	sgei	r1,r2,#0
 2027  000028e4  14200008	bnez	r1,L70_LF1
 2028  000028e8  54000000	nop; not filled.
 2029  000028ec  2442ffff	addui	r2,r2,#65535
 2030  000028f0          	L70_LF1:
 2031  000028f0  5c410010	srai	r1,r2,#0x10
 2032  000028f4  ac610000	sw	(r3),r1
 2033  000028f8  3c030000	lhi	r3,((_freemapmax_LF1)>>16)&0xffff
 2034  000028fc  2463d3ac	addui	r3,r3,(_freemapmax_LF1)&0xffff
 2035  00002900  2102001f	addi	r2,r8,#31
 2036  00002904  74410000	sgei	r1,r2,#0
 2037  00002908  14200008	bnez	r1,L71_LF1
 2038  0000290c  54000000	nop; not filled.
 2039  00002910  2102003e	addi	r2,r8,#62
 2040  00002914          	L71_LF1:
 2041  00002914  5c410005	srai	r1,r2,#0x5
 2042  00002918  ac610000	sw	(r3),r1
 2043  0000291c  23bdfff8	addi	r29,r29,#-8
 2044  00002920  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2045  00002924  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 2046  00002928  afa20000	sw	(r29),r2
 2047  0000292c  200b006d	addi	r11,r0,#109
 2048  00002930  afab0004	sw	4(r29),r11
 2049  00002934  0c0011e4	jal	_dindex
 2050  00002938  54000000	nop; not filled.
 2051  0000293c  23bd0008	addi	r29,r29,#8
 2052  00002940  64210000	snei	r1,r1,#0
 2053  00002944  1420002c	bnez	r1,L73_LF1
 2054  00002948  54000000	nop; not filled.
 2055  0000294c  23bdfff8	addi	r29,r29,#-8
 2056  00002950  afa20000	sw	(r29),r2
 2057  00002954  200b002b	addi	r11,r0,#43
 2058  00002958  afab0004	sw	4(r29),r11
 2059  0000295c  0c0011bc	jal	_dindex
 2060  00002960  54000000	nop; not filled.
 2061  00002964  23bd0008	addi	r29,r29,#8
 2062  00002968  64210000	snei	r1,r1,#0
 2063  0000296c  1020002c	beqz	r1,L72_LF1
 2064  00002970  54000000	nop; not filled.
 2065  00002974          	L73_LF1:
 2066  00002974  23bdfff0	addi	r29,r29,#-16
 2067  00002978  3c0b0000	lhi	r11,((LC1_LF1)>>16)&0xffff
 2068  0000297c  256bd27c	addui	r11,r11,(LC1_LF1)&0xffff
 2069  00002980  afab0000	sw	(r29),r11
 2070  00002984  8c610000	lw	r1,(r3)
 2071  00002988  afa10004	sw	4(r29),r1
 2072  0000298c  afa80008	sw	8(r29),r8
 2073  00002990  0c0077ec	jal	_printf
 2074  00002994  54000000	nop; not filled.
 2075  00002998  23bd0010	addi	r29,r29,#16
 2076  0000299c          	L72_LF1:
 2077  0000299c  23bdfff8	addi	r29,r29,#-8
 2078  000029a0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2079  000029a4  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 2080  000029a8  afa20000	sw	(r29),r2
 2081  000029ac  200b006d	addi	r11,r0,#109
 2082  000029b0  afab0004	sw	4(r29),r11
 2083  000029b4  0c001164	jal	_dindex
 2084  000029b8  54000000	nop; not filled.
 2085  000029bc  23bd0008	addi	r29,r29,#8
 2086  000029c0  64210000	snei	r1,r1,#0
 2087  000029c4  1420002c	bnez	r1,L75_LF1
 2088  000029c8  54000000	nop; not filled.
 2089  000029cc  23bdfff8	addi	r29,r29,#-8
 2090  000029d0  afa20000	sw	(r29),r2
 2091  000029d4  200b002b	addi	r11,r0,#43
 2092  000029d8  afab0004	sw	4(r29),r11
 2093  000029dc  0c00113c	jal	_dindex
 2094  000029e0  54000000	nop; not filled.
 2095  000029e4  23bd0008	addi	r29,r29,#8
 2096  000029e8  64210000	snei	r1,r1,#0
 2097  000029ec  10200030	beqz	r1,L74_LF1
 2098  000029f0  54000000	nop; not filled.
 2099  000029f4          	L75_LF1:
 2100  000029f4  23bdfff8	addi	r29,r29,#-8
 2101  000029f8  3c0b0000	lhi	r11,((LC2_LF1)>>16)&0xffff
 2102  000029fc  256bd2a8	addui	r11,r11,(LC2_LF1)&0xffff
 2103  00002a00  afab0000	sw	(r29),r11
 2104  00002a04  3c010000	lhi	r1,((_pagestart_LF1)>>16)&0xffff
 2105  00002a08  2421d3a8	addui	r1,r1,(_pagestart_LF1)&0xffff
 2106  00002a0c  8c210000	lw	r1,(r1)
 2107  00002a10  afa10004	sw	4(r29),r1
 2108  00002a14  0c007768	jal	_printf
 2109  00002a18  54000000	nop; not filled.
 2110  00002a1c  23bd0008	addi	r29,r29,#8
 2111  00002a20          	L74_LF1:
 2112  00002a20  20020000	addi	r2,r0,#0
 2113  00002a24  3c040000	lhi	r4,((_freemapmax_LF1)>>16)&0xffff
 2114  00002a28  2484d3ac	addui	r4,r4,(_freemapmax_LF1)&0xffff
 2115  00002a2c  8c810000	lw	r1,(r4)
 2116  00002a30  0041082a	slt	r1,r2,r1
 2117  00002a34  1020002c	beqz	r1,L77_LF1
 2118  00002a38  54000000	nop; not filled.
 2119  00002a3c  3c030000	lhi	r3,((_freepages_LF1)>>16)&0xffff
 2120  00002a40  2463d3b4	addui	r3,r3,(_freepages_LF1)&0xffff
 2121  00002a44          	L79_LF1:
 2122  00002a44  200b0000	addi	r11,r0,#0
 2123  00002a48  ac6b0000	sw	(r3),r11
 2124  00002a4c  20630004	addi	r3,r3,#4
 2125  00002a50  20420001	addi	r2,r2,#1
 2126  00002a54  8c810000	lw	r1,(r4)
 2127  00002a58  0041082a	slt	r1,r2,r1
 2128  00002a5c  1420ffe4	bnez	r1,L79_LF1
 2129  00002a60  54000000	nop; not filled.
 2130  00002a64          	L77_LF1:
 2131  00002a64  3c020000	lhi	r2,((_nfreepages_LF1)>>16)&0xffff
 2132  00002a68  2442d3b0	addui	r2,r2,(_nfreepages_LF1)&0xffff
 2133  00002a6c  200b0000	addi	r11,r0,#0
 2134  00002a70  ac4b0000	sw	(r2),r11
 2135  00002a74  3c010000	lhi	r1,((_pagestart_LF1)>>16)&0xffff
 2136  00002a78  2421d3a8	addui	r1,r1,(_pagestart_LF1)&0xffff
 2137  00002a7c  8c240000	lw	r4,(r1)
 2138  00002a80  0088082a	slt	r1,r4,r8
 2139  00002a84  10200104	beqz	r1,L82_LF1
 2140  00002a88  54000000	nop; not filled.
 2141  00002a8c  00023820	add	r7,r0,r2
 2142  00002a90  200a0001	addi	r10,r0,#1
 2143  00002a94  3c090000	lhi	r9,((_negativeone_LF1)>>16)&0xffff
 2144  00002a98  2529d258	addui	r9,r9,(_negativeone_LF1)&0xffff
 2145  00002a9c          	L84_LF1:
 2146  00002a9c  8ce10000	lw	r1,(r7)
 2147  00002aa0  20210001	addi	r1,r1,#1
 2148  00002aa4  ace10000	sw	(r7),r1
 2149  00002aa8  00041020	add	r2,r0,r4
 2150  00002aac  74810000	sgei	r1,r4,#0
 2151  00002ab0  14200008	bnez	r1,L86_LF1
 2152  00002ab4  54000000	nop; not filled.
 2153  00002ab8  2082001f	addi	r2,r4,#31
 2154  00002abc          	L86_LF1:
 2155  00002abc  5c460005	srai	r6,r2,#0x5
 2156  00002ac0  50c10005	slli	r1,r6,#0x5
 2157  00002ac4  00810822	sub	r1,r4,r1
 2158  00002ac8  01411804	sll	r3,r10,r1
 2159  00002acc  8d210000	lw	r1,(r9)
 2160  00002ad0  00611026	xor	r2,r3,r1
 2161  00002ad4  50c10002	slli	r1,r6,#0x2
 2162  00002ad8  3c0b0000	lhi	r11,((_freepages_LF1)>>16)&0xffff
 2163  00002adc  256bd3b4	addui	r11,r11,(_freepages_LF1)&0xffff
 2164  00002ae0  002b2820	add	r5,r1,r11
 2165  00002ae4  8ca10000	lw	r1,(r5)
 2166  00002ae8  00220824	and	r1,r1,r2
 2167  00002aec  00230825	or	r1,r1,r3
 2168  00002af0  aca10000	sw	(r5),r1
 2169  00002af4  23bdfff8	addi	r29,r29,#-8
 2170  00002af8  3c0b0000	lhi	r11,((_debugstr)>>16)&0xffff
 2171  00002afc  256bfc26	addui	r11,r11,(_debugstr)&0xffff
 2172  00002b00  afab0000	sw	(r29),r11
 2173  00002b04  200b006d	addi	r11,r0,#109
 2174  00002b08  afab0004	sw	4(r29),r11
 2175  00002b0c  0c00100c	jal	_dindex
 2176  00002b10  54000000	nop; not filled.
 2177  00002b14  23bd0008	addi	r29,r29,#8
 2178  00002b18  64210000	snei	r1,r1,#0
 2179  00002b1c  14200034	bnez	r1,L90_LF1
 2180  00002b20  54000000	nop; not filled.
 2181  00002b24  23bdfff8	addi	r29,r29,#-8
 2182  00002b28  3c0b0000	lhi	r11,((_debugstr)>>16)&0xffff
 2183  00002b2c  256bfc26	addui	r11,r11,(_debugstr)&0xffff
 2184  00002b30  afab0000	sw	(r29),r11
 2185  00002b34  200b002b	addi	r11,r0,#43
 2186  00002b38  afab0004	sw	4(r29),r11
 2187  00002b3c  0c000fdc	jal	_dindex
 2188  00002b40  54000000	nop; not filled.
 2189  00002b44  23bd0008	addi	r29,r29,#8
 2190  00002b48  64210000	snei	r1,r1,#0
 2191  00002b4c  1020002c	beqz	r1,L83_LF1
 2192  00002b50  54000000	nop; not filled.
 2193  00002b54          	L90_LF1:
 2194  00002b54  23bdfff0	addi	r29,r29,#-16
 2195  00002b58  3c0b0000	lhi	r11,((LC0_LF1)>>16)&0xffff
 2196  00002b5c  256bd25c	addui	r11,r11,(LC0_LF1)&0xffff
 2197  00002b60  afab0000	sw	(r29),r11
 2198  00002b64  afa60004	sw	4(r29),r6
 2199  00002b68  8ca50000	lw	r5,(r5)
 2200  00002b6c  afa50008	sw	8(r29),r5
 2201  00002b70  0c00760c	jal	_printf
 2202  00002b74  54000000	nop; not filled.
 2203  00002b78  23bd0010	addi	r29,r29,#16
 2204  00002b7c          	L83_LF1:
 2205  00002b7c  20840001	addi	r4,r4,#1
 2206  00002b80  0088082a	slt	r1,r4,r8
 2207  00002b84  1420ff14	bnez	r1,L84_LF1
 2208  00002b88  54000000	nop; not filled.
 2209  00002b8c          	L82_LF1:
 2210  00002b8c  23bdfff8	addi	r29,r29,#-8
 2211  00002b90  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2212  00002b94  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 2213  00002b98  afa20000	sw	(r29),r2
 2214  00002b9c  200b006d	addi	r11,r0,#109
 2215  00002ba0  afab0004	sw	4(r29),r11
 2216  00002ba4  0c000f74	jal	_dindex
 2217  00002ba8  54000000	nop; not filled.
 2218  00002bac  23bd0008	addi	r29,r29,#8
 2219  00002bb0  64210000	snei	r1,r1,#0
 2220  00002bb4  1420002c	bnez	r1,L93_LF1
 2221  00002bb8  54000000	nop; not filled.
 2222  00002bbc  23bdfff8	addi	r29,r29,#-8
 2223  00002bc0  afa20000	sw	(r29),r2
 2224  00002bc4  200b002b	addi	r11,r0,#43
 2225  00002bc8  afab0004	sw	4(r29),r11
 2226  00002bcc  0c000f4c	jal	_dindex
 2227  00002bd0  54000000	nop; not filled.
 2228  00002bd4  23bd0008	addi	r29,r29,#8
 2229  00002bd8  64210000	snei	r1,r1,#0
 2230  00002bdc  10200030	beqz	r1,L92_LF1
 2231  00002be0  54000000	nop; not filled.
 2232  00002be4          	L93_LF1:
 2233  00002be4  23bdfff8	addi	r29,r29,#-8
 2234  00002be8  3c0b0000	lhi	r11,((LC3_LF1)>>16)&0xffff
 2235  00002bec  256bd2cc	addui	r11,r11,(LC3_LF1)&0xffff
 2236  00002bf0  afab0000	sw	(r29),r11
 2237  00002bf4  3c010000	lhi	r1,((_nfreepages_LF1)>>16)&0xffff
 2238  00002bf8  2421d3b0	addui	r1,r1,(_nfreepages_LF1)&0xffff
 2239  00002bfc  8c210000	lw	r1,(r1)
 2240  00002c00  afa10004	sw	4(r29),r1
 2241  00002c04  0c007578	jal	_printf
 2242  00002c08  54000000	nop; not filled.
 2243  00002c0c  23bd0008	addi	r29,r29,#8
 2244  00002c10          	L92_LF1:
 2245  00002c10  8fa20000	lw	r2,0(r29)
 2246  00002c14  8fa30004	lw	r3,4(r29)
 2247  00002c18  8fa40008	lw	r4,8(r29)
 2248  00002c1c  8fa5000c	lw	r5,12(r29)
 2249  00002c20  8fa60010	lw	r6,16(r29)
 2250  00002c24  8fa70014	lw	r7,20(r29)
 2251  00002c28  8fa80018	lw	r8,24(r29)
 2252  00002c2c  8fa9001c	lw	r9,28(r29)
 2253  00002c30  8faa0020	lw	r10,32(r29)
 2254  00002c34  8fab0024	lw	r11,36(r29)
 2255  00002c38  8fdffff8	lw	r31,-8(r30)
 2256  00002c3c  001ee820	add	r29,r0,r30
 2257  00002c40  8fdefffc	lw	r30,-4(r30)
 2258  00002c44  4be00000	jr	r31
 2259  00002c48  54000000	nop
 2260  00002c4c          	.endproc _MemoryModuleInit
 2261  00002c4c          	.data
 2262  0000d2e8          	.align 2
 2263  0000d2e8          	_mapnum42_LF1:
 2264  0000d2e8  00000000	.word 0
 2265  0000d2ec          	.align 2
 2266  0000d2ec          	LC4_LF1:
 2267  0000d2ec  416c6c6f	.ascii "Allocating memory, starting with page %d\n\000"
 2267  0000d2f0  63617469	
 2267  0000d2f4  6e67206d	
 2267  0000d2f8  656d6f72	
 2267  0000d2fc  792c2073	
 2267  0000d300  74617274	
 2267  0000d304  696e6720	
 2267  0000d308  77697468	
 2267  0000d30c  20706167	
 2267  0000d310  65202564	
 2267  0000d314  0a00    	
 2268  0000d316          	.align 2
 2269  0000d318          	LC5_LF1:
 2270  0000d318  416c6c6f	.ascii "Allocated memory, from map %d, page %d, map=0x%x.\n\000"
 2270  0000d31c  63617465	
 2270  0000d320  64206d65	
 2270  0000d324  6d6f7279	
 2270  0000d328  2c206672	
 2270  0000d32c  6f6d206d	
 2270  0000d330  61702025	
 2270  0000d334  642c2070	
 2270  0000d338  61676520	
 2270  0000d33c  25642c20	
 2270  0000d340  6d61703d	
 2270  0000d344  30782578	
 2270  0000d348  2e0a00  	
 2271  0000d34b          	.text
 2272  00002c4c          	.align 2
 2273  00002c4c          	.proc _MemoryAllocPage
 2274  00002c4c          	.global _MemoryAllocPage
 2275  00002c4c          	_MemoryAllocPage:
 2276                      ;  Function 'MemoryAllocPage'; 0 bytes of locals, 6 regs to save.
 2277  00002c4c  afbefffc	sw	-4(r29),r30; push fp
 2278  00002c50  001df020	add	r30,r0,r29; fp = sp
 2279  00002c54  afbffff8	sw	-8(r29),r31; push ret addr
 2280  00002c58  2fbd0020	subui	r29,r29,#32; alloc local storage
 2281  00002c5c  afa20000	sw	0(r29),r2
 2282  00002c60  afa30004	sw	4(r29),r3
 2283  00002c64  afa40008	sw	8(r29),r4
 2284  00002c68  afa5000c	sw	12(r29),r5
 2285  00002c6c  afa60010	sw	16(r29),r6
 2286  00002c70  afa70014	sw	20(r29),r7
 2287  00002c74  3c010000	lhi	r1,((_nfreepages_LF1)>>16)&0xffff
 2288  00002c78  2421d3b0	addui	r1,r1,(_nfreepages_LF1)&0xffff
 2289  00002c7c  8c210000	lw	r1,(r1)
 2290  00002c80  64210000	snei	r1,r1,#0
 2291  00002c84  14200010	bnez	r1,L112_LF1
 2292  00002c88  54000000	nop; not filled.
 2293  00002c8c  20010000	addi	r1,r0,#0
 2294  00002c90  08000238	j	L128_LF1
 2295  00002c94  54000000	nop; not filled.
 2296  00002c98          	L112_LF1:
 2297  00002c98  23bdfff8	addi	r29,r29,#-8
 2298  00002c9c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2299  00002ca0  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 2300  00002ca4  afa20000	sw	(r29),r2
 2301  00002ca8  2007006d	addi	r7,r0,#109
 2302  00002cac  afa70004	sw	4(r29),r7
 2303  00002cb0  0c000e68	jal	_dindex
 2304  00002cb4  54000000	nop; not filled.
 2305  00002cb8  23bd0008	addi	r29,r29,#8
 2306  00002cbc  64210000	snei	r1,r1,#0
 2307  00002cc0  1420002c	bnez	r1,L114_LF1
 2308  00002cc4  54000000	nop; not filled.
 2309  00002cc8  23bdfff8	addi	r29,r29,#-8
 2310  00002ccc  afa20000	sw	(r29),r2
 2311  00002cd0  2007002b	addi	r7,r0,#43
 2312  00002cd4  afa70004	sw	4(r29),r7
 2313  00002cd8  0c000e40	jal	_dindex
 2314  00002cdc  54000000	nop; not filled.
 2315  00002ce0  23bd0008	addi	r29,r29,#8
 2316  00002ce4  64210000	snei	r1,r1,#0
 2317  00002ce8  10200030	beqz	r1,L113_LF1
 2318  00002cec  54000000	nop; not filled.
 2319  00002cf0          	L114_LF1:
 2320  00002cf0  23bdfff8	addi	r29,r29,#-8
 2321  00002cf4  3c070000	lhi	r7,((LC4_LF1)>>16)&0xffff
 2322  00002cf8  24e7d2ec	addui	r7,r7,(LC4_LF1)&0xffff
 2323  00002cfc  afa70000	sw	(r29),r7
 2324  00002d00  3c010000	lhi	r1,((_mapnum42_LF1)>>16)&0xffff
 2325  00002d04  2421d2e8	addui	r1,r1,(_mapnum42_LF1)&0xffff
 2326  00002d08  8c210000	lw	r1,(r1)
 2327  00002d0c  afa10004	sw	4(r29),r1
 2328  00002d10  0c00746c	jal	_printf
 2329  00002d14  54000000	nop; not filled.
 2330  00002d18  23bd0008	addi	r29,r29,#8
 2331  00002d1c          	L113_LF1:
 2332  00002d1c  3c020000	lhi	r2,((_mapnum42_LF1)>>16)&0xffff
 2333  00002d20  2442d2e8	addui	r2,r2,(_mapnum42_LF1)&0xffff
 2334  00002d24  8c410000	lw	r1,(r2)
 2335  00002d28  3c040000	lhi	r4,((_freepages_LF1)>>16)&0xffff
 2336  00002d2c  2484d3b4	addui	r4,r4,(_freepages_LF1)&0xffff
 2337  00002d30  50210002	slli	r1,r1,#0x2
 2338  00002d34  00240820	add	r1,r1,r4
 2339  00002d38  8c210000	lw	r1,(r1)
 2340  00002d3c  64210000	snei	r1,r1,#0
 2341  00002d40  1420004c	bnez	r1,L116_LF1
 2342  00002d44  54000000	nop; not filled.
 2343  00002d48  3c010000	lhi	r1,((_freemapmax_LF1)>>16)&0xffff
 2344  00002d4c  2421d3ac	addui	r1,r1,(_freemapmax_LF1)&0xffff
 2345  00002d50  8c230000	lw	r3,(r1)
 2346  00002d54          	L117_LF1:
 2347  00002d54  8c410000	lw	r1,(r2)
 2348  00002d58  20210001	addi	r1,r1,#1
 2349  00002d5c  ac410000	sw	(r2),r1
 2350  00002d60  0023082d	sge	r1,r1,r3
 2351  00002d64  1020000c	beqz	r1,L115_LF1
 2352  00002d68  54000000	nop; not filled.
 2353  00002d6c  20070000	addi	r7,r0,#0
 2354  00002d70  ac470000	sw	(r2),r7
 2355  00002d74          	L115_LF1:
 2356  00002d74  8c410000	lw	r1,(r2)
 2357  00002d78  50210002	slli	r1,r1,#0x2
 2358  00002d7c  00240820	add	r1,r1,r4
 2359  00002d80  8c210000	lw	r1,(r1)
 2360  00002d84  64210000	snei	r1,r1,#0
 2361  00002d88  1020ffc8	beqz	r1,L117_LF1
 2362  00002d8c  54000000	nop; not filled.
 2363  00002d90          	L116_LF1:
 2364  00002d90  3c010000	lhi	r1,((_mapnum42_LF1)>>16)&0xffff
 2365  00002d94  2421d2e8	addui	r1,r1,(_mapnum42_LF1)&0xffff
 2366  00002d98  8c210000	lw	r1,(r1)
 2367  00002d9c  50210002	slli	r1,r1,#0x2
 2368  00002da0  3c070000	lhi	r7,((_freepages_LF1)>>16)&0xffff
 2369  00002da4  24e7d3b4	addui	r7,r7,(_freepages_LF1)&0xffff
 2370  00002da8  00270820	add	r1,r1,r7
 2371  00002dac  8c230000	lw	r3,(r1)
 2372  00002db0  201f0000	addi	r31,r0,#0
 2373  00002db4  30610001	andi	r1,r3,#1
 2374  00002db8  14200020	bnez	r1,L121_LF1
 2375  00002dbc  54000000	nop; not filled.
 2376  00002dc0  20020001	addi	r2,r0,#1
 2377  00002dc4          	L122_LF1:
 2378  00002dc4  23ff0001	addi	r31,r31,#1
 2379  00002dc8  005f0804	sll	r1,r2,r31
 2380  00002dcc  00610824	and	r1,r3,r1
 2381  00002dd0  64210000	snei	r1,r1,#0
 2382  00002dd4  1020ffec	beqz	r1,L122_LF1
 2383  00002dd8  54000000	nop; not filled.
 2384  00002ddc          	L121_LF1:
 2385  00002ddc  20010001	addi	r1,r0,#1
 2386  00002de0  003f1004	sll	r2,r1,r31
 2387  00002de4  3c010000	lhi	r1,((_negativeone_LF1)>>16)&0xffff
 2388  00002de8  2421d258	addui	r1,r1,(_negativeone_LF1)&0xffff
 2389  00002dec  8c210000	lw	r1,(r1)
 2390  00002df0  00412026	xor	r4,r2,r1
 2391  00002df4  3c050000	lhi	r5,((_mapnum42_LF1)>>16)&0xffff
 2392  00002df8  24a5d2e8	addui	r5,r5,(_mapnum42_LF1)&0xffff
 2393  00002dfc  8ca30000	lw	r3,(r5)
 2394  00002e00  3c060000	lhi	r6,((_freepages_LF1)>>16)&0xffff
 2395  00002e04  24c6d3b4	addui	r6,r6,(_freepages_LF1)&0xffff
 2396  00002e08  50610002	slli	r1,r3,#0x2
 2397  00002e0c  00261020	add	r2,r1,r6
 2398  00002e10  8c410000	lw	r1,(r2)
 2399  00002e14  00240824	and	r1,r1,r4
 2400  00002e18  ac410000	sw	(r2),r1
 2401  00002e1c  50610005	slli	r1,r3,#0x5
 2402  00002e20  003f1820	add	r3,r1,r31
 2403  00002e24  23bdfff8	addi	r29,r29,#-8
 2404  00002e28  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2405  00002e2c  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 2406  00002e30  afa20000	sw	(r29),r2
 2407  00002e34  2007006d	addi	r7,r0,#109
 2408  00002e38  afa70004	sw	4(r29),r7
 2409  00002e3c  0c000cdc	jal	_dindex
 2410  00002e40  54000000	nop; not filled.
 2411  00002e44  23bd0008	addi	r29,r29,#8
 2412  00002e48  64210000	snei	r1,r1,#0
 2413  00002e4c  1420002c	bnez	r1,L127_LF1
 2414  00002e50  54000000	nop; not filled.
 2415  00002e54  23bdfff8	addi	r29,r29,#-8
 2416  00002e58  afa20000	sw	(r29),r2
 2417  00002e5c  2007002b	addi	r7,r0,#43
 2418  00002e60  afa70004	sw	4(r29),r7
 2419  00002e64  0c000cb4	jal	_dindex
 2420  00002e68  54000000	nop; not filled.
 2421  00002e6c  23bd0008	addi	r29,r29,#8
 2422  00002e70  64210000	snei	r1,r1,#0
 2423  00002e74  1020003c	beqz	r1,L126_LF1
 2424  00002e78  54000000	nop; not filled.
 2425  00002e7c          	L127_LF1:
 2426  00002e7c  23bdfff0	addi	r29,r29,#-16
 2427  00002e80  3c070000	lhi	r7,((LC5_LF1)>>16)&0xffff
 2428  00002e84  24e7d318	addui	r7,r7,(LC5_LF1)&0xffff
 2429  00002e88  afa70000	sw	(r29),r7
 2430  00002e8c  8ca10000	lw	r1,(r5)
 2431  00002e90  afa10004	sw	4(r29),r1
 2432  00002e94  afa30008	sw	8(r29),r3
 2433  00002e98  50210002	slli	r1,r1,#0x2
 2434  00002e9c  00260820	add	r1,r1,r6
 2435  00002ea0  8c210000	lw	r1,(r1)
 2436  00002ea4  afa1000c	sw	12(r29),r1
 2437  00002ea8  0c0072d4	jal	_printf
 2438  00002eac  54000000	nop; not filled.
 2439  00002eb0  23bd0010	addi	r29,r29,#16
 2440  00002eb4          	L126_LF1:
 2441  00002eb4  3c010000	lhi	r1,((_nfreepages_LF1)>>16)&0xffff
 2442  00002eb8  2421d3b0	addui	r1,r1,(_nfreepages_LF1)&0xffff
 2443  00002ebc  8c220000	lw	r2,(r1)
 2444  00002ec0  2042ffff	addi	r2,r2,#-1
 2445  00002ec4  ac220000	sw	(r1),r2
 2446  00002ec8  00030820	add	r1,r0,r3
 2447  00002ecc          	L128_LF1:
 2448  00002ecc  8fa20000	lw	r2,0(r29)
 2449  00002ed0  8fa30004	lw	r3,4(r29)
 2450  00002ed4  8fa40008	lw	r4,8(r29)
 2451  00002ed8  8fa5000c	lw	r5,12(r29)
 2452  00002edc  8fa60010	lw	r6,16(r29)
 2453  00002ee0  8fa70014	lw	r7,20(r29)
 2454  00002ee4  8fdffff8	lw	r31,-8(r30)
 2455  00002ee8  001ee820	add	r29,r0,r30
 2456  00002eec  8fdefffc	lw	r30,-4(r30)
 2457  00002ef0  4be00000	jr	r31
 2458  00002ef4  54000000	nop
 2459  00002ef8          	.endproc _MemoryAllocPage
 2460  00002ef8          	.data
 2461  0000d34b          	.align 2
 2462  0000d34c          	LC6_LF1:
 2463  0000d34c  46726565	.ascii "Freed page 0x%x, %d remaining.\n\000"
 2463  0000d350  64207061	
 2463  0000d354  67652030	
 2463  0000d358  7825782c	
 2463  0000d35c  20256420	
 2463  0000d360  72656d61	
 2463  0000d364  696e696e	
 2463  0000d368  672e0a00	
 2464  0000d36c          	.text
 2465  00002ef8          	.align 2
 2466  00002ef8          	.proc _MemoryFreePage
 2467  00002ef8          	.global _MemoryFreePage
 2468  00002ef8          	_MemoryFreePage:
 2469                      ;  Function 'MemoryFreePage'; 0 bytes of locals, 6 regs to save.
 2470  00002ef8  afbefffc	sw	-4(r29),r30; push fp
 2471  00002efc  001df020	add	r30,r0,r29; fp = sp
 2472  00002f00  afbffff8	sw	-8(r29),r31; push ret addr
 2473  00002f04  2fbd0020	subui	r29,r29,#32; alloc local storage
 2474  00002f08  afa20000	sw	0(r29),r2
 2475  00002f0c  afa30004	sw	4(r29),r3
 2476  00002f10  afa40008	sw	8(r29),r4
 2477  00002f14  afa5000c	sw	12(r29),r5
 2478  00002f18  afa60010	sw	16(r29),r6
 2479  00002f1c  afa70014	sw	20(r29),r7
 2480  00002f20  8fc60000	lw	r6,(r30)
 2481  00002f24  20030001	addi	r3,r0,#1
 2482  00002f28  00061020	add	r2,r0,r6
 2483  00002f2c  74c10000	sgei	r1,r6,#0
 2484  00002f30  14200008	bnez	r1,L131_LF1
 2485  00002f34  54000000	nop; not filled.
 2486  00002f38  20c2001f	addi	r2,r6,#31
 2487  00002f3c          	L131_LF1:
 2488  00002f3c  5c450005	srai	r5,r2,#0x5
 2489  00002f40  50a10005	slli	r1,r5,#0x5
 2490  00002f44  00c10822	sub	r1,r6,r1
 2491  00002f48  00611804	sll	r3,r3,r1
 2492  00002f4c  3c010000	lhi	r1,((_negativeone_LF1)>>16)&0xffff
 2493  00002f50  2421d258	addui	r1,r1,(_negativeone_LF1)&0xffff
 2494  00002f54  8c210000	lw	r1,(r1)
 2495  00002f58  00611026	xor	r2,r3,r1
 2496  00002f5c  50a10002	slli	r1,r5,#0x2
 2497  00002f60  3c070000	lhi	r7,((_freepages_LF1)>>16)&0xffff
 2498  00002f64  24e7d3b4	addui	r7,r7,(_freepages_LF1)&0xffff
 2499  00002f68  00272020	add	r4,r1,r7
 2500  00002f6c  8c810000	lw	r1,(r4)
 2501  00002f70  00220824	and	r1,r1,r2
 2502  00002f74  00230825	or	r1,r1,r3
 2503  00002f78  ac810000	sw	(r4),r1
 2504  00002f7c  23bdfff8	addi	r29,r29,#-8
 2505  00002f80  3c070000	lhi	r7,((_debugstr)>>16)&0xffff
 2506  00002f84  24e7fc26	addui	r7,r7,(_debugstr)&0xffff
 2507  00002f88  afa70000	sw	(r29),r7
 2508  00002f8c  2007006d	addi	r7,r0,#109
 2509  00002f90  afa70004	sw	4(r29),r7
 2510  00002f94  0c000b84	jal	_dindex
 2511  00002f98  54000000	nop; not filled.
 2512  00002f9c  23bd0008	addi	r29,r29,#8
 2513  00002fa0  64210000	snei	r1,r1,#0
 2514  00002fa4  14200034	bnez	r1,L135_LF1
 2515  00002fa8  54000000	nop; not filled.
 2516  00002fac  23bdfff8	addi	r29,r29,#-8
 2517  00002fb0  3c070000	lhi	r7,((_debugstr)>>16)&0xffff
 2518  00002fb4  24e7fc26	addui	r7,r7,(_debugstr)&0xffff
 2519  00002fb8  afa70000	sw	(r29),r7
 2520  00002fbc  2007002b	addi	r7,r0,#43
 2521  00002fc0  afa70004	sw	4(r29),r7
 2522  00002fc4  0c000b54	jal	_dindex
 2523  00002fc8  54000000	nop; not filled.
 2524  00002fcc  23bd0008	addi	r29,r29,#8
 2525  00002fd0  64210000	snei	r1,r1,#0
 2526  00002fd4  1020002c	beqz	r1,L130_LF1
 2527  00002fd8  54000000	nop; not filled.
 2528  00002fdc          	L135_LF1:
 2529  00002fdc  23bdfff0	addi	r29,r29,#-16
 2530  00002fe0  3c070000	lhi	r7,((LC0_LF1)>>16)&0xffff
 2531  00002fe4  24e7d25c	addui	r7,r7,(LC0_LF1)&0xffff
 2532  00002fe8  afa70000	sw	(r29),r7
 2533  00002fec  afa50004	sw	4(r29),r5
 2534  00002ff0  8c840000	lw	r4,(r4)
 2535  00002ff4  afa40008	sw	8(r29),r4
 2536  00002ff8  0c007184	jal	_printf
 2537  00002ffc  54000000	nop; not filled.
 2538  00003000  23bd0010	addi	r29,r29,#16
 2539  00003004          	L130_LF1:
 2540  00003004  3c020000	lhi	r2,((_nfreepages_LF1)>>16)&0xffff
 2541  00003008  2442d3b0	addui	r2,r2,(_nfreepages_LF1)&0xffff
 2542  0000300c  8c410000	lw	r1,(r2)
 2543  00003010  20210001	addi	r1,r1,#1
 2544  00003014  ac410000	sw	(r2),r1
 2545  00003018  23bdfff8	addi	r29,r29,#-8
 2546  0000301c  3c030000	lhi	r3,((_debugstr)>>16)&0xffff
 2547  00003020  2463fc26	addui	r3,r3,(_debugstr)&0xffff
 2548  00003024  afa30000	sw	(r29),r3
 2549  00003028  2007006d	addi	r7,r0,#109
 2550  0000302c  afa70004	sw	4(r29),r7
 2551  00003030  0c000ae8	jal	_dindex
 2552  00003034  54000000	nop; not filled.
 2553  00003038  23bd0008	addi	r29,r29,#8
 2554  0000303c  64210000	snei	r1,r1,#0
 2555  00003040  1420002c	bnez	r1,L137_LF1
 2556  00003044  54000000	nop; not filled.
 2557  00003048  23bdfff8	addi	r29,r29,#-8
 2558  0000304c  afa30000	sw	(r29),r3
 2559  00003050  2007002b	addi	r7,r0,#43
 2560  00003054  afa70004	sw	4(r29),r7
 2561  00003058  0c000ac0	jal	_dindex
 2562  0000305c  54000000	nop; not filled.
 2563  00003060  23bd0008	addi	r29,r29,#8
 2564  00003064  64210000	snei	r1,r1,#0
 2565  00003068  1020002c	beqz	r1,L136_LF1
 2566  0000306c  54000000	nop; not filled.
 2567  00003070          	L137_LF1:
 2568  00003070  23bdfff0	addi	r29,r29,#-16
 2569  00003074  3c070000	lhi	r7,((LC6_LF1)>>16)&0xffff
 2570  00003078  24e7d34c	addui	r7,r7,(LC6_LF1)&0xffff
 2571  0000307c  afa70000	sw	(r29),r7
 2572  00003080  afa60004	sw	4(r29),r6
 2573  00003084  8c420000	lw	r2,(r2)
 2574  00003088  afa20008	sw	8(r29),r2
 2575  0000308c  0c0070f0	jal	_printf
 2576  00003090  54000000	nop; not filled.
 2577  00003094  23bd0010	addi	r29,r29,#16
 2578  00003098          	L136_LF1:
 2579  00003098  8fa20000	lw	r2,0(r29)
 2580  0000309c  8fa30004	lw	r3,4(r29)
 2581  000030a0  8fa40008	lw	r4,8(r29)
 2582  000030a4  8fa5000c	lw	r5,12(r29)
 2583  000030a8  8fa60010	lw	r6,16(r29)
 2584  000030ac  8fa70014	lw	r7,20(r29)
 2585  000030b0  8fdffff8	lw	r31,-8(r30)
 2586  000030b4  001ee820	add	r29,r0,r30
 2587  000030b8  8fdefffc	lw	r30,-4(r30)
 2588  000030bc  4be00000	jr	r31
 2589  000030c0  54000000	nop
 2590  000030c4          	.endproc _MemoryFreePage
 2591  000030c4          	.align 2
 2592  000030c4          	.proc _MemoryTranslateUserToSystem
 2593  000030c4          	.global _MemoryTranslateUserToSystem
 2594  000030c4          	_MemoryTranslateUserToSystem:
 2595                      ;  Function 'MemoryTranslateUserToSystem'; 0 bytes of locals, 3 regs to save.
 2596  000030c4  afbefffc	sw	-4(r29),r30; push fp
 2597  000030c8  001df020	add	r30,r0,r29; fp = sp
 2598  000030cc  afbffff8	sw	-8(r29),r31; push ret addr
 2599  000030d0  2fbd0018	subui	r29,r29,#24; alloc local storage
 2600  000030d4  afa20000	sw	0(r29),r2
 2601  000030d8  afa30004	sw	4(r29),r3
 2602  000030dc  afa40008	sw	8(r29),r4
 2603  000030e0  8fc30000	lw	r3,(r30)
 2604  000030e4  8fc10004	lw	r1,4(r30)
 2605  000030e8  583f0010	srli	r31,r1,#0x10
 2606  000030ec  3022ffff	andi	r2,r1,#0xffff
 2607  000030f0  8c6100a0	lw	r1,160(r3)
 2608  000030f4  03e1082b	sgt	r1,r31,r1
 2609  000030f8  14200024	bnez	r1,L141_LF1
 2610  000030fc  54000000	nop; not filled.
 2611  00003100  53e10002	slli	r1,r31,#0x2
 2612  00003104  00230820	add	r1,r1,r3
 2613  00003108  8c210060	lw	r1,96(r1)
 2614  0000310c  2004fff8	addi	r4,r0,#-8
 2615  00003110  00240824	and	r1,r1,r4
 2616  00003114  00220820	add	r1,r1,r2
 2617  00003118  08000008	j	L142_LF1
 2618  0000311c  54000000	nop; not filled.
 2619  00003120          	L141_LF1:
 2620  00003120  20010000	addi	r1,r0,#0
 2621  00003124          	L142_LF1:
 2622  00003124  8fa20000	lw	r2,0(r29)
 2623  00003128  8fa30004	lw	r3,4(r29)
 2624  0000312c  8fa40008	lw	r4,8(r29)
 2625  00003130  8fdffff8	lw	r31,-8(r30)
 2626  00003134  001ee820	add	r29,r0,r30
 2627  00003138  8fdefffc	lw	r30,-4(r30)
 2628  0000313c  4be00000	jr	r31
 2629  00003140  54000000	nop
 2630  00003144          	.endproc _MemoryTranslateUserToSystem
 2631  00003144          	.align 2
 2632  00003144          	.proc _MemoryCopySystemToUser
 2633  00003144          	.global _MemoryCopySystemToUser
 2634  00003144          	_MemoryCopySystemToUser:
 2635                      ;  Function 'MemoryCopySystemToUser'; 0 bytes of locals, 8 regs to save.
 2636  00003144  afbefffc	sw	-4(r29),r30; push fp
 2637  00003148  001df020	add	r30,r0,r29; fp = sp
 2638  0000314c  afbffff8	sw	-8(r29),r31; push ret addr
 2639  00003150  2fbd0028	subui	r29,r29,#40; alloc local storage
 2640  00003154  afa20000	sw	0(r29),r2
 2641  00003158  afa30004	sw	4(r29),r3
 2642  0000315c  afa40008	sw	8(r29),r4
 2643  00003160  afa5000c	sw	12(r29),r5
 2644  00003164  afa60010	sw	16(r29),r6
 2645  00003168  afa70014	sw	20(r29),r7
 2646  0000316c  afa80018	sw	24(r29),r8
 2647  00003170  afa9001c	sw	28(r29),r9
 2648  00003174  8fc70000	lw	r7,(r30)
 2649  00003178  8fc50004	lw	r5,4(r30)
 2650  0000317c  8fc40008	lw	r4,8(r30)
 2651  00003180  8fc3000c	lw	r3,12(r30)
 2652  00003184  20060000	addi	r6,r0,#0
 2653  00003188  6c610000	sgti	r1,r3,#0
 2654  0000318c  102000a4	beqz	r1,L180_LF1
 2655  00003190  54000000	nop; not filled.
 2656  00003194  3c080001	lhi	r8,#1
 2657  00003198  25080000	addui	r8,r8,#0
 2658  0000319c          	L181_LF1:
 2659  0000319c  58820010	srli	r2,r4,#0x10
 2660  000031a0  309fffff	andi	r31,r4,#0xffff
 2661  000031a4  8ce100a0	lw	r1,160(r7)
 2662  000031a8  0041082b	sgt	r1,r2,r1
 2663  000031ac  10200010	beqz	r1,L183_LF1
 2664  000031b0  54000000	nop; not filled.
 2665  000031b4  201f0000	addi	r31,r0,#0
 2666  000031b8  0800001c	j	L182_LF1
 2667  000031bc  54000000	nop; not filled.
 2668  000031c0          	L183_LF1:
 2669  000031c0  50410002	slli	r1,r2,#0x2
 2670  000031c4  00270820	add	r1,r1,r7
 2671  000031c8  8c210060	lw	r1,96(r1)
 2672  000031cc  2009fff8	addi	r9,r0,#-8
 2673  000031d0  00290824	and	r1,r1,r9
 2674  000031d4  003ff820	add	r31,r1,r31
 2675  000031d8          	L182_LF1:
 2676  000031d8  67e10000	snei	r1,r31,#0
 2677  000031dc  10200054	beqz	r1,L180_LF1
 2678  000031e0  54000000	nop; not filled.
 2679  000031e4  33e1ffff	andi	r1,r31,#65535
 2680  000031e8  01011022	sub	r2,r8,r1
 2681  000031ec  0043082b	sgt	r1,r2,r3
 2682  000031f0  10200008	beqz	r1,L185_LF1
 2683  000031f4  54000000	nop; not filled.
 2684  000031f8  00031020	add	r2,r0,r3
 2685  000031fc          	L185_LF1:
 2686  000031fc  23bdfff0	addi	r29,r29,#-16
 2687  00003200  afa50000	sw	(r29),r5
 2688  00003204  afbf0004	sw	4(r29),r31
 2689  00003208  afa20008	sw	8(r29),r2
 2690  0000320c  0c000c9c	jal	_bcopy
 2691  00003210  54000000	nop; not filled.
 2692  00003214  23bd0010	addi	r29,r29,#16
 2693  00003218  00621822	sub	r3,r3,r2
 2694  0000321c  00c23020	add	r6,r6,r2
 2695  00003220  00a22820	add	r5,r5,r2
 2696  00003224  00822020	add	r4,r4,r2
 2697  00003228  6c610000	sgti	r1,r3,#0
 2698  0000322c  1420ff6c	bnez	r1,L181_LF1
 2699  00003230  54000000	nop; not filled.
 2700  00003234          	L180_LF1:
 2701  00003234  00060820	add	r1,r0,r6
 2702  00003238  8fa20000	lw	r2,0(r29)
 2703  0000323c  8fa30004	lw	r3,4(r29)
 2704  00003240  8fa40008	lw	r4,8(r29)
 2705  00003244  8fa5000c	lw	r5,12(r29)
 2706  00003248  8fa60010	lw	r6,16(r29)
 2707  0000324c  8fa70014	lw	r7,20(r29)
 2708  00003250  8fa80018	lw	r8,24(r29)
 2709  00003254  8fa9001c	lw	r9,28(r29)
 2710  00003258  8fdffff8	lw	r31,-8(r30)
 2711  0000325c  001ee820	add	r29,r0,r30
 2712  00003260  8fdefffc	lw	r30,-4(r30)
 2713  00003264  4be00000	jr	r31
 2714  00003268  54000000	nop
 2715  0000326c          	.endproc _MemoryCopySystemToUser
 2716  0000326c          	.align 2
 2717  0000326c          	.proc _MemoryCopyUserToSystem
 2718  0000326c          	.global _MemoryCopyUserToSystem
 2719  0000326c          	_MemoryCopyUserToSystem:
 2720                      ;  Function 'MemoryCopyUserToSystem'; 0 bytes of locals, 8 regs to save.
 2721  0000326c  afbefffc	sw	-4(r29),r30; push fp
 2722  00003270  001df020	add	r30,r0,r29; fp = sp
 2723  00003274  afbffff8	sw	-8(r29),r31; push ret addr
 2724  00003278  2fbd0028	subui	r29,r29,#40; alloc local storage
 2725  0000327c  afa20000	sw	0(r29),r2
 2726  00003280  afa30004	sw	4(r29),r3
 2727  00003284  afa40008	sw	8(r29),r4
 2728  00003288  afa5000c	sw	12(r29),r5
 2729  0000328c  afa60010	sw	16(r29),r6
 2730  00003290  afa70014	sw	20(r29),r7
 2731  00003294  afa80018	sw	24(r29),r8
 2732  00003298  afa9001c	sw	28(r29),r9
 2733  0000329c  8fc70000	lw	r7,(r30)
 2734  000032a0  8fc50008	lw	r5,8(r30)
 2735  000032a4  8fc40004	lw	r4,4(r30)
 2736  000032a8  8fc3000c	lw	r3,12(r30)
 2737  000032ac  20060000	addi	r6,r0,#0
 2738  000032b0  6c610000	sgti	r1,r3,#0
 2739  000032b4  102000a4	beqz	r1,L204_LF1
 2740  000032b8  54000000	nop; not filled.
 2741  000032bc  3c080001	lhi	r8,#1
 2742  000032c0  25080000	addui	r8,r8,#0
 2743  000032c4          	L205_LF1:
 2744  000032c4  58820010	srli	r2,r4,#0x10
 2745  000032c8  309fffff	andi	r31,r4,#0xffff
 2746  000032cc  8ce100a0	lw	r1,160(r7)
 2747  000032d0  0041082b	sgt	r1,r2,r1
 2748  000032d4  10200010	beqz	r1,L207_LF1
 2749  000032d8  54000000	nop; not filled.
 2750  000032dc  201f0000	addi	r31,r0,#0
 2751  000032e0  0800001c	j	L206_LF1
 2752  000032e4  54000000	nop; not filled.
 2753  000032e8          	L207_LF1:
 2754  000032e8  50410002	slli	r1,r2,#0x2
 2755  000032ec  00270820	add	r1,r1,r7
 2756  000032f0  8c210060	lw	r1,96(r1)
 2757  000032f4  2009fff8	addi	r9,r0,#-8
 2758  000032f8  00290824	and	r1,r1,r9
 2759  000032fc  003ff820	add	r31,r1,r31
 2760  00003300          	L206_LF1:
 2761  00003300  67e10000	snei	r1,r31,#0
 2762  00003304  10200054	beqz	r1,L204_LF1
 2763  00003308  54000000	nop; not filled.
 2764  0000330c  33e1ffff	andi	r1,r31,#65535
 2765  00003310  01011022	sub	r2,r8,r1
 2766  00003314  0043082b	sgt	r1,r2,r3
 2767  00003318  10200008	beqz	r1,L210_LF1
 2768  0000331c  54000000	nop; not filled.
 2769  00003320  00031020	add	r2,r0,r3
 2770  00003324          	L210_LF1:
 2771  00003324  23bdfff0	addi	r29,r29,#-16
 2772  00003328  afbf0000	sw	(r29),r31
 2773  0000332c  afa50004	sw	4(r29),r5
 2774  00003330  afa20008	sw	8(r29),r2
 2775  00003334  0c000b74	jal	_bcopy
 2776  00003338  54000000	nop; not filled.
 2777  0000333c  23bd0010	addi	r29,r29,#16
 2778  00003340  00621822	sub	r3,r3,r2
 2779  00003344  00c23020	add	r6,r6,r2
 2780  00003348  00a22820	add	r5,r5,r2
 2781  0000334c  00822020	add	r4,r4,r2
 2782  00003350  6c610000	sgti	r1,r3,#0
 2783  00003354  1420ff6c	bnez	r1,L205_LF1
 2784  00003358  54000000	nop; not filled.
 2785  0000335c          	L204_LF1:
 2786  0000335c  00060820	add	r1,r0,r6
 2787  00003360  8fa20000	lw	r2,0(r29)
 2788  00003364  8fa30004	lw	r3,4(r29)
 2789  00003368  8fa40008	lw	r4,8(r29)
 2790  0000336c  8fa5000c	lw	r5,12(r29)
 2791  00003370  8fa60010	lw	r6,16(r29)
 2792  00003374  8fa70014	lw	r7,20(r29)
 2793  00003378  8fa80018	lw	r8,24(r29)
 2794  0000337c  8fa9001c	lw	r9,28(r29)
 2795  00003380  8fdffff8	lw	r31,-8(r30)
 2796  00003384  001ee820	add	r29,r0,r30
 2797  00003388  8fdefffc	lw	r30,-4(r30)
 2798  0000338c  4be00000	jr	r31
 2799  00003390  54000000	nop
 2800  00003394          	.endproc _MemoryCopyUserToSystem
 2801  00003394          	.align 2
 2802  00003394          	.proc _MemorySetupPte
 2803  00003394          	.global _MemorySetupPte
 2804  00003394          	_MemorySetupPte:
 2805                      ;  Function 'MemorySetupPte'; 0 bytes of locals, 0 regs to save.
 2806  00003394  afbefffc	sw	-4(r29),r30; push fp
 2807  00003398  001df020	add	r30,r0,r29; fp = sp
 2808  0000339c  afbffff8	sw	-8(r29),r31; push ret addr
 2809  000033a0  2fbd0008	subui	r29,r29,#8; alloc local storage
 2810  000033a4  8fc10000	lw	r1,(r30)
 2811  000033a8  50210010	slli	r1,r1,#0x10
 2812  000033ac  34210001	ori	r1,r1,#1
 2813  000033b0  8fdffff8	lw	r31,-8(r30)
 2814  000033b4  001ee820	add	r29,r0,r30
 2815  000033b8  8fdefffc	lw	r30,-4(r30)
 2816  000033bc  4be00000	jr	r31
 2817  000033c0  54000000	nop
 2818  000033c4          	.endproc _MemorySetupPte
 2819  000033c4          	.align 2
 2820  000033c4          	.proc _MemoryFreePte
 2821  000033c4          	.global _MemoryFreePte
 2822  000033c4          	_MemoryFreePte:
 2823                      ;  Function 'MemoryFreePte'; 0 bytes of locals, 0 regs to save.
 2824  000033c4  afbefffc	sw	-4(r29),r30; push fp
 2825  000033c8  001df020	add	r30,r0,r29; fp = sp
 2826  000033cc  afbffff8	sw	-8(r29),r31; push ret addr
 2827  000033d0  2fbd0008	subui	r29,r29,#8; alloc local storage
 2828  000033d4  23bdfff8	addi	r29,r29,#-8
 2829  000033d8  97c10000	lhu	r1,(r30)
 2830  000033dc  afa10000	sw	(r29),r1
 2831  000033e0  0ffffb14	jal	_MemoryFreePage
 2832  000033e4  54000000	nop; not filled.
 2833  000033e8  23bd0008	addi	r29,r29,#8
 2834  000033ec  8fdffff8	lw	r31,-8(r30)
 2835  000033f0  001ee820	add	r29,r0,r30
 2836  000033f4  8fdefffc	lw	r30,-4(r30)
 2837  000033f8  4be00000	jr	r31
 2838  000033fc  54000000	nop
 2839  00003400          	.endproc _MemoryFreePte
 2840  00003400          	.align 2
 2841  00003400          	.proc _MemoryPteToPage
 2842  00003400          	.global _MemoryPteToPage
 2843  00003400          	_MemoryPteToPage:
 2844                      ;  Function 'MemoryPteToPage'; 0 bytes of locals, 0 regs to save.
 2845  00003400  afbefffc	sw	-4(r29),r30; push fp
 2846  00003404  001df020	add	r30,r0,r29; fp = sp
 2847  00003408  afbffff8	sw	-8(r29),r31; push ret addr
 2848  0000340c  2fbd0008	subui	r29,r29,#8; alloc local storage
 2849  00003410  8fc10000	lw	r1,(r30)
 2850  00003414  201ffff8	addi	r31,r0,#-8
 2851  00003418  003f0824	and	r1,r1,r31
 2852  0000341c  8fdffff8	lw	r31,-8(r30)
 2853  00003420  001ee820	add	r29,r0,r30
 2854  00003424  8fdefffc	lw	r30,-4(r30)
 2855  00003428  4be00000	jr	r31
 2856  0000342c  54000000	nop
 2857  00003430          	.endproc _MemoryPteToPage
 2858  00003430          	.data
 2859  0000d36c          	.align 2
 2860  0000d36c          	_invalidOps61_LF1:
 2861  0000d36c  00003404	.word 13316
 2862  0000d370          	.align 2
 2863  0000d370          	LC7_LF1:
 2864  0000d370  4f706572	.ascii "Operand for instruction %08x is 0x%x (reg=<%d,0x%x>)\n\000"
 2864  0000d374  616e6420	
 2864  0000d378  666f7220	
 2864  0000d37c  696e7374	
 2864  0000d380  72756374	
 2864  0000d384  696f6e20	
 2864  0000d388  25303878	
 2864  0000d38c  20697320	
 2864  0000d390  30782578	
 2864  0000d394  20287265	
 2864  0000d398  673d3c25	
 2864  0000d39c  642c3078	
 2864  0000d3a0  25783e29	
 2864  0000d3a4  0a00    	
 2865  0000d3a6          	.text
 2866  00003430          	.align 2
 2867  00003430          	.proc _MemoryGetOperandAddress
 2868  00003430          	.global _MemoryGetOperandAddress
 2869  00003430          	_MemoryGetOperandAddress:
 2870                      ;  Function 'MemoryGetOperandAddress'; 0 bytes of locals, 6 regs to save.
 2871  00003430  afbefffc	sw	-4(r29),r30; push fp
 2872  00003434  001df020	add	r30,r0,r29; fp = sp
 2873  00003438  afbffff8	sw	-8(r29),r31; push ret addr
 2874  0000343c  2fbd0020	subui	r29,r29,#32; alloc local storage
 2875  00003440  afa20000	sw	0(r29),r2
 2876  00003444  afa30004	sw	4(r29),r3
 2877  00003448  afa40008	sw	8(r29),r4
 2878  0000344c  afa5000c	sw	12(r29),r5
 2879  00003450  afa60010	sw	16(r29),r6
 2880  00003454  afa70014	sw	20(r29),r7
 2881  00003458  8fc20000	lw	r2,(r30)
 2882  0000345c  8fc50004	lw	r5,4(r30)
 2883  00003460  58a1001a	srli	r1,r5,#0x1a
 2884  00003464  203fffe0	addi	r31,r1,#-32
 2885  00003468  6fe1000f	sgtui	r1,r31,#15
 2886  0000346c  14200020	bnez	r1,L227_LF1
 2887  00003470  54000000	nop; not filled.
 2888  00003474  3c010000	lhi	r1,((_invalidOps61_LF1)>>16)&0xffff
 2889  00003478  2421d36c	addui	r1,r1,(_invalidOps61_LF1)&0xffff
 2890  0000347c  8c210000	lw	r1,(r1)
 2891  00003480  003f0806	srl	r1,r1,r31
 2892  00003484  30210001	andi	r1,r1,#1
 2893  00003488  10200010	beqz	r1,L226_LF1
 2894  0000348c  54000000	nop; not filled.
 2895  00003490          	L227_LF1:
 2896  00003490  2001ffff	addi	r1,r0,#-1
 2897  00003494  080000c4	j	L231_LF1
 2898  00003498  54000000	nop; not filled.
 2899  0000349c          	L226_LF1:
 2900  0000349c  58a10015	srli	r1,r5,#0x15
 2901  000034a0  3026001f	andi	r6,r1,#31
 2902  000034a4  30bfffff	andi	r31,r5,#0xffff
 2903  000034a8  5be1000f	srli	r1,r31,#0xf
 2904  000034ac  10200010	beqz	r1,L228_LF1
 2905  000034b0  54000000	nop; not filled.
 2906  000034b4  3c07ffff	lhi	r7,#-1
 2907  000034b8  24e70000	addui	r7,r7,#0
 2908  000034bc  03e7f825	or	r31,r31,r7
 2909  000034c0          	L228_LF1:
 2910  000034c0  8c420000	lw	r2,(r2)
 2911  000034c4  50c10002	slli	r1,r6,#0x2
 2912  000034c8  00220820	add	r1,r1,r2
 2913  000034cc  8c230028	lw	r3,40(r1)
 2914  000034d0  007f2020	add	r4,r3,r31
 2915  000034d4  23bdfff8	addi	r29,r29,#-8
 2916  000034d8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 2917  000034dc  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 2918  000034e0  afa20000	sw	(r29),r2
 2919  000034e4  2007006d	addi	r7,r0,#109
 2920  000034e8  afa70004	sw	4(r29),r7
 2921  000034ec  0c00062c	jal	_dindex
 2922  000034f0  54000000	nop; not filled.
 2923  000034f4  23bd0008	addi	r29,r29,#8
 2924  000034f8  64210000	snei	r1,r1,#0
 2925  000034fc  1420002c	bnez	r1,L230_LF1
 2926  00003500  54000000	nop; not filled.
 2927  00003504  23bdfff8	addi	r29,r29,#-8
 2928  00003508  afa20000	sw	(r29),r2
 2929  0000350c  2007002b	addi	r7,r0,#43
 2930  00003510  afa70004	sw	4(r29),r7
 2931  00003514  0c000604	jal	_dindex
 2932  00003518  54000000	nop; not filled.
 2933  0000351c  23bd0008	addi	r29,r29,#8
 2934  00003520  64210000	snei	r1,r1,#0
 2935  00003524  10200030	beqz	r1,L229_LF1
 2936  00003528  54000000	nop; not filled.
 2937  0000352c          	L230_LF1:
 2938  0000352c  23bdffe8	addi	r29,r29,#-24
 2939  00003530  3c070000	lhi	r7,((LC7_LF1)>>16)&0xffff
 2940  00003534  24e7d370	addui	r7,r7,(LC7_LF1)&0xffff
 2941  00003538  afa70000	sw	(r29),r7
 2942  0000353c  afa50004	sw	4(r29),r5
 2943  00003540  afa40008	sw	8(r29),r4
 2944  00003544  afa6000c	sw	12(r29),r6
 2945  00003548  afa30010	sw	16(r29),r3
 2946  0000354c  0c006c30	jal	_printf
 2947  00003550  54000000	nop; not filled.
 2948  00003554  23bd0018	addi	r29,r29,#24
 2949  00003558          	L229_LF1:
 2950  00003558  00040820	add	r1,r0,r4
 2951  0000355c          	L231_LF1:
 2952  0000355c  8fa20000	lw	r2,0(r29)
 2953  00003560  8fa30004	lw	r3,4(r29)
 2954  00003564  8fa40008	lw	r4,8(r29)
 2955  00003568  8fa5000c	lw	r5,12(r29)
 2956  0000356c  8fa60010	lw	r6,16(r29)
 2957  00003570  8fa70014	lw	r7,20(r29)
 2958  00003574  8fdffff8	lw	r31,-8(r30)
 2959  00003578  001ee820	add	r29,r0,r30
 2960  0000357c  8fdefffc	lw	r30,-4(r30)
 2961  00003580  4be00000	jr	r31
 2962  00003584  54000000	nop
 2963  00003588          	.endproc _MemoryGetOperandAddress
 2964  00003588          	.data
 2965  0000d3a6          	.align 2
 2966  0000d3a8          	_pagestart_LF1:
 2967  0000d3a8          	.space 4
 2968  0000d3ac          	.align 2
 2969  0000d3ac          	_freemapmax_LF1:
 2970  0000d3ac          	.space 4
 2971  0000d3b0          	.align 2
 2972  0000d3b0          	_nfreepages_LF1:
 2973  0000d3b0          	.space 4
 2974  0000d3b4          	.align 2
 2975  0000d3b4          	_freepages_LF1:
 2976  0000d3b4          	.space 8192
 2977                      ; Compiled by GCC
 2978  0000f3b4          	.text
 2979  00003588          	.align 2
 2980  00003588          	.proc _isspace
 2981  00003588          	.global _isspace
 2982  00003588          	_isspace:
 2983                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 2984  00003588  afbefffc	sw	-4(r29),r30; push fp
 2985  0000358c  001df020	add	r30,r0,r29; fp = sp
 2986  00003590  afbffff8	sw	-8(r29),r31; push ret addr
 2987  00003594  2fbd0010	subui	r29,r29,#16; alloc local storage
 2988  00003598  afa20000	sw	0(r29),r2
 2989  0000359c  83c20003	lb	r2,3(r30)
 2990  000035a0  201f0000	addi	r31,r0,#0
 2991  000035a4  304100ff	andi	r1,r2,#0x00ff
 2992  000035a8  60210020	seqi	r1,r1,#32
 2993  000035ac  14200018	bnez	r1,L6_LF2
 2994  000035b0  54000000	nop; not filled.
 2995  000035b4  2041fff7	addi	r1,r2,#-9
 2996  000035b8  302100ff	andi	r1,r1,#0x00ff
 2997  000035bc  70210001	sleui	r1,r1,#1
 2998  000035c0  10200008	beqz	r1,L5_LF2
 2999  000035c4  54000000	nop; not filled.
 3000  000035c8          	L6_LF2:
 3001  000035c8  201f0001	addi	r31,r0,#1
 3002  000035cc          	L5_LF2:
 3003  000035cc  001f0820	add	r1,r0,r31
 3004  000035d0  8fa20000	lw	r2,0(r29)
 3005  000035d4  8fdffff8	lw	r31,-8(r30)
 3006  000035d8  001ee820	add	r29,r0,r30
 3007  000035dc  8fdefffc	lw	r30,-4(r30)
 3008  000035e0  4be00000	jr	r31
 3009  000035e4  54000000	nop
 3010  000035e8          	.endproc _isspace
 3011  000035e8          	.align 2
 3012  000035e8          	.proc _isxdigit
 3013  000035e8          	.global _isxdigit
 3014  000035e8          	_isxdigit:
 3015                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 3016  000035e8  afbefffc	sw	-4(r29),r30; push fp
 3017  000035ec  001df020	add	r30,r0,r29; fp = sp
 3018  000035f0  afbffff8	sw	-8(r29),r31; push ret addr
 3019  000035f4  2fbd0010	subui	r29,r29,#16; alloc local storage
 3020  000035f8  afa20000	sw	0(r29),r2
 3021  000035fc  83df0003	lb	r31,3(r30)
 3022  00003600  20020000	addi	r2,r0,#0
 3023  00003604  23e1ffd0	addi	r1,r31,#-48
 3024  00003608  302100ff	andi	r1,r1,#0x00ff
 3025  0000360c  70210009	sleui	r1,r1,#9
 3026  00003610  14200028	bnez	r1,L12_LF2
 3027  00003614  54000000	nop; not filled.
 3028  00003618  23e1ff9f	addi	r1,r31,#-97
 3029  0000361c  302100ff	andi	r1,r1,#0x00ff
 3030  00003620  70210005	sleui	r1,r1,#5
 3031  00003624  14200014	bnez	r1,L12_LF2
 3032  00003628  54000000	nop; not filled.
 3033  0000362c  33e100ff	andi	r1,r31,#0x00ff
 3034  00003630  64210041	snei	r1,r1,#65
 3035  00003634  14200008	bnez	r1,L11_LF2
 3036  00003638  54000000	nop; not filled.
 3037  0000363c          	L12_LF2:
 3038  0000363c  20020001	addi	r2,r0,#1
 3039  00003640          	L11_LF2:
 3040  00003640  00020820	add	r1,r0,r2
 3041  00003644  8fa20000	lw	r2,0(r29)
 3042  00003648  8fdffff8	lw	r31,-8(r30)
 3043  0000364c  001ee820	add	r29,r0,r30
 3044  00003650  8fdefffc	lw	r30,-4(r30)
 3045  00003654  4be00000	jr	r31
 3046  00003658  54000000	nop
 3047  0000365c          	.endproc _isxdigit
 3048  0000365c          	.align 2
 3049  0000365c          	.proc _dstrcpy
 3050  0000365c          	.global _dstrcpy
 3051  0000365c          	_dstrcpy:
 3052                      ;  Function 'dstrcpy'; 0 bytes of locals, 2 regs to save.
 3053  0000365c  afbefffc	sw	-4(r29),r30; push fp
 3054  00003660  001df020	add	r30,r0,r29; fp = sp
 3055  00003664  afbffff8	sw	-8(r29),r31; push ret addr
 3056  00003668  2fbd0010	subui	r29,r29,#16; alloc local storage
 3057  0000366c  afa20000	sw	0(r29),r2
 3058  00003670  afa30004	sw	4(r29),r3
 3059  00003674  8fdf0000	lw	r31,(r30)
 3060  00003678  8fc20004	lw	r2,4(r30)
 3061  0000367c  001f1820	add	r3,r0,r31
 3062  00003680          	L19_LF2:
 3063  00003680  80410000	lb	r1,(r2)
 3064  00003684  a3e10000	sb	(r31),r1
 3065  00003688  20420001	addi	r2,r2,#1
 3066  0000368c  23ff0001	addi	r31,r31,#1
 3067  00003690  302100ff	andi	r1,r1,#0x00ff
 3068  00003694  64210000	snei	r1,r1,#0
 3069  00003698  1420ffe4	bnez	r1,L19_LF2
 3070  0000369c  54000000	nop; not filled.
 3071  000036a0  00030820	add	r1,r0,r3
 3072  000036a4  8fa20000	lw	r2,0(r29)
 3073  000036a8  8fa30004	lw	r3,4(r29)
 3074  000036ac  8fdffff8	lw	r31,-8(r30)
 3075  000036b0  001ee820	add	r29,r0,r30
 3076  000036b4  8fdefffc	lw	r30,-4(r30)
 3077  000036b8  4be00000	jr	r31
 3078  000036bc  54000000	nop
 3079  000036c0          	.endproc _dstrcpy
 3080  000036c0          	.align 2
 3081  000036c0          	.proc _dstrncpy
 3082  000036c0          	.global _dstrncpy
 3083  000036c0          	_dstrncpy:
 3084                      ;  Function 'dstrncpy'; 0 bytes of locals, 3 regs to save.
 3085  000036c0  afbefffc	sw	-4(r29),r30; push fp
 3086  000036c4  001df020	add	r30,r0,r29; fp = sp
 3087  000036c8  afbffff8	sw	-8(r29),r31; push ret addr
 3088  000036cc  2fbd0018	subui	r29,r29,#24; alloc local storage
 3089  000036d0  afa20000	sw	0(r29),r2
 3090  000036d4  afa30004	sw	4(r29),r3
 3091  000036d8  afa40008	sw	8(r29),r4
 3092  000036dc  8fc20000	lw	r2,(r30)
 3093  000036e0  8fc30004	lw	r3,4(r30)
 3094  000036e4  8fdf0008	lw	r31,8(r30)
 3095  000036e8  00022020	add	r4,r0,r2
 3096  000036ec  08000024	j	L37_LF2
 3097  000036f0  54000000	nop; not filled.
 3098  000036f4          	L34_LF2:
 3099  000036f4  80610000	lb	r1,(r3)
 3100  000036f8  a0410000	sb	(r2),r1
 3101  000036fc  20630001	addi	r3,r3,#1
 3102  00003700  20420001	addi	r2,r2,#1
 3103  00003704  302100ff	andi	r1,r1,#0x00ff
 3104  00003708  64210000	snei	r1,r1,#0
 3105  0000370c  10200018	beqz	r1,L32_LF2
 3106  00003710  54000000	nop; not filled.
 3107  00003714          	L37_LF2:
 3108  00003714  001f0820	add	r1,r0,r31
 3109  00003718  23ffffff	addi	r31,r31,#-1
 3110  0000371c  70210000	slei	r1,r1,#0
 3111  00003720  1020ffd0	beqz	r1,L34_LF2
 3112  00003724  54000000	nop; not filled.
 3113  00003728          	L32_LF2:
 3114  00003728  00040820	add	r1,r0,r4
 3115  0000372c  8fa20000	lw	r2,0(r29)
 3116  00003730  8fa30004	lw	r3,4(r29)
 3117  00003734  8fa40008	lw	r4,8(r29)
 3118  00003738  8fdffff8	lw	r31,-8(r30)
 3119  0000373c  001ee820	add	r29,r0,r30
 3120  00003740  8fdefffc	lw	r30,-4(r30)
 3121  00003744  4be00000	jr	r31
 3122  00003748  54000000	nop
 3123  0000374c          	.endproc _dstrncpy
 3124  0000374c          	.align 2
 3125  0000374c          	.proc _dstrcat
 3126  0000374c          	.global _dstrcat
 3127  0000374c          	_dstrcat:
 3128                      ;  Function 'dstrcat'; 0 bytes of locals, 2 regs to save.
 3129  0000374c  afbefffc	sw	-4(r29),r30; push fp
 3130  00003750  001df020	add	r30,r0,r29; fp = sp
 3131  00003754  afbffff8	sw	-8(r29),r31; push ret addr
 3132  00003758  2fbd0010	subui	r29,r29,#16; alloc local storage
 3133  0000375c  afa20000	sw	0(r29),r2
 3134  00003760  afa30004	sw	4(r29),r3
 3135  00003764  8fdf0000	lw	r31,(r30)
 3136  00003768  001f1820	add	r3,r0,r31
 3137  0000376c  90610000	lbu	r1,(r3)
 3138  00003770  64210000	snei	r1,r1,#0
 3139  00003774  10200018	beqz	r1,L50_LF2
 3140  00003778  54000000	nop; not filled.
 3141  0000377c          	L51_LF2:
 3142  0000377c  23ff0001	addi	r31,r31,#1
 3143  00003780  93e10000	lbu	r1,(r31)
 3144  00003784  64210000	snei	r1,r1,#0
 3145  00003788  1420fff0	bnez	r1,L51_LF2
 3146  0000378c  54000000	nop; not filled.
 3147  00003790          	L50_LF2:
 3148  00003790  001f1020	add	r2,r0,r31
 3149  00003794  8fdf0004	lw	r31,4(r30)
 3150  00003798          	L54_LF2:
 3151  00003798  83e10000	lb	r1,(r31)
 3152  0000379c  a0410000	sb	(r2),r1
 3153  000037a0  23ff0001	addi	r31,r31,#1
 3154  000037a4  20420001	addi	r2,r2,#1
 3155  000037a8  302100ff	andi	r1,r1,#0x00ff
 3156  000037ac  64210000	snei	r1,r1,#0
 3157  000037b0  1420ffe4	bnez	r1,L54_LF2
 3158  000037b4  54000000	nop; not filled.
 3159  000037b8  00030820	add	r1,r0,r3
 3160  000037bc  8fa20000	lw	r2,0(r29)
 3161  000037c0  8fa30004	lw	r3,4(r29)
 3162  000037c4  8fdffff8	lw	r31,-8(r30)
 3163  000037c8  001ee820	add	r29,r0,r30
 3164  000037cc  8fdefffc	lw	r30,-4(r30)
 3165  000037d0  4be00000	jr	r31
 3166  000037d4  54000000	nop
 3167  000037d8          	.endproc _dstrcat
 3168  000037d8          	.align 2
 3169  000037d8          	.proc _dstrncmp
 3170  000037d8          	.global _dstrncmp
 3171  000037d8          	_dstrncmp:
 3172                      ;  Function 'dstrncmp'; 0 bytes of locals, 4 regs to save.
 3173  000037d8  afbefffc	sw	-4(r29),r30; push fp
 3174  000037dc  001df020	add	r30,r0,r29; fp = sp
 3175  000037e0  afbffff8	sw	-8(r29),r31; push ret addr
 3176  000037e4  2fbd0018	subui	r29,r29,#24; alloc local storage
 3177  000037e8  afa20000	sw	0(r29),r2
 3178  000037ec  afa30004	sw	4(r29),r3
 3179  000037f0  afa40008	sw	8(r29),r4
 3180  000037f4  afa5000c	sw	12(r29),r5
 3181  000037f8  8fc30000	lw	r3,(r30)
 3182  000037fc  8fc40004	lw	r4,4(r30)
 3183  00003800  8fc50008	lw	r5,8(r30)
 3184  00003804  20020000	addi	r2,r0,#0
 3185  00003808  0045082a	slt	r1,r2,r5
 3186  0000380c  1020003c	beqz	r1,L73_LF2
 3187  00003810  54000000	nop; not filled.
 3188  00003814          	L75_LF2:
 3189  00003814  909f0000	lbu	r31,(r4)
 3190  00003818  67e10000	snei	r1,r31,#0
 3191  0000381c  10200038	beqz	r1,L86_LF2
 3192  00003820  54000000	nop; not filled.
 3193  00003824  90610000	lbu	r1,(r3)
 3194  00003828  003f0829	sne	r1,r1,r31
 3195  0000382c  1420001c	bnez	r1,L73_LF2
 3196  00003830  54000000	nop; not filled.
 3197  00003834  20630001	addi	r3,r3,#1
 3198  00003838  20840001	addi	r4,r4,#1
 3199  0000383c  20420001	addi	r2,r2,#1
 3200  00003840  0045082a	slt	r1,r2,r5
 3201  00003844  1420ffcc	bnez	r1,L75_LF2
 3202  00003848  54000000	nop; not filled.
 3203  0000384c          	L73_LF2:
 3204  0000384c  00450828	seq	r1,r2,r5
 3205  00003850  10200010	beqz	r1,L80_LF2
 3206  00003854  54000000	nop; not filled.
 3207  00003858          	L86_LF2:
 3208  00003858  20010000	addi	r1,r0,#0
 3209  0000385c  08000028	j	L84_LF2
 3210  00003860  54000000	nop; not filled.
 3211  00003864          	L80_LF2:
 3212  00003864  907f0000	lbu	r31,(r3)
 3213  00003868  90830000	lbu	r3,(r4)
 3214  0000386c  03e30822	sub	r1,r31,r3
 3215  00003870  74210000	sgei	r1,r1,#0
 3216  00003874  2002ffff	addi	r2,r0,#-1
 3217  00003878  10200008	beqz	r1,L82_LF2
 3218  0000387c  54000000	nop; not filled.
 3219  00003880  03e31029	sne	r2,r31,r3
 3220  00003884          	L82_LF2:
 3221  00003884  00020820	add	r1,r0,r2
 3222  00003888          	L84_LF2:
 3223  00003888  8fa20000	lw	r2,0(r29)
 3224  0000388c  8fa30004	lw	r3,4(r29)
 3225  00003890  8fa40008	lw	r4,8(r29)
 3226  00003894  8fa5000c	lw	r5,12(r29)
 3227  00003898  8fdffff8	lw	r31,-8(r30)
 3228  0000389c  001ee820	add	r29,r0,r30
 3229  000038a0  8fdefffc	lw	r30,-4(r30)
 3230  000038a4  4be00000	jr	r31
 3231  000038a8  54000000	nop
 3232  000038ac          	.endproc _dstrncmp
 3233  000038ac          	.align 2
 3234  000038ac          	.proc _dstrlen
 3235  000038ac          	.global _dstrlen
 3236  000038ac          	_dstrlen:
 3237                      ;  Function 'dstrlen'; 0 bytes of locals, 1 regs to save.
 3238  000038ac  afbefffc	sw	-4(r29),r30; push fp
 3239  000038b0  001df020	add	r30,r0,r29; fp = sp
 3240  000038b4  afbffff8	sw	-8(r29),r31; push ret addr
 3241  000038b8  2fbd0010	subui	r29,r29,#16; alloc local storage
 3242  000038bc  afa20000	sw	0(r29),r2
 3243  000038c0  8fdf0000	lw	r31,(r30)
 3244  000038c4  20020000	addi	r2,r0,#0
 3245  000038c8  08000008	j	L97_LF2
 3246  000038cc  54000000	nop; not filled.
 3247  000038d0          	L95_LF2:
 3248  000038d0  20420001	addi	r2,r2,#1
 3249  000038d4          	L97_LF2:
 3250  000038d4  93e10000	lbu	r1,(r31)
 3251  000038d8  23ff0001	addi	r31,r31,#1
 3252  000038dc  64210000	snei	r1,r1,#0
 3253  000038e0  1420ffec	bnez	r1,L95_LF2
 3254  000038e4  54000000	nop; not filled.
 3255  000038e8  00020820	add	r1,r0,r2
 3256  000038ec  8fa20000	lw	r2,0(r29)
 3257  000038f0  8fdffff8	lw	r31,-8(r30)
 3258  000038f4  001ee820	add	r29,r0,r30
 3259  000038f8  8fdefffc	lw	r30,-4(r30)
 3260  000038fc  4be00000	jr	r31
 3261  00003900  54000000	nop
 3262  00003904          	.endproc _dstrlen
 3263  00003904          	.align 2
 3264  00003904          	.proc _dstrstr
 3265  00003904          	.global _dstrstr
 3266  00003904          	_dstrstr:
 3267                      ;  Function 'dstrstr'; 0 bytes of locals, 6 regs to save.
 3268  00003904  afbefffc	sw	-4(r29),r30; push fp
 3269  00003908  001df020	add	r30,r0,r29; fp = sp
 3270  0000390c  afbffff8	sw	-8(r29),r31; push ret addr
 3271  00003910  2fbd0020	subui	r29,r29,#32; alloc local storage
 3272  00003914  afa20000	sw	0(r29),r2
 3273  00003918  afa30004	sw	4(r29),r3
 3274  0000391c  afa40008	sw	8(r29),r4
 3275  00003920  afa5000c	sw	12(r29),r5
 3276  00003924  afa60010	sw	16(r29),r6
 3277  00003928  afa70014	sw	20(r29),r7
 3278  0000392c  8fc50000	lw	r5,(r30)
 3279  00003930  8fc70004	lw	r7,4(r30)
 3280  00003934  20030000	addi	r3,r0,#0
 3281  00003938  90e10000	lbu	r1,(r7)
 3282  0000393c  20e20001	addi	r2,r7,#1
 3283  00003940  64210000	snei	r1,r1,#0
 3284  00003944  1020001c	beqz	r1,L125_LF2
 3285  00003948  54000000	nop; not filled.
 3286  0000394c          	L126_LF2:
 3287  0000394c  20630001	addi	r3,r3,#1
 3288  00003950  90410000	lbu	r1,(r2)
 3289  00003954  20420001	addi	r2,r2,#1
 3290  00003958  64210000	snei	r1,r1,#0
 3291  0000395c  1420ffec	bnez	r1,L126_LF2
 3292  00003960  54000000	nop; not filled.
 3293  00003964          	L125_LF2:
 3294  00003964  00033020	add	r6,r0,r3
 3295  00003968  080000ac	j	L149_LF2
 3296  0000396c  54000000	nop; not filled.
 3297  00003970          	L130_LF2:
 3298  00003970  00051820	add	r3,r0,r5
 3299  00003974  00072020	add	r4,r0,r7
 3300  00003978  20020000	addi	r2,r0,#0
 3301  0000397c  0046082a	slt	r1,r2,r6
 3302  00003980  1020003c	beqz	r1,L134_LF2
 3303  00003984  54000000	nop; not filled.
 3304  00003988          	L136_LF2:
 3305  00003988  909f0000	lbu	r31,(r4)
 3306  0000398c  67e10000	snei	r1,r31,#0
 3307  00003990  10200038	beqz	r1,L150_LF2
 3308  00003994  54000000	nop; not filled.
 3309  00003998  90610000	lbu	r1,(r3)
 3310  0000399c  003f0829	sne	r1,r1,r31
 3311  000039a0  1420001c	bnez	r1,L134_LF2
 3312  000039a4  54000000	nop; not filled.
 3313  000039a8  20630001	addi	r3,r3,#1
 3314  000039ac  20840001	addi	r4,r4,#1
 3315  000039b0  20420001	addi	r2,r2,#1
 3316  000039b4  0046082a	slt	r1,r2,r6
 3317  000039b8  1420ffcc	bnez	r1,L136_LF2
 3318  000039bc  54000000	nop; not filled.
 3319  000039c0          	L134_LF2:
 3320  000039c0  00460828	seq	r1,r2,r6
 3321  000039c4  10200010	beqz	r1,L141_LF2
 3322  000039c8  54000000	nop; not filled.
 3323  000039cc          	L150_LF2:
 3324  000039cc  20010000	addi	r1,r0,#0
 3325  000039d0  08000028	j	L132_LF2
 3326  000039d4  54000000	nop; not filled.
 3327  000039d8          	L141_LF2:
 3328  000039d8  90630000	lbu	r3,(r3)
 3329  000039dc  90820000	lbu	r2,(r4)
 3330  000039e0  00620822	sub	r1,r3,r2
 3331  000039e4  74210000	sgei	r1,r1,#0
 3332  000039e8  201fffff	addi	r31,r0,#-1
 3333  000039ec  10200008	beqz	r1,L143_LF2
 3334  000039f0  54000000	nop; not filled.
 3335  000039f4  0062f829	sne	r31,r3,r2
 3336  000039f8          	L143_LF2:
 3337  000039f8  001f0820	add	r1,r0,r31
 3338  000039fc          	L132_LF2:
 3339  000039fc  64210000	snei	r1,r1,#0
 3340  00003a00  14200010	bnez	r1,L131_LF2
 3341  00003a04  54000000	nop; not filled.
 3342  00003a08  00050820	add	r1,r0,r5
 3343  00003a0c  0800001c	j	L146_LF2
 3344  00003a10  54000000	nop; not filled.
 3345  00003a14          	L131_LF2:
 3346  00003a14  20a50001	addi	r5,r5,#1
 3347  00003a18          	L149_LF2:
 3348  00003a18  90a10000	lbu	r1,(r5)
 3349  00003a1c  64210000	snei	r1,r1,#0
 3350  00003a20  1420ff4c	bnez	r1,L130_LF2
 3351  00003a24  54000000	nop; not filled.
 3352  00003a28  20010000	addi	r1,r0,#0
 3353  00003a2c          	L146_LF2:
 3354  00003a2c  8fa20000	lw	r2,0(r29)
 3355  00003a30  8fa30004	lw	r3,4(r29)
 3356  00003a34  8fa40008	lw	r4,8(r29)
 3357  00003a38  8fa5000c	lw	r5,12(r29)
 3358  00003a3c  8fa60010	lw	r6,16(r29)
 3359  00003a40  8fa70014	lw	r7,20(r29)
 3360  00003a44  8fdffff8	lw	r31,-8(r30)
 3361  00003a48  001ee820	add	r29,r0,r30
 3362  00003a4c  8fdefffc	lw	r30,-4(r30)
 3363  00003a50  4be00000	jr	r31
 3364  00003a54  54000000	nop
 3365  00003a58          	.endproc _dstrstr
 3366  00003a58          	.align 2
 3367  00003a58          	.proc _dmindex
 3368  00003a58          	.global _dmindex
 3369  00003a58          	_dmindex:
 3370                      ;  Function 'dmindex'; 0 bytes of locals, 5 regs to save.
 3371  00003a58  afbefffc	sw	-4(r29),r30; push fp
 3372  00003a5c  001df020	add	r30,r0,r29; fp = sp
 3373  00003a60  afbffff8	sw	-8(r29),r31; push ret addr
 3374  00003a64  2fbd0020	subui	r29,r29,#32; alloc local storage
 3375  00003a68  afa20000	sw	0(r29),r2
 3376  00003a6c  afa30004	sw	4(r29),r3
 3377  00003a70  afa40008	sw	8(r29),r4
 3378  00003a74  afa5000c	sw	12(r29),r5
 3379  00003a78  afa60010	sw	16(r29),r6
 3380  00003a7c  8fc40000	lw	r4,(r30)
 3381  00003a80  8fc60004	lw	r6,4(r30)
 3382  00003a84  90810000	lbu	r1,(r4)
 3383  00003a88  64210000	snei	r1,r1,#0
 3384  00003a8c  10200060	beqz	r1,L164_LF2
 3385  00003a90  54000000	nop; not filled.
 3386  00003a94  00012820	add	r5,r0,r1
 3387  00003a98          	L165_LF2:
 3388  00003a98  00061020	add	r2,r0,r6
 3389  00003a9c  80df0000	lb	r31,(r6)
 3390  00003aa0  33e100ff	andi	r1,r31,#0x00ff
 3391  00003aa4  64210000	snei	r1,r1,#0
 3392  00003aa8  1020003c	beqz	r1,L163_LF2
 3393  00003aac  54000000	nop; not filled.
 3394  00003ab0  90830000	lbu	r3,(r4)
 3395  00003ab4          	L169_LF2:
 3396  00003ab4  33e100ff	andi	r1,r31,#0x00ff
 3397  00003ab8  00610828	seq	r1,r3,r1
 3398  00003abc  10200010	beqz	r1,L168_LF2
 3399  00003ac0  54000000	nop; not filled.
 3400  00003ac4  00040820	add	r1,r0,r4
 3401  00003ac8  08000028	j	L173_LF2
 3402  00003acc  54000000	nop; not filled.
 3403  00003ad0          	L168_LF2:
 3404  00003ad0  20420001	addi	r2,r2,#1
 3405  00003ad4  805f0000	lb	r31,(r2)
 3406  00003ad8  33e100ff	andi	r1,r31,#0x00ff
 3407  00003adc  64210000	snei	r1,r1,#0
 3408  00003ae0  1420ffd0	bnez	r1,L169_LF2
 3409  00003ae4  54000000	nop; not filled.
 3410  00003ae8          	L163_LF2:
 3411  00003ae8  14a0ffac	bnez	r5,L165_LF2
 3412  00003aec  54000000	nop; not filled.
 3413  00003af0          	L164_LF2:
 3414  00003af0  20010000	addi	r1,r0,#0
 3415  00003af4          	L173_LF2:
 3416  00003af4  8fa20000	lw	r2,0(r29)
 3417  00003af8  8fa30004	lw	r3,4(r29)
 3418  00003afc  8fa40008	lw	r4,8(r29)
 3419  00003b00  8fa5000c	lw	r5,12(r29)
 3420  00003b04  8fa60010	lw	r6,16(r29)
 3421  00003b08  8fdffff8	lw	r31,-8(r30)
 3422  00003b0c  001ee820	add	r29,r0,r30
 3423  00003b10  8fdefffc	lw	r30,-4(r30)
 3424  00003b14  4be00000	jr	r31
 3425  00003b18  54000000	nop
 3426  00003b1c          	.endproc _dmindex
 3427  00003b1c          	.align 2
 3428  00003b1c          	.proc _dindex
 3429  00003b1c          	.global _dindex
 3430  00003b1c          	_dindex:
 3431                      ;  Function 'dindex'; 0 bytes of locals, 2 regs to save.
 3432  00003b1c  afbefffc	sw	-4(r29),r30; push fp
 3433  00003b20  001df020	add	r30,r0,r29; fp = sp
 3434  00003b24  afbffff8	sw	-8(r29),r31; push ret addr
 3435  00003b28  2fbd0010	subui	r29,r29,#16; alloc local storage
 3436  00003b2c  afa20000	sw	0(r29),r2
 3437  00003b30  afa30004	sw	4(r29),r3
 3438  00003b34  8fc20000	lw	r2,(r30)
 3439  00003b38  8fc30004	lw	r3,4(r30)
 3440  00003b3c  08000024	j	L187_LF2
 3441  00003b40  54000000	nop; not filled.
 3442  00003b44          	L183_LF2:
 3443  00003b44  33e100ff	andi	r1,r31,#0x00ff
 3444  00003b48  00230828	seq	r1,r1,r3
 3445  00003b4c  10200010	beqz	r1,L184_LF2
 3446  00003b50  54000000	nop; not filled.
 3447  00003b54  00020820	add	r1,r0,r2
 3448  00003b58  08000020	j	L186_LF2
 3449  00003b5c  54000000	nop; not filled.
 3450  00003b60          	L184_LF2:
 3451  00003b60  20420001	addi	r2,r2,#1
 3452  00003b64          	L187_LF2:
 3453  00003b64  805f0000	lb	r31,(r2)
 3454  00003b68  33e100ff	andi	r1,r31,#0x00ff
 3455  00003b6c  64210000	snei	r1,r1,#0
 3456  00003b70  1420ffd0	bnez	r1,L183_LF2
 3457  00003b74  54000000	nop; not filled.
 3458  00003b78  20010000	addi	r1,r0,#0
 3459  00003b7c          	L186_LF2:
 3460  00003b7c  8fa20000	lw	r2,0(r29)
 3461  00003b80  8fa30004	lw	r3,4(r29)
 3462  00003b84  8fdffff8	lw	r31,-8(r30)
 3463  00003b88  001ee820	add	r29,r0,r30
 3464  00003b8c  8fdefffc	lw	r30,-4(r30)
 3465  00003b90  4be00000	jr	r31
 3466  00003b94  54000000	nop
 3467  00003b98          	.endproc _dindex
 3468  00003b98          	.align 2
 3469  00003b98          	.proc _ditoa
 3470  00003b98          	.global _ditoa
 3471  00003b98          	_ditoa:
 3472                      ;  Function 'ditoa'; 0 bytes of locals, 5 regs to save.
 3473  00003b98  afbefffc	sw	-4(r29),r30; push fp
 3474  00003b9c  001df020	add	r30,r0,r29; fp = sp
 3475  00003ba0  afbffff8	sw	-8(r29),r31; push ret addr
 3476  00003ba4  2fbd0020	subui	r29,r29,#32; alloc local storage
 3477  00003ba8  afa20000	sw	0(r29),r2
 3478  00003bac  afa30004	sw	4(r29),r3
 3479  00003bb0  afa40008	sw	8(r29),r4
 3480  00003bb4  afa5000c	sw	12(r29),r5
 3481  00003bb8  afa60010	sw	16(r29),r6
 3482  00003bbc  8fc30000	lw	r3,(r30)
 3483  00003bc0  8fc40004	lw	r4,4(r30)
 3484  00003bc4  68610000	slti	r1,r3,#0
 3485  00003bc8  10200010	beqz	r1,L203_LF2
 3486  00003bcc  54000000	nop; not filled.
 3487  00003bd0  2006002d	addi	r6,r0,(#0x2d)&0xff
 3488  00003bd4  08000014	j	L216_LF2
 3489  00003bd8  54000000	nop; not filled.
 3490  00003bdc          	L203_LF2:
 3491  00003bdc  64610000	snei	r1,r3,#0
 3492  00003be0  14200018	bnez	r1,L205_LF2
 3493  00003be4  54000000	nop; not filled.
 3494  00003be8  20060030	addi	r6,r0,(#0x30)&0xff
 3495  00003bec          	L216_LF2:
 3496  00003bec  a0860000	sb	(r4),r6
 3497  00003bf0  20840001	addi	r4,r4,#1
 3498  00003bf4  0800007c	j	L204_LF2
 3499  00003bf8  54000000	nop; not filled.
 3500  00003bfc          	L205_LF2:
 3501  00003bfc  201f0001	addi	r31,r0,#1
 3502  00003c00  03e3082c	sle	r1,r31,r3
 3503  00003c04  1020001c	beqz	r1,L208_LF2
 3504  00003c08  54000000	nop; not filled.
 3505  00003c0c          	L209_LF2:
 3506  00003c0c  53e10002	slli	r1,r31,#0x2
 3507  00003c10  003f0820	add	r1,r1,r31
 3508  00003c14  503f0001	slli	r31,r1,#0x1
 3509  00003c18  03e3082c	sle	r1,r31,r3
 3510  00003c1c  1420ffec	bnez	r1,L209_LF2
 3511  00003c20  54000000	nop; not filled.
 3512  00003c24          	L208_LF2:
 3513  00003c24  2005000a	addi	r5,r0,#10
 3514  00003c28          	L212_LF2:
 3515  00003c28  03e00035	movi2fp	f0,r31
 3516  00003c2c  00a00835	movi2fp	f1,r5
 3517  00003c30  0401000f	div	f0,f0,f1
 3518  00003c34  0000f834	movfp2i	r31,f0
 3519  00003c38  00600035	movi2fp	f0,r3
 3520  00003c3c  03e00835	movi2fp	f1,r31
 3521  00003c40  0401000f	div	f0,f0,f1
 3522  00003c44  00001034	movfp2i	r2,f0
 3523  00003c48  20410030	addi	r1,r2,#48
 3524  00003c4c  a0810000	sb	(r4),r1
 3525  00003c50  20840001	addi	r4,r4,#1
 3526  00003c54  00400035	movi2fp	f0,r2
 3527  00003c58  03e00835	movi2fp	f1,r31
 3528  00003c5c  0401000e	mult	f0,f0,f1
 3529  00003c60  00000834	movfp2i	r1,f0
 3530  00003c64  00611822	sub	r3,r3,r1
 3531  00003c68  6fe10001	sgti	r1,r31,#1
 3532  00003c6c  1420ffb8	bnez	r1,L212_LF2
 3533  00003c70  54000000	nop; not filled.
 3534  00003c74          	L204_LF2:
 3535  00003c74  20060000	addi	r6,r0,(#0x0)&0xff
 3536  00003c78  a0860000	sb	(r4),r6
 3537  00003c7c  8fa20000	lw	r2,0(r29)
 3538  00003c80  8fa30004	lw	r3,4(r29)
 3539  00003c84  8fa40008	lw	r4,8(r29)
 3540  00003c88  8fa5000c	lw	r5,12(r29)
 3541  00003c8c  8fa60010	lw	r6,16(r29)
 3542  00003c90  8fdffff8	lw	r31,-8(r30)
 3543  00003c94  001ee820	add	r29,r0,r30
 3544  00003c98  8fdefffc	lw	r30,-4(r30)
 3545  00003c9c  4be00000	jr	r31
 3546  00003ca0  54000000	nop
 3547  00003ca4          	.endproc _ditoa
 3548  00003ca4          	.align 2
 3549  00003ca4          	.proc _dstrtol
 3550  00003ca4          	.global _dstrtol
 3551  00003ca4          	_dstrtol:
 3552                      ;  Function 'dstrtol'; 0 bytes of locals, 5 regs to save.
 3553  00003ca4  afbefffc	sw	-4(r29),r30; push fp
 3554  00003ca8  001df020	add	r30,r0,r29; fp = sp
 3555  00003cac  afbffff8	sw	-8(r29),r31; push ret addr
 3556  00003cb0  2fbd0020	subui	r29,r29,#32; alloc local storage
 3557  00003cb4  afa20000	sw	0(r29),r2
 3558  00003cb8  afa30004	sw	4(r29),r3
 3559  00003cbc  afa40008	sw	8(r29),r4
 3560  00003cc0  afa5000c	sw	12(r29),r5
 3561  00003cc4  afa60010	sw	16(r29),r6
 3562  00003cc8  8fc20000	lw	r2,(r30)
 3563  00003ccc  8fc50004	lw	r5,4(r30)
 3564  00003cd0  8fc40008	lw	r4,8(r30)
 3565  00003cd4  20030000	addi	r3,r0,#0
 3566  00003cd8  08000008	j	L247_LF2
 3567  00003cdc  54000000	nop; not filled.
 3568  00003ce0          	L220_LF2:
 3569  00003ce0  20420001	addi	r2,r2,#1
 3570  00003ce4          	L247_LF2:
 3571  00003ce4  805f0000	lb	r31,(r2)
 3572  00003ce8  33e100ff	andi	r1,r31,#0x00ff
 3573  00003cec  60210020	seqi	r1,r1,#32
 3574  00003cf0  1420ffec	bnez	r1,L220_LF2
 3575  00003cf4  54000000	nop; not filled.
 3576  00003cf8  23e1fff7	addi	r1,r31,#-9
 3577  00003cfc  302100ff	andi	r1,r1,#0x00ff
 3578  00003d00  70210001	sleui	r1,r1,#1
 3579  00003d04  1420ffd8	bnez	r1,L220_LF2
 3580  00003d08  54000000	nop; not filled.
 3581  00003d0c  64a10000	snei	r1,r5,#0
 3582  00003d10  10200008	beqz	r1,L222_LF2
 3583  00003d14  54000000	nop; not filled.
 3584  00003d18  aca20000	sw	(r5),r2
 3585  00003d1c          	L222_LF2:
 3586  00003d1c  905f0000	lbu	r31,(r2)
 3587  00003d20  67e10000	snei	r1,r31,#0
 3588  00003d24  10200090	beqz	r1,L248_LF2
 3589  00003d28  54000000	nop; not filled.
 3590  00003d2c  63e1002d	seqi	r1,r31,#45
 3591  00003d30  10200014	beqz	r1,L224_LF2
 3592  00003d34  54000000	nop; not filled.
 3593  00003d38  2006ffff	addi	r6,r0,#-1
 3594  00003d3c  20420001	addi	r2,r2,#1
 3595  00003d40  08000008	j	L225_LF2
 3596  00003d44  54000000	nop; not filled.
 3597  00003d48          	L224_LF2:
 3598  00003d48  20060001	addi	r6,r0,#1
 3599  00003d4c          	L225_LF2:
 3600  00003d4c  64810000	snei	r1,r4,#0
 3601  00003d50  14200054	bnez	r1,L226_LF2
 3602  00003d54  54000000	nop; not filled.
 3603  00003d58  90410000	lbu	r1,(r2)
 3604  00003d5c  60210030	seqi	r1,r1,#48
 3605  00003d60  10200040	beqz	r1,L227_LF2
 3606  00003d64  54000000	nop; not filled.
 3607  00003d68  20420001	addi	r2,r2,#1
 3608  00003d6c  905f0000	lbu	r31,(r2)
 3609  00003d70  63e10078	seqi	r1,r31,#120
 3610  00003d74  14200010	bnez	r1,L229_LF2
 3611  00003d78  54000000	nop; not filled.
 3612  00003d7c  63e10058	seqi	r1,r31,#88
 3613  00003d80  10200014	beqz	r1,L228_LF2
 3614  00003d84  54000000	nop; not filled.
 3615  00003d88          	L229_LF2:
 3616  00003d88  20040010	addi	r4,r0,#16
 3617  00003d8c  20420001	addi	r2,r2,#1
 3618  00003d90  08000014	j	L226_LF2
 3619  00003d94  54000000	nop; not filled.
 3620  00003d98          	L228_LF2:
 3621  00003d98  20040008	addi	r4,r0,#8
 3622  00003d9c  08000008	j	L226_LF2
 3623  00003da0  54000000	nop; not filled.
 3624  00003da4          	L227_LF2:
 3625  00003da4  2004000a	addi	r4,r0,#10
 3626  00003da8          	L226_LF2:
 3627  00003da8  2081ffff	addi	r1,r4,#-1
 3628  00003dac  6c21000f	sgtui	r1,r1,#15
 3629  00003db0  10200010	beqz	r1,L233_LF2
 3630  00003db4  54000000	nop; not filled.
 3631  00003db8          	L248_LF2:
 3632  00003db8  00030820	add	r1,r0,r3
 3633  00003dbc  080000c4	j	L245_LF2
 3634  00003dc0  54000000	nop; not filled.
 3635  00003dc4          	L233_LF2:
 3636  00003dc4  805f0000	lb	r31,(r2)
 3637  00003dc8  23e1ffd0	addi	r1,r31,#-48
 3638  00003dcc  302100ff	andi	r1,r1,#0x00ff
 3639  00003dd0  70210009	sleui	r1,r1,#9
 3640  00003dd4  10200014	beqz	r1,L236_LF2
 3641  00003dd8  54000000	nop; not filled.
 3642  00003ddc  33e100ff	andi	r1,r31,#0x00ff
 3643  00003de0  2021ffd0	addi	r1,r1,#-48
 3644  00003de4  08000050	j	L237_LF2
 3645  00003de8  54000000	nop; not filled.
 3646  00003dec          	L236_LF2:
 3647  00003dec  23e1ff9f	addi	r1,r31,#-97
 3648  00003df0  302100ff	andi	r1,r1,#0x00ff
 3649  00003df4  70210019	sleui	r1,r1,#25
 3650  00003df8  10200014	beqz	r1,L238_LF2
 3651  00003dfc  54000000	nop; not filled.
 3652  00003e00  33e100ff	andi	r1,r31,#0x00ff
 3653  00003e04  2021ffa9	addi	r1,r1,#-87
 3654  00003e08  0800002c	j	L237_LF2
 3655  00003e0c  54000000	nop; not filled.
 3656  00003e10          	L238_LF2:
 3657  00003e10  23e1ffbf	addi	r1,r31,#-65
 3658  00003e14  302100ff	andi	r1,r1,#0x00ff
 3659  00003e18  70210019	sleui	r1,r1,#25
 3660  00003e1c  10200014	beqz	r1,L240_LF2
 3661  00003e20  54000000	nop; not filled.
 3662  00003e24  33e100ff	andi	r1,r31,#0x00ff
 3663  00003e28  2021ffc9	addi	r1,r1,#-55
 3664  00003e2c  08000008	j	L237_LF2
 3665  00003e30  54000000	nop; not filled.
 3666  00003e34          	L240_LF2:
 3667  00003e34  200103e8	addi	r1,r0,#1000
 3668  00003e38          	L237_LF2:
 3669  00003e38  0024f82a	slt	r31,r1,r4
 3670  00003e3c  13e00024	beqz	r31,L246_LF2
 3671  00003e40  54000000	nop; not filled.
 3672  00003e44  00600035	movi2fp	f0,r3
 3673  00003e48  00800835	movi2fp	f1,r4
 3674  00003e4c  0401000e	mult	f0,f0,f1
 3675  00003e50  00001834	movfp2i	r3,f0
 3676  00003e54  00611820	add	r3,r3,r1
 3677  00003e58  20420001	addi	r2,r2,#1
 3678  00003e5c  17e0ff64	bnez	r31,L233_LF2
 3679  00003e60  54000000	nop; not filled.
 3680  00003e64          	L246_LF2:
 3681  00003e64  64a10000	snei	r1,r5,#0
 3682  00003e68  10200008	beqz	r1,L244_LF2
 3683  00003e6c  54000000	nop; not filled.
 3684  00003e70  aca20000	sw	(r5),r2
 3685  00003e74          	L244_LF2:
 3686  00003e74  00600035	movi2fp	f0,r3
 3687  00003e78  00c00835	movi2fp	f1,r6
 3688  00003e7c  0401000e	mult	f0,f0,f1
 3689  00003e80  00000834	movfp2i	r1,f0
 3690  00003e84          	L245_LF2:
 3691  00003e84  8fa20000	lw	r2,0(r29)
 3692  00003e88  8fa30004	lw	r3,4(r29)
 3693  00003e8c  8fa40008	lw	r4,8(r29)
 3694  00003e90  8fa5000c	lw	r5,12(r29)
 3695  00003e94  8fa60010	lw	r6,16(r29)
 3696  00003e98  8fdffff8	lw	r31,-8(r30)
 3697  00003e9c  001ee820	add	r29,r0,r30
 3698  00003ea0  8fdefffc	lw	r30,-4(r30)
 3699  00003ea4  4be00000	jr	r31
 3700  00003ea8  54000000	nop
 3701  00003eac          	.endproc _dstrtol
 3702  00003eac          	.align 2
 3703  00003eac          	.proc _bcopy
 3704  00003eac          	.global _bcopy
 3705  00003eac          	_bcopy:
 3706                      ;  Function 'bcopy'; 0 bytes of locals, 3 regs to save.
 3707  00003eac  afbefffc	sw	-4(r29),r30; push fp
 3708  00003eb0  001df020	add	r30,r0,r29; fp = sp
 3709  00003eb4  afbffff8	sw	-8(r29),r31; push ret addr
 3710  00003eb8  2fbd0018	subui	r29,r29,#24; alloc local storage
 3711  00003ebc  afa20000	sw	0(r29),r2
 3712  00003ec0  afa30004	sw	4(r29),r3
 3713  00003ec4  afa40008	sw	8(r29),r4
 3714  00003ec8  8fc30000	lw	r3,(r30)
 3715  00003ecc  8fc20004	lw	r2,4(r30)
 3716  00003ed0  8fdf0008	lw	r31,8(r30)
 3717  00003ed4  08000014	j	L259_LF2
 3718  00003ed8  54000000	nop; not filled.
 3719  00003edc          	L257_LF2:
 3720  00003edc  80640000	lb	r4,(r3)
 3721  00003ee0  a0440000	sb	(r2),r4
 3722  00003ee4  20630001	addi	r3,r3,#1
 3723  00003ee8  20420001	addi	r2,r2,#1
 3724  00003eec          	L259_LF2:
 3725  00003eec  001f0820	add	r1,r0,r31
 3726  00003ef0  23ffffff	addi	r31,r31,#-1
 3727  00003ef4  6c210000	sgti	r1,r1,#0
 3728  00003ef8  1420ffe0	bnez	r1,L257_LF2
 3729  00003efc  54000000	nop; not filled.
 3730  00003f00  8fa20000	lw	r2,0(r29)
 3731  00003f04  8fa30004	lw	r3,4(r29)
 3732  00003f08  8fa40008	lw	r4,8(r29)
 3733  00003f0c  8fdffff8	lw	r31,-8(r30)
 3734  00003f10  001ee820	add	r29,r0,r30
 3735  00003f14  8fdefffc	lw	r30,-4(r30)
 3736  00003f18  4be00000	jr	r31
 3737  00003f1c  54000000	nop
 3738  00003f20          	.endproc _bcopy
 3739  00003f20          	.align 2
 3740  00003f20          	.proc _bzero
 3741  00003f20          	.global _bzero
 3742  00003f20          	_bzero:
 3743                      ;  Function 'bzero'; 0 bytes of locals, 2 regs to save.
 3744  00003f20  afbefffc	sw	-4(r29),r30; push fp
 3745  00003f24  001df020	add	r30,r0,r29; fp = sp
 3746  00003f28  afbffff8	sw	-8(r29),r31; push ret addr
 3747  00003f2c  2fbd0010	subui	r29,r29,#16; alloc local storage
 3748  00003f30  afa20000	sw	0(r29),r2
 3749  00003f34  afa30004	sw	4(r29),r3
 3750  00003f38  8fc20000	lw	r2,(r30)
 3751  00003f3c  8fdf0004	lw	r31,4(r30)
 3752  00003f40  08000010	j	L270_LF2
 3753  00003f44  54000000	nop; not filled.
 3754  00003f48          	L268_LF2:
 3755  00003f48  20030000	addi	r3,r0,(#0x0)&0xff
 3756  00003f4c  a0430000	sb	(r2),r3
 3757  00003f50  20420001	addi	r2,r2,#1
 3758  00003f54          	L270_LF2:
 3759  00003f54  001f0820	add	r1,r0,r31
 3760  00003f58  23ffffff	addi	r31,r31,#-1
 3761  00003f5c  6c210000	sgti	r1,r1,#0
 3762  00003f60  1420ffe4	bnez	r1,L268_LF2
 3763  00003f64  54000000	nop; not filled.
 3764  00003f68  8fa20000	lw	r2,0(r29)
 3765  00003f6c  8fa30004	lw	r3,4(r29)
 3766  00003f70  8fdffff8	lw	r31,-8(r30)
 3767  00003f74  001ee820	add	r29,r0,r30
 3768  00003f78  8fdefffc	lw	r30,-4(r30)
 3769  00003f7c  4be00000	jr	r31
 3770  00003f80  54000000	nop
 3771  00003f84          	.endproc _bzero
 3772                      ; Compiled by GCC
 3774  00003f84          	.align 2
 3775  00003f84          	.proc _isspace
 3776  00003f84          	.global _isspace
 3777  00003f84          	_isspace:
 3778                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 3779  00003f84  afbefffc	sw	-4(r29),r30; push fp
 3780  00003f88  001df020	add	r30,r0,r29; fp = sp
 3781  00003f8c  afbffff8	sw	-8(r29),r31; push ret addr
 3782  00003f90  2fbd0010	subui	r29,r29,#16; alloc local storage
 3783  00003f94  afa20000	sw	0(r29),r2
 3784  00003f98  83c20003	lb	r2,3(r30)
 3785  00003f9c  201f0000	addi	r31,r0,#0
 3786  00003fa0  304100ff	andi	r1,r2,#0x00ff
 3787  00003fa4  60210020	seqi	r1,r1,#32
 3788  00003fa8  14200018	bnez	r1,L6_LF3
 3789  00003fac  54000000	nop; not filled.
 3790  00003fb0  2041fff7	addi	r1,r2,#-9
 3791  00003fb4  302100ff	andi	r1,r1,#0x00ff
 3792  00003fb8  70210001	sleui	r1,r1,#1
 3793  00003fbc  10200008	beqz	r1,L5_LF3
 3794  00003fc0  54000000	nop; not filled.
 3795  00003fc4          	L6_LF3:
 3796  00003fc4  201f0001	addi	r31,r0,#1
 3797  00003fc8          	L5_LF3:
 3798  00003fc8  001f0820	add	r1,r0,r31
 3799  00003fcc  8fa20000	lw	r2,0(r29)
 3800  00003fd0  8fdffff8	lw	r31,-8(r30)
 3801  00003fd4  001ee820	add	r29,r0,r30
 3802  00003fd8  8fdefffc	lw	r30,-4(r30)
 3803  00003fdc  4be00000	jr	r31
 3804  00003fe0  54000000	nop
 3805  00003fe4          	.endproc _isspace
 3806  00003fe4          	.align 2
 3807  00003fe4          	.proc _isxdigit
 3808  00003fe4          	.global _isxdigit
 3809  00003fe4          	_isxdigit:
 3810                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 3811  00003fe4  afbefffc	sw	-4(r29),r30; push fp
 3812  00003fe8  001df020	add	r30,r0,r29; fp = sp
 3813  00003fec  afbffff8	sw	-8(r29),r31; push ret addr
 3814  00003ff0  2fbd0010	subui	r29,r29,#16; alloc local storage
 3815  00003ff4  afa20000	sw	0(r29),r2
 3816  00003ff8  83df0003	lb	r31,3(r30)
 3817  00003ffc  20020000	addi	r2,r0,#0
 3818  00004000  23e1ffd0	addi	r1,r31,#-48
 3819  00004004  302100ff	andi	r1,r1,#0x00ff
 3820  00004008  70210009	sleui	r1,r1,#9
 3821  0000400c  14200028	bnez	r1,L12_LF3
 3822  00004010  54000000	nop; not filled.
 3823  00004014  23e1ff9f	addi	r1,r31,#-97
 3824  00004018  302100ff	andi	r1,r1,#0x00ff
 3825  0000401c  70210005	sleui	r1,r1,#5
 3826  00004020  14200014	bnez	r1,L12_LF3
 3827  00004024  54000000	nop; not filled.
 3828  00004028  33e100ff	andi	r1,r31,#0x00ff
 3829  0000402c  64210041	snei	r1,r1,#65
 3830  00004030  14200008	bnez	r1,L11_LF3
 3831  00004034  54000000	nop; not filled.
 3832  00004038          	L12_LF3:
 3833  00004038  20020001	addi	r2,r0,#1
 3834  0000403c          	L11_LF3:
 3835  0000403c  00020820	add	r1,r0,r2
 3836  00004040  8fa20000	lw	r2,0(r29)
 3837  00004044  8fdffff8	lw	r31,-8(r30)
 3838  00004048  001ee820	add	r29,r0,r30
 3839  0000404c  8fdefffc	lw	r30,-4(r30)
 3840  00004050  4be00000	jr	r31
 3841  00004054  54000000	nop
 3842  00004058          	.endproc _isxdigit
 3843  00004058          	.align 2
 3844  00004058          	.proc _DisableIntrs
 3845  00004058          	.global _DisableIntrs
 3846  00004058          	_DisableIntrs:
 3847                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 3848  00004058  afbefffc	sw	-4(r29),r30; push fp
 3849  0000405c  001df020	add	r30,r0,r29; fp = sp
 3850  00004060  afbffff8	sw	-8(r29),r31; push ret addr
 3851  00004064  2fbd0010	subui	r29,r29,#16; alloc local storage
 3852  00004068  afa20000	sw	0(r29),r2
 3853  0000406c  23bdfff8	addi	r29,r29,#-8
 3854  00004070  2002000f	addi	r2,r0,#15
 3855  00004074  afa20000	sw	(r29),r2
 3856  00004078  0c005fb0	jal	_SetIntrs
 3857  0000407c  54000000	nop; not filled.
 3858  00004080  23bd0008	addi	r29,r29,#8
 3859  00004084  8fa20000	lw	r2,0(r29)
 3860  00004088  8fdffff8	lw	r31,-8(r30)
 3861  0000408c  001ee820	add	r29,r0,r30
 3862  00004090  8fdefffc	lw	r30,-4(r30)
 3863  00004094  4be00000	jr	r31
 3864  00004098  54000000	nop
 3865  0000409c          	.endproc _DisableIntrs
 3866  0000409c          	.align 2
 3867  0000409c          	.proc _EnableIntrs
 3868  0000409c          	.global _EnableIntrs
 3869  0000409c          	_EnableIntrs:
 3870                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 3871  0000409c  afbefffc	sw	-4(r29),r30; push fp
 3872  000040a0  001df020	add	r30,r0,r29; fp = sp
 3873  000040a4  afbffff8	sw	-8(r29),r31; push ret addr
 3874  000040a8  2fbd0010	subui	r29,r29,#16; alloc local storage
 3875  000040ac  afa20000	sw	0(r29),r2
 3876  000040b0  23bdfff8	addi	r29,r29,#-8
 3877  000040b4  20020000	addi	r2,r0,#0
 3878  000040b8  afa20000	sw	(r29),r2
 3879  000040bc  0c005f6c	jal	_SetIntrs
 3880  000040c0  54000000	nop; not filled.
 3881  000040c4  23bd0008	addi	r29,r29,#8
 3882  000040c8  8fa20000	lw	r2,0(r29)
 3883  000040cc  8fdffff8	lw	r31,-8(r30)
 3884  000040d0  001ee820	add	r29,r0,r30
 3885  000040d4  8fdefffc	lw	r30,-4(r30)
 3886  000040d8  4be00000	jr	r31
 3887  000040dc  54000000	nop
 3888  000040e0          	.endproc _EnableIntrs
 3889  000040e0          	.align 2
 3890  000040e0          	.proc _RestoreIntrs
 3891  000040e0          	.global _RestoreIntrs
 3892  000040e0          	_RestoreIntrs:
 3893                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 3894  000040e0  afbefffc	sw	-4(r29),r30; push fp
 3895  000040e4  001df020	add	r30,r0,r29; fp = sp
 3896  000040e8  afbffff8	sw	-8(r29),r31; push ret addr
 3897  000040ec  2fbd0010	subui	r29,r29,#16; alloc local storage
 3898  000040f0  afa20000	sw	0(r29),r2
 3899  000040f4  23bdfff8	addi	r29,r29,#-8
 3900  000040f8  8fc20000	lw	r2,(r30)
 3901  000040fc  afa20000	sw	(r29),r2
 3902  00004100  0c005f28	jal	_SetIntrs
 3903  00004104  54000000	nop; not filled.
 3904  00004108  23bd0008	addi	r29,r29,#8
 3905  0000410c  8fa20000	lw	r2,0(r29)
 3906  00004110  8fdffff8	lw	r31,-8(r30)
 3907  00004114  001ee820	add	r29,r0,r30
 3908  00004118  8fdefffc	lw	r30,-4(r30)
 3909  0000411c  4be00000	jr	r31
 3910  00004120  54000000	nop
 3911  00004124          	.endproc _RestoreIntrs
 3912  00004124          	.align 2
 3913  00004124          	.proc _QueueLinkInit
 3914  00004124          	.global _QueueLinkInit
 3915  00004124          	_QueueLinkInit:
 3916                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 3917  00004124  afbefffc	sw	-4(r29),r30; push fp
 3918  00004128  001df020	add	r30,r0,r29; fp = sp
 3919  0000412c  afbffff8	sw	-8(r29),r31; push ret addr
 3920  00004130  2fbd0010	subui	r29,r29,#16; alloc local storage
 3921  00004134  afa20000	sw	0(r29),r2
 3922  00004138  8fc10000	lw	r1,(r30)
 3923  0000413c  8fc20004	lw	r2,4(r30)
 3924  00004140  201f0000	addi	r31,r0,#0
 3925  00004144  ac3f0000	sw	(r1),r31
 3926  00004148  ac22000c	sw	12(r1),r2
 3927  0000414c  8fa20000	lw	r2,0(r29)
 3928  00004150  8fdffff8	lw	r31,-8(r30)
 3929  00004154  001ee820	add	r29,r0,r30
 3930  00004158  8fdefffc	lw	r30,-4(r30)
 3931  0000415c  4be00000	jr	r31
 3932  00004160  54000000	nop
 3933  00004164          	.endproc _QueueLinkInit
 3934  00004164          	.align 2
 3935  00004164          	.proc _QueueNext
 3936  00004164          	.global _QueueNext
 3937  00004164          	_QueueNext:
 3938                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 3939  00004164  afbefffc	sw	-4(r29),r30; push fp
 3940  00004168  001df020	add	r30,r0,r29; fp = sp
 3941  0000416c  afbffff8	sw	-8(r29),r31; push ret addr
 3942  00004170  2fbd0008	subui	r29,r29,#8; alloc local storage
 3943  00004174  8fc10000	lw	r1,(r30)
 3944  00004178  8c210000	lw	r1,(r1)
 3945  0000417c  8fdffff8	lw	r31,-8(r30)
 3946  00004180  001ee820	add	r29,r0,r30
 3947  00004184  8fdefffc	lw	r30,-4(r30)
 3948  00004188  4be00000	jr	r31
 3949  0000418c  54000000	nop
 3950  00004190          	.endproc _QueueNext
 3951  00004190          	.align 2
 3952  00004190          	.proc _QueuePrev
 3953  00004190          	.global _QueuePrev
 3954  00004190          	_QueuePrev:
 3955                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 3956  00004190  afbefffc	sw	-4(r29),r30; push fp
 3957  00004194  001df020	add	r30,r0,r29; fp = sp
 3958  00004198  afbffff8	sw	-8(r29),r31; push ret addr
 3959  0000419c  2fbd0008	subui	r29,r29,#8; alloc local storage
 3960  000041a0  8fc10000	lw	r1,(r30)
 3961  000041a4  8c210004	lw	r1,4(r1)
 3962  000041a8  8fdffff8	lw	r31,-8(r30)
 3963  000041ac  001ee820	add	r29,r0,r30
 3964  000041b0  8fdefffc	lw	r30,-4(r30)
 3965  000041b4  4be00000	jr	r31
 3966  000041b8  54000000	nop
 3967  000041bc          	.endproc _QueuePrev
 3968  000041bc          	.align 2
 3969  000041bc          	.proc _QueueFirst
 3970  000041bc          	.global _QueueFirst
 3971  000041bc          	_QueueFirst:
 3972                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 3973  000041bc  afbefffc	sw	-4(r29),r30; push fp
 3974  000041c0  001df020	add	r30,r0,r29; fp = sp
 3975  000041c4  afbffff8	sw	-8(r29),r31; push ret addr
 3976  000041c8  2fbd0008	subui	r29,r29,#8; alloc local storage
 3977  000041cc  8fc10000	lw	r1,(r30)
 3978  000041d0  8c210000	lw	r1,(r1)
 3979  000041d4  8fdffff8	lw	r31,-8(r30)
 3980  000041d8  001ee820	add	r29,r0,r30
 3981  000041dc  8fdefffc	lw	r30,-4(r30)
 3982  000041e0  4be00000	jr	r31
 3983  000041e4  54000000	nop
 3984  000041e8          	.endproc _QueueFirst
 3985  000041e8          	.align 2
 3986  000041e8          	.proc _QueueLast
 3987  000041e8          	.global _QueueLast
 3988  000041e8          	_QueueLast:
 3989                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 3990  000041e8  afbefffc	sw	-4(r29),r30; push fp
 3991  000041ec  001df020	add	r30,r0,r29; fp = sp
 3992  000041f0  afbffff8	sw	-8(r29),r31; push ret addr
 3993  000041f4  2fbd0008	subui	r29,r29,#8; alloc local storage
 3994  000041f8  8fc10000	lw	r1,(r30)
 3995  000041fc  8c210004	lw	r1,4(r1)
 3996  00004200  8fdffff8	lw	r31,-8(r30)
 3997  00004204  001ee820	add	r29,r0,r30
 3998  00004208  8fdefffc	lw	r30,-4(r30)
 3999  0000420c  4be00000	jr	r31
 4000  00004210  54000000	nop
 4001  00004214          	.endproc _QueueLast
 4002  00004214          	.align 2
 4003  00004214          	.proc _QueueInsertAfter
 4004  00004214          	.global _QueueInsertAfter
 4005  00004214          	_QueueInsertAfter:
 4006                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 4007  00004214  afbefffc	sw	-4(r29),r30; push fp
 4008  00004218  001df020	add	r30,r0,r29; fp = sp
 4009  0000421c  afbffff8	sw	-8(r29),r31; push ret addr
 4010  00004220  2fbd0010	subui	r29,r29,#16; alloc local storage
 4011  00004224  afa20000	sw	0(r29),r2
 4012  00004228  afa30004	sw	4(r29),r3
 4013  0000422c  8fc30000	lw	r3,(r30)
 4014  00004230  8fc20004	lw	r2,4(r30)
 4015  00004234  8fc10008	lw	r1,8(r30)
 4016  00004238  ac230008	sw	8(r1),r3
 4017  0000423c  ac220004	sw	4(r1),r2
 4018  00004240  8c5f0000	lw	r31,(r2)
 4019  00004244  ac3f0000	sw	(r1),r31
 4020  00004248  ac410000	sw	(r2),r1
 4021  0000424c  8c220000	lw	r2,(r1)
 4022  00004250  ac410004	sw	4(r2),r1
 4023  00004254  8c610008	lw	r1,8(r3)
 4024  00004258  20210001	addi	r1,r1,#1
 4025  0000425c  ac610008	sw	8(r3),r1
 4026  00004260  8fa20000	lw	r2,0(r29)
 4027  00004264  8fa30004	lw	r3,4(r29)
 4028  00004268  8fdffff8	lw	r31,-8(r30)
 4029  0000426c  001ee820	add	r29,r0,r30
 4030  00004270  8fdefffc	lw	r30,-4(r30)
 4031  00004274  4be00000	jr	r31
 4032  00004278  54000000	nop
 4033  0000427c          	.endproc _QueueInsertAfter
 4034  0000427c          	.align 2
 4035  0000427c          	.proc _QueueInsertFirst
 4036  0000427c          	.global _QueueInsertFirst
 4037  0000427c          	_QueueInsertFirst:
 4038                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 4039  0000427c  afbefffc	sw	-4(r29),r30; push fp
 4040  00004280  001df020	add	r30,r0,r29; fp = sp
 4041  00004284  afbffff8	sw	-8(r29),r31; push ret addr
 4042  00004288  2fbd0010	subui	r29,r29,#16; alloc local storage
 4043  0000428c  afa20000	sw	0(r29),r2
 4044  00004290  afa30004	sw	4(r29),r3
 4045  00004294  8fc30000	lw	r3,(r30)
 4046  00004298  8fc10004	lw	r1,4(r30)
 4047  0000429c  ac230008	sw	8(r1),r3
 4048  000042a0  ac230004	sw	4(r1),r3
 4049  000042a4  8c7f0000	lw	r31,(r3)
 4050  000042a8  ac3f0000	sw	(r1),r31
 4051  000042ac  ac610000	sw	(r3),r1
 4052  000042b0  8c220000	lw	r2,(r1)
 4053  000042b4  ac410004	sw	4(r2),r1
 4054  000042b8  8c610008	lw	r1,8(r3)
 4055  000042bc  20210001	addi	r1,r1,#1
 4056  000042c0  ac610008	sw	8(r3),r1
 4057  000042c4  8fa20000	lw	r2,0(r29)
 4058  000042c8  8fa30004	lw	r3,4(r29)
 4059  000042cc  8fdffff8	lw	r31,-8(r30)
 4060  000042d0  001ee820	add	r29,r0,r30
 4061  000042d4  8fdefffc	lw	r30,-4(r30)
 4062  000042d8  4be00000	jr	r31
 4063  000042dc  54000000	nop
 4064  000042e0          	.endproc _QueueInsertFirst
 4065  000042e0          	.align 2
 4066  000042e0          	.proc _QueueInsertLast
 4067  000042e0          	.global _QueueInsertLast
 4068  000042e0          	_QueueInsertLast:
 4069                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 4070  000042e0  afbefffc	sw	-4(r29),r30; push fp
 4071  000042e4  001df020	add	r30,r0,r29; fp = sp
 4072  000042e8  afbffff8	sw	-8(r29),r31; push ret addr
 4073  000042ec  2fbd0010	subui	r29,r29,#16; alloc local storage
 4074  000042f0  afa20000	sw	0(r29),r2
 4075  000042f4  afa30004	sw	4(r29),r3
 4076  000042f8  8fc30000	lw	r3,(r30)
 4077  000042fc  8fc10004	lw	r1,4(r30)
 4078  00004300  8c620004	lw	r2,4(r3)
 4079  00004304  ac230008	sw	8(r1),r3
 4080  00004308  ac220004	sw	4(r1),r2
 4081  0000430c  8c5f0000	lw	r31,(r2)
 4082  00004310  ac3f0000	sw	(r1),r31
 4083  00004314  ac410000	sw	(r2),r1
 4084  00004318  8c220000	lw	r2,(r1)
 4085  0000431c  ac410004	sw	4(r2),r1
 4086  00004320  8c610008	lw	r1,8(r3)
 4087  00004324  20210001	addi	r1,r1,#1
 4088  00004328  ac610008	sw	8(r3),r1
 4089  0000432c  8fa20000	lw	r2,0(r29)
 4090  00004330  8fa30004	lw	r3,4(r29)
 4091  00004334  8fdffff8	lw	r31,-8(r30)
 4092  00004338  001ee820	add	r29,r0,r30
 4093  0000433c  8fdefffc	lw	r30,-4(r30)
 4094  00004340  4be00000	jr	r31
 4095  00004344  54000000	nop
 4096  00004348          	.endproc _QueueInsertLast
 4097  00004348          	.align 2
 4098  00004348          	.proc _QueueRemove
 4099  00004348          	.global _QueueRemove
 4100  00004348          	_QueueRemove:
 4101                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 4102  00004348  afbefffc	sw	-4(r29),r30; push fp
 4103  0000434c  001df020	add	r30,r0,r29; fp = sp
 4104  00004350  afbffff8	sw	-8(r29),r31; push ret addr
 4105  00004354  2fbd0010	subui	r29,r29,#16; alloc local storage
 4106  00004358  afa20000	sw	0(r29),r2
 4107  0000435c  afa30004	sw	4(r29),r3
 4108  00004360  8fdf0000	lw	r31,(r30)
 4109  00004364  8fe10008	lw	r1,8(r31)
 4110  00004368  8c210008	lw	r1,8(r1)
 4111  0000436c  6c210000	sgti	r1,r1,#0
 4112  00004370  1020002c	beqz	r1,L44_LF3
 4113  00004374  54000000	nop; not filled.
 4114  00004378  8fe10004	lw	r1,4(r31)
 4115  0000437c  8fe30000	lw	r3,(r31)
 4116  00004380  ac230000	sw	(r1),r3
 4117  00004384  8fe10000	lw	r1,(r31)
 4118  00004388  8fe30004	lw	r3,4(r31)
 4119  0000438c  ac230004	sw	4(r1),r3
 4120  00004390  8fe20008	lw	r2,8(r31)
 4121  00004394  8c410008	lw	r1,8(r2)
 4122  00004398  2021ffff	addi	r1,r1,#-1
 4123  0000439c  ac410008	sw	8(r2),r1
 4124  000043a0          	L44_LF3:
 4125  000043a0  20030000	addi	r3,r0,#0
 4126  000043a4  afe30000	sw	(r31),r3
 4127  000043a8  8fa20000	lw	r2,0(r29)
 4128  000043ac  8fa30004	lw	r3,4(r29)
 4129  000043b0  8fdffff8	lw	r31,-8(r30)
 4130  000043b4  001ee820	add	r29,r0,r30
 4131  000043b8  8fdefffc	lw	r30,-4(r30)
 4132  000043bc  4be00000	jr	r31
 4133  000043c0  54000000	nop
 4134  000043c4          	.endproc _QueueRemove
 4135  000043c4          	.align 2
 4136  000043c4          	.proc _QueueLength
 4137  000043c4          	.global _QueueLength
 4138  000043c4          	_QueueLength:
 4139                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 4140  000043c4  afbefffc	sw	-4(r29),r30; push fp
 4141  000043c8  001df020	add	r30,r0,r29; fp = sp
 4142  000043cc  afbffff8	sw	-8(r29),r31; push ret addr
 4143  000043d0  2fbd0008	subui	r29,r29,#8; alloc local storage
 4144  000043d4  8fc10000	lw	r1,(r30)
 4145  000043d8  8c210008	lw	r1,8(r1)
 4146  000043dc  8fdffff8	lw	r31,-8(r30)
 4147  000043e0  001ee820	add	r29,r0,r30
 4148  000043e4  8fdefffc	lw	r30,-4(r30)
 4149  000043e8  4be00000	jr	r31
 4150  000043ec  54000000	nop
 4151  000043f0          	.endproc _QueueLength
 4152  000043f0          	.align 2
 4153  000043f0          	.proc _QueueEmpty
 4154  000043f0          	.global _QueueEmpty
 4155  000043f0          	_QueueEmpty:
 4156                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 4157  000043f0  afbefffc	sw	-4(r29),r30; push fp
 4158  000043f4  001df020	add	r30,r0,r29; fp = sp
 4159  000043f8  afbffff8	sw	-8(r29),r31; push ret addr
 4160  000043fc  2fbd0008	subui	r29,r29,#8; alloc local storage
 4161  00004400  8fc10000	lw	r1,(r30)
 4162  00004404  8c210008	lw	r1,8(r1)
 4163  00004408  60210000	seqi	r1,r1,#0
 4164  0000440c  8fdffff8	lw	r31,-8(r30)
 4165  00004410  001ee820	add	r29,r0,r30
 4166  00004414  8fdefffc	lw	r30,-4(r30)
 4167  00004418  4be00000	jr	r31
 4168  0000441c  54000000	nop
 4169  00004420          	.endproc _QueueEmpty
 4170  00004420          	.data
 4171  0000f3b4          	.align 2
 4172  0000f3b4          	_processQuantum_LF3:
 4173  0000f3b4  00002710	.word 10000
 4174  0000f3b8          	.text
 4175  00004420          	.align 2
 4176  00004420          	.proc _GetCurrentPid
 4177  00004420          	.global _GetCurrentPid
 4178  00004420          	_GetCurrentPid:
 4179                      ;  Function 'GetCurrentPid'; 0 bytes of locals, 0 regs to save.
 4180  00004420  afbefffc	sw	-4(r29),r30; push fp
 4181  00004424  001df020	add	r30,r0,r29; fp = sp
 4182  00004428  afbffff8	sw	-8(r29),r31; push ret addr
 4183  0000442c  2fbd0008	subui	r29,r29,#8; alloc local storage
 4184  00004430  3c1f0000	lhi	r31,((_pcbs_LF3)>>16)&0xffff
 4185  00004434  27fffd24	addui	r31,r31,(_pcbs_LF3)&0xffff
 4186  00004438  003f0822	sub	r1,r1,r31
 4187  0000443c  8fdffff8	lw	r31,-8(r30)
 4188  00004440  001ee820	add	r29,r0,r30
 4189  00004444  8fdefffc	lw	r30,-4(r30)
 4190  00004448  4be00000	jr	r31
 4191  0000444c  54000000	nop
 4192  00004450          	.endproc _GetCurrentPid
 4193  00004450          	.data
 4194  0000f3b8          	.align 2
 4195  0000f3b8          	LC0_LF3:
 4196  0000f3b8  456e7465	.ascii "Entering ProcessModuleInit\n\000"
 4196  0000f3bc  72696e67	
 4196  0000f3c0  2050726f	
 4196  0000f3c4  63657373	
 4196  0000f3c8  4d6f6475	
 4196  0000f3cc  6c65496e	
 4196  0000f3d0  69740a00	
 4197  0000f3d4          	.align 2
 4198  0000f3d4          	LC1_LF3:
 4199  0000f3d4  496e6974	.ascii "Initializing PCB %d @ 0x%x.\n\000"
 4199  0000f3d8  69616c69	
 4199  0000f3dc  7a696e67	
 4199  0000f3e0  20504342	
 4199  0000f3e4  20256420	
 4199  0000f3e8  40203078	
 4199  0000f3ec  25782e0a	
 4199  0000f3f0  00      	
 4200  0000f3f1          	.align 2
 4201  0000f3f4          	LC2_LF3:
 4202  0000f3f4  4c656176	.ascii "Leaving ProcessModuleInit\n\000"
 4202  0000f3f8  696e6720	
 4202  0000f3fc  50726f63	
 4202  0000f400  6573734d	
 4202  0000f404  6f64756c	
 4202  0000f408  65496e69	
 4202  0000f40c  740a00  	
 4203  0000f40f          	.text
 4204  00004450          	.align 2
 4205  00004450          	.proc _ProcessModuleInit
 4206  00004450          	.global _ProcessModuleInit
 4207  00004450          	_ProcessModuleInit:
 4208                      ;  Function 'ProcessModuleInit'; 0 bytes of locals, 7 regs to save.
 4209  00004450  afbefffc	sw	-4(r29),r30; push fp
 4210  00004454  001df020	add	r30,r0,r29; fp = sp
 4211  00004458  afbffff8	sw	-8(r29),r31; push ret addr
 4212  0000445c  2fbd0028	subui	r29,r29,#40; alloc local storage
 4213  00004460  afa20000	sw	0(r29),r2
 4214  00004464  afa30004	sw	4(r29),r3
 4215  00004468  afa40008	sw	8(r29),r4
 4216  0000446c  afa5000c	sw	12(r29),r5
 4217  00004470  afa60010	sw	16(r29),r6
 4218  00004474  afa70014	sw	20(r29),r7
 4219  00004478  afa80018	sw	24(r29),r8
 4220  0000447c  23bdfff8	addi	r29,r29,#-8
 4221  00004480  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4222  00004484  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 4223  00004488  afa20000	sw	(r29),r2
 4224  0000448c  20080070	addi	r8,r0,#112
 4225  00004490  afa80004	sw	4(r29),r8
 4226  00004494  0ffff684	jal	_dindex
 4227  00004498  54000000	nop; not filled.
 4228  0000449c  23bd0008	addi	r29,r29,#8
 4229  000044a0  64210000	snei	r1,r1,#0
 4230  000044a4  1420002c	bnez	r1,L55_LF3
 4231  000044a8  54000000	nop; not filled.
 4232  000044ac  23bdfff8	addi	r29,r29,#-8
 4233  000044b0  afa20000	sw	(r29),r2
 4234  000044b4  2008002b	addi	r8,r0,#43
 4235  000044b8  afa80004	sw	4(r29),r8
 4236  000044bc  0ffff65c	jal	_dindex
 4237  000044c0  54000000	nop; not filled.
 4238  000044c4  23bd0008	addi	r29,r29,#8
 4239  000044c8  64210000	snei	r1,r1,#0
 4240  000044cc  10200020	beqz	r1,L54_LF3
 4241  000044d0  54000000	nop; not filled.
 4242  000044d4          	L55_LF3:
 4243  000044d4  23bdfff8	addi	r29,r29,#-8
 4244  000044d8  3c080000	lhi	r8,((LC0_LF3)>>16)&0xffff
 4245  000044dc  2508f3b8	addui	r8,r8,(LC0_LF3)&0xffff
 4246  000044e0  afa80000	sw	(r29),r8
 4247  000044e4  0c005c98	jal	_printf
 4248  000044e8  54000000	nop; not filled.
 4249  000044ec  23bd0008	addi	r29,r29,#8
 4250  000044f0          	L54_LF3:
 4251  000044f0  23bdfff8	addi	r29,r29,#-8
 4252  000044f4  3c020000	lhi	r2,((_freepcbs_LF3)>>16)&0xffff
 4253  000044f8  2442fcf4	addui	r2,r2,(_freepcbs_LF3)&0xffff
 4254  000044fc  afa20000	sw	(r29),r2
 4255  00004500  0c003214	jal	_QueueInit
 4256  00004504  54000000	nop; not filled.
 4257  00004508  3c080000	lhi	r8,((_runQueue_LF3)>>16)&0xffff
 4258  0000450c  2508fd00	addui	r8,r8,(_runQueue_LF3)&0xffff
 4259  00004510  afa80000	sw	(r29),r8
 4260  00004514  0c003200	jal	_QueueInit
 4261  00004518  54000000	nop; not filled.
 4262  0000451c  3c080000	lhi	r8,((_waitQueue_LF3)>>16)&0xffff
 4263  00004520  2508fd0c	addui	r8,r8,(_waitQueue_LF3)&0xffff
 4264  00004524  afa80000	sw	(r29),r8
 4265  00004528  0c0031ec	jal	_QueueInit
 4266  0000452c  54000000	nop; not filled.
 4267  00004530  3c080000	lhi	r8,((_zombieQueue_LF3)>>16)&0xffff
 4268  00004534  2508fd18	addui	r8,r8,(_zombieQueue_LF3)&0xffff
 4269  00004538  afa80000	sw	(r29),r8
 4270  0000453c  0c0031d8	jal	_QueueInit
 4271  00004540  54000000	nop; not filled.
 4272  00004544  20040000	addi	r4,r0,#0
 4273  00004548  23bd0008	addi	r29,r29,#8
 4274  0000454c  3c070000	lhi	r7,((_debugstr)>>16)&0xffff
 4275  00004550  24e7fc26	addui	r7,r7,(_debugstr)&0xffff
 4276  00004554  3c010000	lhi	r1,((_pcbs_LF3)>>16)&0xffff
 4277  00004558  2421fd24	addui	r1,r1,(_pcbs_LF3)&0xffff
 4278  0000455c  00022820	add	r5,r0,r2
 4279  00004560  202200a4	addi	r2,r1,#164
 4280  00004564  00011820	add	r3,r0,r1
 4281  00004568  00033020	add	r6,r0,r3
 4282  0000456c          	L59_LF3:
 4283  0000456c  23bdfff8	addi	r29,r29,#-8
 4284  00004570  afa70000	sw	(r29),r7
 4285  00004574  20080070	addi	r8,r0,#112
 4286  00004578  afa80004	sw	4(r29),r8
 4287  0000457c  0ffff59c	jal	_dindex
 4288  00004580  54000000	nop; not filled.
 4289  00004584  23bd0008	addi	r29,r29,#8
 4290  00004588  64210000	snei	r1,r1,#0
 4291  0000458c  1420002c	bnez	r1,L61_LF3
 4292  00004590  54000000	nop; not filled.
 4293  00004594  23bdfff8	addi	r29,r29,#-8
 4294  00004598  afa70000	sw	(r29),r7
 4295  0000459c  2008002b	addi	r8,r0,#43
 4296  000045a0  afa80004	sw	4(r29),r8
 4297  000045a4  0ffff574	jal	_dindex
 4298  000045a8  54000000	nop; not filled.
 4299  000045ac  23bd0008	addi	r29,r29,#8
 4300  000045b0  64210000	snei	r1,r1,#0
 4301  000045b4  10200028	beqz	r1,L60_LF3
 4302  000045b8  54000000	nop; not filled.
 4303  000045bc          	L61_LF3:
 4304  000045bc  23bdfff0	addi	r29,r29,#-16
 4305  000045c0  3c080000	lhi	r8,((LC1_LF3)>>16)&0xffff
 4306  000045c4  2508f3d4	addui	r8,r8,(LC1_LF3)&0xffff
 4307  000045c8  afa80000	sw	(r29),r8
 4308  000045cc  afa40004	sw	4(r29),r4
 4309  000045d0  afa60008	sw	8(r29),r6
 4310  000045d4  0c005ba8	jal	_printf
 4311  000045d8  54000000	nop; not filled.
 4312  000045dc  23bd0010	addi	r29,r29,#16
 4313  000045e0          	L60_LF3:
 4314  000045e0  20080001	addi	r8,r0,#1
 4315  000045e4  ac68000c	sw	12(r3),r8
 4316  000045e8  20080000	addi	r8,r0,#0
 4317  000045ec  ac480000	sw	(r2),r8
 4318  000045f0  ac43000c	sw	12(r2),r3
 4319  000045f4  ac450008	sw	8(r2),r5
 4320  000045f8  ac450004	sw	4(r2),r5
 4321  000045fc  8ca80000	lw	r8,(r5)
 4322  00004600  ac480000	sw	(r2),r8
 4323  00004604  aca20000	sw	(r5),r2
 4324  00004608  8c410000	lw	r1,(r2)
 4325  0000460c  ac220004	sw	4(r1),r2
 4326  00004610  8ca10008	lw	r1,8(r5)
 4327  00004614  20210001	addi	r1,r1,#1
 4328  00004618  aca10008	sw	8(r5),r1
 4329  0000461c  204200b4	addi	r2,r2,#180
 4330  00004620  206300b4	addi	r3,r3,#180
 4331  00004624  20c600b4	addi	r6,r6,#180
 4332  00004628  20840001	addi	r4,r4,#1
 4333  0000462c  7081001f	slei	r1,r4,#31
 4334  00004630  1420ff38	bnez	r1,L59_LF3
 4335  00004634  54000000	nop; not filled.
 4336  00004638  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 4337  0000463c  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 4338  00004640  20080000	addi	r8,r0,#0
 4339  00004644  ac280000	sw	(r1),r8
 4340  00004648  23bdfff8	addi	r29,r29,#-8
 4341  0000464c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4342  00004650  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 4343  00004654  afa20000	sw	(r29),r2
 4344  00004658  20080070	addi	r8,r0,#112
 4345  0000465c  afa80004	sw	4(r29),r8
 4346  00004660  0ffff4b8	jal	_dindex
 4347  00004664  54000000	nop; not filled.
 4348  00004668  23bd0008	addi	r29,r29,#8
 4349  0000466c  64210000	snei	r1,r1,#0
 4350  00004670  1420002c	bnez	r1,L67_LF3
 4351  00004674  54000000	nop; not filled.
 4352  00004678  23bdfff8	addi	r29,r29,#-8
 4353  0000467c  afa20000	sw	(r29),r2
 4354  00004680  2008002b	addi	r8,r0,#43
 4355  00004684  afa80004	sw	4(r29),r8
 4356  00004688  0ffff490	jal	_dindex
 4357  0000468c  54000000	nop; not filled.
 4358  00004690  23bd0008	addi	r29,r29,#8
 4359  00004694  64210000	snei	r1,r1,#0
 4360  00004698  10200020	beqz	r1,L66_LF3
 4361  0000469c  54000000	nop; not filled.
 4362  000046a0          	L67_LF3:
 4363  000046a0  23bdfff8	addi	r29,r29,#-8
 4364  000046a4  3c080000	lhi	r8,((LC2_LF3)>>16)&0xffff
 4365  000046a8  2508f3f4	addui	r8,r8,(LC2_LF3)&0xffff
 4366  000046ac  afa80000	sw	(r29),r8
 4367  000046b0  0c005acc	jal	_printf
 4368  000046b4  54000000	nop; not filled.
 4369  000046b8  23bd0008	addi	r29,r29,#8
 4370  000046bc          	L66_LF3:
 4371  000046bc  8fa20000	lw	r2,0(r29)
 4372  000046c0  8fa30004	lw	r3,4(r29)
 4373  000046c4  8fa40008	lw	r4,8(r29)
 4374  000046c8  8fa5000c	lw	r5,12(r29)
 4375  000046cc  8fa60010	lw	r6,16(r29)
 4376  000046d0  8fa70014	lw	r7,20(r29)
 4377  000046d4  8fa80018	lw	r8,24(r29)
 4378  000046d8  8fdffff8	lw	r31,-8(r30)
 4379  000046dc  001ee820	add	r29,r0,r30
 4380  000046e0  8fdefffc	lw	r30,-4(r30)
 4381  000046e4  4be00000	jr	r31
 4382  000046e8  54000000	nop
 4383  000046ec          	.endproc _ProcessModuleInit
 4384  000046ec          	.align 2
 4385  000046ec          	.proc _ProcessSetStatus
 4386  000046ec          	.global _ProcessSetStatus
 4387  000046ec          	_ProcessSetStatus:
 4388                      ;  Function 'ProcessSetStatus'; 0 bytes of locals, 2 regs to save.
 4389  000046ec  afbefffc	sw	-4(r29),r30; push fp
 4390  000046f0  001df020	add	r30,r0,r29; fp = sp
 4391  000046f4  afbffff8	sw	-8(r29),r31; push ret addr
 4392  000046f8  2fbd0010	subui	r29,r29,#16; alloc local storage
 4393  000046fc  afa20000	sw	0(r29),r2
 4394  00004700  afa30004	sw	4(r29),r3
 4395  00004704  8fc30000	lw	r3,(r30)
 4396  00004708  8fc20004	lw	r2,4(r30)
 4397  0000470c  8c61000c	lw	r1,12(r3)
 4398  00004710  201fffc0	addi	r31,r0,#-64
 4399  00004714  003f0824	and	r1,r1,r31
 4400  00004718  00220825	or	r1,r1,r2
 4401  0000471c  ac61000c	sw	12(r3),r1
 4402  00004720  8fa20000	lw	r2,0(r29)
 4403  00004724  8fa30004	lw	r3,4(r29)
 4404  00004728  8fdffff8	lw	r31,-8(r30)
 4405  0000472c  001ee820	add	r29,r0,r30
 4406  00004730  8fdefffc	lw	r30,-4(r30)
 4407  00004734  4be00000	jr	r31
 4408  00004738  54000000	nop
 4409  0000473c          	.endproc _ProcessSetStatus
 4410  0000473c          	.align 2
 4411  0000473c          	.proc _ProcessFreeResources
 4412  0000473c          	.global _ProcessFreeResources
 4413  0000473c          	_ProcessFreeResources:
 4414                      ;  Function 'ProcessFreeResources'; 0 bytes of locals, 4 regs to save.
 4415  0000473c  afbefffc	sw	-4(r29),r30; push fp
 4416  00004740  001df020	add	r30,r0,r29; fp = sp
 4417  00004744  afbffff8	sw	-8(r29),r31; push ret addr
 4418  00004748  2fbd0018	subui	r29,r29,#24; alloc local storage
 4419  0000474c  afa20000	sw	0(r29),r2
 4420  00004750  afa30004	sw	4(r29),r3
 4421  00004754  afa40008	sw	8(r29),r4
 4422  00004758  afa5000c	sw	12(r29),r5
 4423  0000475c  8fc40000	lw	r4,(r30)
 4424  00004760  3c030000	lhi	r3,((_freepcbs_LF3)>>16)&0xffff
 4425  00004764  2463fcf4	addui	r3,r3,(_freepcbs_LF3)&0xffff
 4426  00004768  208200a4	addi	r2,r4,#164
 4427  0000476c  8c610004	lw	r1,4(r3)
 4428  00004770  ac8300ac	sw	172(r4),r3
 4429  00004774  ac8100a8	sw	168(r4),r1
 4430  00004778  8c250000	lw	r5,(r1)
 4431  0000477c  ac450000	sw	(r2),r5
 4432  00004780  ac220000	sw	(r1),r2
 4433  00004784  8c410000	lw	r1,(r2)
 4434  00004788  ac220004	sw	4(r1),r2
 4435  0000478c  8c610008	lw	r1,8(r3)
 4436  00004790  20210001	addi	r1,r1,#1
 4437  00004794  ac610008	sw	8(r3),r1
 4438  00004798  20020000	addi	r2,r0,#0
 4439  0000479c  8c8100a0	lw	r1,160(r4)
 4440  000047a0  0041082a	slt	r1,r2,r1
 4441  000047a4  10200038	beqz	r1,L85_LF3
 4442  000047a8  54000000	nop; not filled.
 4443  000047ac  00041820	add	r3,r0,r4
 4444  000047b0          	L87_LF3:
 4445  000047b0  23bdfff8	addi	r29,r29,#-8
 4446  000047b4  8c650060	lw	r5,96(r3)
 4447  000047b8  afa50000	sw	(r29),r5
 4448  000047bc  0fffec04	jal	_MemoryFreePte
 4449  000047c0  54000000	nop; not filled.
 4450  000047c4  23bd0008	addi	r29,r29,#8
 4451  000047c8  20630004	addi	r3,r3,#4
 4452  000047cc  20420001	addi	r2,r2,#1
 4453  000047d0  8c8100a0	lw	r1,160(r4)
 4454  000047d4  0041082a	slt	r1,r2,r1
 4455  000047d8  1420ffd4	bnez	r1,L87_LF3
 4456  000047dc  54000000	nop; not filled.
 4457  000047e0          	L85_LF3:
 4458  000047e0  23bdfff8	addi	r29,r29,#-8
 4459  000047e4  94810008	lhu	r1,8(r4)
 4460  000047e8  afa10000	sw	(r29),r1
 4461  000047ec  0fffe708	jal	_MemoryFreePage
 4462  000047f0  54000000	nop; not filled.
 4463  000047f4  23bd0008	addi	r29,r29,#8
 4464  000047f8  8c81000c	lw	r1,12(r4)
 4465  000047fc  2005ffc0	addi	r5,r0,#-64
 4466  00004800  00250824	and	r1,r1,r5
 4467  00004804  34210001	ori	r1,r1,#1
 4468  00004808  ac81000c	sw	12(r4),r1
 4469  0000480c  8fa20000	lw	r2,0(r29)
 4470  00004810  8fa30004	lw	r3,4(r29)
 4471  00004814  8fa40008	lw	r4,8(r29)
 4472  00004818  8fa5000c	lw	r5,12(r29)
 4473  0000481c  8fdffff8	lw	r31,-8(r30)
 4474  00004820  001ee820	add	r29,r0,r30
 4475  00004824  8fdefffc	lw	r30,-4(r30)
 4476  00004828  4be00000	jr	r31
 4477  0000482c  54000000	nop
 4478  00004830          	.endproc _ProcessFreeResources
 4479  00004830          	.align 2
 4480  00004830          	.proc _ProcessSetResult
 4481  00004830          	.global _ProcessSetResult
 4482  00004830          	_ProcessSetResult:
 4483                      ;  Function 'ProcessSetResult'; 0 bytes of locals, 0 regs to save.
 4484  00004830  afbefffc	sw	-4(r29),r30; push fp
 4485  00004834  001df020	add	r30,r0,r29; fp = sp
 4486  00004838  afbffff8	sw	-8(r29),r31; push ret addr
 4487  0000483c  2fbd0008	subui	r29,r29,#8; alloc local storage
 4488  00004840  8fc10000	lw	r1,(r30)
 4489  00004844  8c210000	lw	r1,(r1)
 4490  00004848  8fdf0004	lw	r31,4(r30)
 4491  0000484c  ac3f002c	sw	44(r1),r31
 4492  00004850  8fdffff8	lw	r31,-8(r30)
 4493  00004854  001ee820	add	r29,r0,r30
 4494  00004858  8fdefffc	lw	r30,-4(r30)
 4495  0000485c  4be00000	jr	r31
 4496  00004860  54000000	nop
 4497  00004864          	.endproc _ProcessSetResult
 4498  00004864          	.data
 4499  0000f40f          	.align 2
 4500  0000f410          	LC3_LF3:
 4501  0000f410  4e6f7720	.ascii "Now entering ProcessSchedule (cur=0x%x, %d ready)\n\000"
 4501  0000f414  656e7465	
 4501  0000f418  72696e67	
 4501  0000f41c  2050726f	
 4501  0000f420  63657373	
 4501  0000f424  53636865	
 4501  0000f428  64756c65	
 4501  0000f42c  20286375	
 4501  0000f430  723d3078	
 4501  0000f434  25782c20	
 4501  0000f438  25642072	
 4501  0000f43c  65616479	
 4501  0000f440  290a00  	
 4502  0000f443          	.align 2
 4503  0000f444          	LC4_LF3:
 4504  0000f444  4e6f2072	.ascii "No runnable processes - exiting!\n\000"
 4504  0000f448  756e6e61	
 4504  0000f44c  626c6520	
 4504  0000f450  70726f63	
 4504  0000f454  65737365	
 4504  0000f458  73202d20	
 4504  0000f45c  65786974	
 4504  0000f460  696e6721	
 4504  0000f464  0a00    	
 4505  0000f466          	.align 2
 4506  0000f468          	LC5_LF3:
 4507  0000f468  41626f75	.ascii "About to switch to PCB 0x%x,flags=0x%x @ 0x%x\n\000"
 4507  0000f46c  7420746f	
 4507  0000f470  20737769	
 4507  0000f474  74636820	
 4507  0000f478  746f2050	
 4507  0000f47c  43422030	
 4507  0000f480  7825782c	
 4507  0000f484  666c6167	
 4507  0000f488  733d3078	
 4507  0000f48c  25782040	
 4507  0000f490  20307825	
 4507  0000f494  780a00  	
 4508  0000f497          	.align 2
 4509  0000f498          	LC6_LF3:
 4510  0000f498  46726565	.ascii "Freeing zombie PCB 0x%x.\n\000"
 4510  0000f49c  696e6720	
 4510  0000f4a0  7a6f6d62	
 4510  0000f4a4  69652050	
 4510  0000f4a8  43422030	
 4510  0000f4ac  7825782e	
 4510  0000f4b0  0a00    	
 4511  0000f4b2          	.align 2
 4512  0000f4b4          	LC7_LF3:
 4513  0000f4b4  4c656176	.ascii "Leaving ProcessSchedule (cur=0x%x)\n\000"
 4513  0000f4b8  696e6720	
 4513  0000f4bc  50726f63	
 4513  0000f4c0  65737353	
 4513  0000f4c4  63686564	
 4513  0000f4c8  756c6520	
 4513  0000f4cc  28637572	
 4513  0000f4d0  3d307825	
 4513  0000f4d4  78290a00	
 4514  0000f4d8          	.text
 4515  00004864          	.align 2
 4516  00004864          	.proc _ProcessSchedule
 4517  00004864          	.global _ProcessSchedule
 4518  00004864          	_ProcessSchedule:
 4519                      ;  Function 'ProcessSchedule'; 0 bytes of locals, 7 regs to save.
 4520  00004864  afbefffc	sw	-4(r29),r30; push fp
 4521  00004868  001df020	add	r30,r0,r29; fp = sp
 4522  0000486c  afbffff8	sw	-8(r29),r31; push ret addr
 4523  00004870  2fbd0028	subui	r29,r29,#40; alloc local storage
 4524  00004874  afa20000	sw	0(r29),r2
 4525  00004878  afa30004	sw	4(r29),r3
 4526  0000487c  afa40008	sw	8(r29),r4
 4527  00004880  afa5000c	sw	12(r29),r5
 4528  00004884  afa60010	sw	16(r29),r6
 4529  00004888  afa70014	sw	20(r29),r7
 4530  0000488c  afa80018	sw	24(r29),r8
 4531  00004890  23bdfff8	addi	r29,r29,#-8
 4532  00004894  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4533  00004898  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 4534  0000489c  afa20000	sw	(r29),r2
 4535  000048a0  20080070	addi	r8,r0,#112
 4536  000048a4  afa80004	sw	4(r29),r8
 4537  000048a8  0ffff270	jal	_dindex
 4538  000048ac  54000000	nop; not filled.
 4539  000048b0  23bd0008	addi	r29,r29,#8
 4540  000048b4  64210000	snei	r1,r1,#0
 4541  000048b8  1420002c	bnez	r1,L94_LF3
 4542  000048bc  54000000	nop; not filled.
 4543  000048c0  23bdfff8	addi	r29,r29,#-8
 4544  000048c4  afa20000	sw	(r29),r2
 4545  000048c8  2008002b	addi	r8,r0,#43
 4546  000048cc  afa80004	sw	4(r29),r8
 4547  000048d0  0ffff248	jal	_dindex
 4548  000048d4  54000000	nop; not filled.
 4549  000048d8  23bd0008	addi	r29,r29,#8
 4550  000048dc  64210000	snei	r1,r1,#0
 4551  000048e0  10200040	beqz	r1,L93_LF3
 4552  000048e4  54000000	nop; not filled.
 4553  000048e8          	L94_LF3:
 4554  000048e8  3c010000	lhi	r1,((_runQueue_LF3)>>16)&0xffff
 4555  000048ec  2421fd00	addui	r1,r1,(_runQueue_LF3)&0xffff
 4556  000048f0  8c220008	lw	r2,8(r1)
 4557  000048f4  23bdfff0	addi	r29,r29,#-16
 4558  000048f8  3c080000	lhi	r8,((LC3_LF3)>>16)&0xffff
 4559  000048fc  2508f410	addui	r8,r8,(LC3_LF3)&0xffff
 4560  00004900  afa80000	sw	(r29),r8
 4561  00004904  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 4562  00004908  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 4563  0000490c  8c210000	lw	r1,(r1)
 4564  00004910  afa10004	sw	4(r29),r1
 4565  00004914  afa20008	sw	8(r29),r2
 4566  00004918  0c005864	jal	_printf
 4567  0000491c  54000000	nop; not filled.
 4568  00004920  23bd0010	addi	r29,r29,#16
 4569  00004924          	L93_LF3:
 4570  00004924  3c050000	lhi	r5,((_runQueue_LF3)>>16)&0xffff
 4571  00004928  24a5fd00	addui	r5,r5,(_runQueue_LF3)&0xffff
 4572  0000492c  8ca10008	lw	r1,8(r5)
 4573  00004930  60210000	seqi	r1,r1,#0
 4574  00004934  10200028	beqz	r1,L96_LF3
 4575  00004938  54000000	nop; not filled.
 4576  0000493c  23bdfff8	addi	r29,r29,#-8
 4577  00004940  3c080000	lhi	r8,((LC4_LF3)>>16)&0xffff
 4578  00004944  2508f444	addui	r8,r8,(LC4_LF3)&0xffff
 4579  00004948  afa80000	sw	(r29),r8
 4580  0000494c  0c005830	jal	_printf
 4581  00004950  54000000	nop; not filled.
 4582  00004954  0c005810	jal	_exitsim
 4583  00004958  54000000	nop; not filled.
 4584  0000495c  23bd0008	addi	r29,r29,#8
 4585  00004960          	L96_LF3:
 4586  00004960  8ca10000	lw	r1,(r5)
 4587  00004964  8c24000c	lw	r4,12(r1)
 4588  00004968  208300a4	addi	r3,r4,#164
 4589  0000496c  8c8100ac	lw	r1,172(r4)
 4590  00004970  8c210008	lw	r1,8(r1)
 4591  00004974  6c210000	sgti	r1,r1,#0
 4592  00004978  1020002c	beqz	r1,L101_LF3
 4593  0000497c  54000000	nop; not filled.
 4594  00004980  8c8100a8	lw	r1,168(r4)
 4595  00004984  8c680000	lw	r8,(r3)
 4596  00004988  ac280000	sw	(r1),r8
 4597  0000498c  8c610000	lw	r1,(r3)
 4598  00004990  8c8800a8	lw	r8,168(r4)
 4599  00004994  ac280004	sw	4(r1),r8
 4600  00004998  8c8200ac	lw	r2,172(r4)
 4601  0000499c  8c410008	lw	r1,8(r2)
 4602  000049a0  2021ffff	addi	r1,r1,#-1
 4603  000049a4  ac410008	sw	8(r2),r1
 4604  000049a8          	L101_LF3:
 4605  000049a8  20080000	addi	r8,r0,#0
 4606  000049ac  ac680000	sw	(r3),r8
 4607  000049b0  8ca10004	lw	r1,4(r5)
 4608  000049b4  ac8500ac	sw	172(r4),r5
 4609  000049b8  ac8100a8	sw	168(r4),r1
 4610  000049bc  8c280000	lw	r8,(r1)
 4611  000049c0  ac680000	sw	(r3),r8
 4612  000049c4  ac230000	sw	(r1),r3
 4613  000049c8  8c610000	lw	r1,(r3)
 4614  000049cc  ac230004	sw	4(r1),r3
 4615  000049d0  8ca10008	lw	r1,8(r5)
 4616  000049d4  20210001	addi	r1,r1,#1
 4617  000049d8  aca10008	sw	8(r5),r1
 4618  000049dc  8ca10000	lw	r1,(r5)
 4619  000049e0  8c24000c	lw	r4,12(r1)
 4620  000049e4  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 4621  000049e8  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 4622  000049ec  ac240000	sw	(r1),r4
 4623  000049f0  23bdfff8	addi	r29,r29,#-8
 4624  000049f4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4625  000049f8  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 4626  000049fc  afa20000	sw	(r29),r2
 4627  00004a00  20080070	addi	r8,r0,#112
 4628  00004a04  afa80004	sw	4(r29),r8
 4629  00004a08  0ffff110	jal	_dindex
 4630  00004a0c  54000000	nop; not filled.
 4631  00004a10  23bd0008	addi	r29,r29,#8
 4632  00004a14  64210000	snei	r1,r1,#0
 4633  00004a18  1420002c	bnez	r1,L107_LF3
 4634  00004a1c  54000000	nop; not filled.
 4635  00004a20  23bdfff8	addi	r29,r29,#-8
 4636  00004a24  afa20000	sw	(r29),r2
 4637  00004a28  2008002b	addi	r8,r0,#43
 4638  00004a2c  afa80004	sw	4(r29),r8
 4639  00004a30  0ffff0e8	jal	_dindex
 4640  00004a34  54000000	nop; not filled.
 4641  00004a38  23bd0008	addi	r29,r29,#8
 4642  00004a3c  64210000	snei	r1,r1,#0
 4643  00004a40  10200038	beqz	r1,L106_LF3
 4644  00004a44  54000000	nop; not filled.
 4645  00004a48          	L107_LF3:
 4646  00004a48  23bdfff0	addi	r29,r29,#-16
 4647  00004a4c  3c080000	lhi	r8,((LC5_LF3)>>16)&0xffff
 4648  00004a50  2508f468	addui	r8,r8,(LC5_LF3)&0xffff
 4649  00004a54  afa80000	sw	(r29),r8
 4650  00004a58  afa40004	sw	4(r29),r4
 4651  00004a5c  8c88000c	lw	r8,12(r4)
 4652  00004a60  afa80008	sw	8(r29),r8
 4653  00004a64  8c810004	lw	r1,4(r4)
 4654  00004a68  8c210128	lw	r1,296(r1)
 4655  00004a6c  afa1000c	sw	12(r29),r1
 4656  00004a70  0c00570c	jal	_printf
 4657  00004a74  54000000	nop; not filled.
 4658  00004a78  23bd0010	addi	r29,r29,#16
 4659  00004a7c          	L106_LF3:
 4660  00004a7c  3c070000	lhi	r7,((_zombieQueue_LF3)>>16)&0xffff
 4661  00004a80  24e7fd18	addui	r7,r7,(_zombieQueue_LF3)&0xffff
 4662  00004a84  3c060000	lhi	r6,((_debugstr)>>16)&0xffff
 4663  00004a88  24c6fc26	addui	r6,r6,(_debugstr)&0xffff
 4664  00004a8c  3c050000	lhi	r5,((_freepcbs_LF3)>>16)&0xffff
 4665  00004a90  24a5fcf4	addui	r5,r5,(_freepcbs_LF3)&0xffff
 4666  00004a94          	L108_LF3:
 4667  00004a94  8ce10008	lw	r1,8(r7)
 4668  00004a98  60210000	seqi	r1,r1,#0
 4669  00004a9c  1420016c	bnez	r1,L109_LF3
 4670  00004aa0  54000000	nop; not filled.
 4671  00004aa4  8ce10000	lw	r1,(r7)
 4672  00004aa8  8c24000c	lw	r4,12(r1)
 4673  00004aac  23bdfff8	addi	r29,r29,#-8
 4674  00004ab0  afa60000	sw	(r29),r6
 4675  00004ab4  20080070	addi	r8,r0,#112
 4676  00004ab8  afa80004	sw	4(r29),r8
 4677  00004abc  0ffff05c	jal	_dindex
 4678  00004ac0  54000000	nop; not filled.
 4679  00004ac4  23bd0008	addi	r29,r29,#8
 4680  00004ac8  64210000	snei	r1,r1,#0
 4681  00004acc  1420002c	bnez	r1,L115_LF3
 4682  00004ad0  54000000	nop; not filled.
 4683  00004ad4  23bdfff8	addi	r29,r29,#-8
 4684  00004ad8  afa60000	sw	(r29),r6
 4685  00004adc  2008002b	addi	r8,r0,#43
 4686  00004ae0  afa80004	sw	4(r29),r8
 4687  00004ae4  0ffff034	jal	_dindex
 4688  00004ae8  54000000	nop; not filled.
 4689  00004aec  23bd0008	addi	r29,r29,#8
 4690  00004af0  64210000	snei	r1,r1,#0
 4691  00004af4  10200024	beqz	r1,L114_LF3
 4692  00004af8  54000000	nop; not filled.
 4693  00004afc          	L115_LF3:
 4694  00004afc  23bdfff8	addi	r29,r29,#-8
 4695  00004b00  3c080000	lhi	r8,((LC6_LF3)>>16)&0xffff
 4696  00004b04  2508f498	addui	r8,r8,(LC6_LF3)&0xffff
 4697  00004b08  afa80000	sw	(r29),r8
 4698  00004b0c  afa40004	sw	4(r29),r4
 4699  00004b10  0c00566c	jal	_printf
 4700  00004b14  54000000	nop; not filled.
 4701  00004b18  23bd0008	addi	r29,r29,#8
 4702  00004b1c          	L114_LF3:
 4703  00004b1c  209f00a4	addi	r31,r4,#164
 4704  00004b20  8c8100ac	lw	r1,172(r4)
 4705  00004b24  8c210008	lw	r1,8(r1)
 4706  00004b28  6c210000	sgti	r1,r1,#0
 4707  00004b2c  1020002c	beqz	r1,L117_LF3
 4708  00004b30  54000000	nop; not filled.
 4709  00004b34  8c8100a8	lw	r1,168(r4)
 4710  00004b38  8fe80000	lw	r8,(r31)
 4711  00004b3c  ac280000	sw	(r1),r8
 4712  00004b40  8fe10000	lw	r1,(r31)
 4713  00004b44  8c8800a8	lw	r8,168(r4)
 4714  00004b48  ac280004	sw	4(r1),r8
 4715  00004b4c  8c8200ac	lw	r2,172(r4)
 4716  00004b50  8c410008	lw	r1,8(r2)
 4717  00004b54  2021ffff	addi	r1,r1,#-1
 4718  00004b58  ac410008	sw	8(r2),r1
 4719  00004b5c          	L117_LF3:
 4720  00004b5c  20080000	addi	r8,r0,#0
 4721  00004b60  afe80000	sw	(r31),r8
 4722  00004b64  8ca10004	lw	r1,4(r5)
 4723  00004b68  ac8500ac	sw	172(r4),r5
 4724  00004b6c  ac8100a8	sw	168(r4),r1
 4725  00004b70  8c280000	lw	r8,(r1)
 4726  00004b74  afe80000	sw	(r31),r8
 4727  00004b78  ac3f0000	sw	(r1),r31
 4728  00004b7c  8fe10000	lw	r1,(r31)
 4729  00004b80  ac3f0004	sw	4(r1),r31
 4730  00004b84  8ca10008	lw	r1,8(r5)
 4731  00004b88  20210001	addi	r1,r1,#1
 4732  00004b8c  aca10008	sw	8(r5),r1
 4733  00004b90  20030000	addi	r3,r0,#0
 4734  00004b94  8c8100a0	lw	r1,160(r4)
 4735  00004b98  0061082a	slt	r1,r3,r1
 4736  00004b9c  10200038	beqz	r1,L123_LF3
 4737  00004ba0  54000000	nop; not filled.
 4738  00004ba4  00041020	add	r2,r0,r4
 4739  00004ba8          	L125_LF3:
 4740  00004ba8  23bdfff8	addi	r29,r29,#-8
 4741  00004bac  8c480060	lw	r8,96(r2)
 4742  00004bb0  afa80000	sw	(r29),r8
 4743  00004bb4  0fffe80c	jal	_MemoryFreePte
 4744  00004bb8  54000000	nop; not filled.
 4745  00004bbc  23bd0008	addi	r29,r29,#8
 4746  00004bc0  20420004	addi	r2,r2,#4
 4747  00004bc4  20630001	addi	r3,r3,#1
 4748  00004bc8  8c8100a0	lw	r1,160(r4)
 4749  00004bcc  0061082a	slt	r1,r3,r1
 4750  00004bd0  1420ffd4	bnez	r1,L125_LF3
 4751  00004bd4  54000000	nop; not filled.
 4752  00004bd8          	L123_LF3:
 4753  00004bd8  23bdfff8	addi	r29,r29,#-8
 4754  00004bdc  94810008	lhu	r1,8(r4)
 4755  00004be0  afa10000	sw	(r29),r1
 4756  00004be4  0fffe310	jal	_MemoryFreePage
 4757  00004be8  54000000	nop; not filled.
 4758  00004bec  23bd0008	addi	r29,r29,#8
 4759  00004bf0  8c81000c	lw	r1,12(r4)
 4760  00004bf4  2008ffc0	addi	r8,r0,#-64
 4761  00004bf8  00280824	and	r1,r1,r8
 4762  00004bfc  34210001	ori	r1,r1,#1
 4763  00004c00  ac81000c	sw	12(r4),r1
 4764  00004c04  0bfffe8c	j	L108_LF3
 4765  00004c08  54000000	nop; not filled.
 4766  00004c0c          	L109_LF3:
 4767  00004c0c  23bdfff8	addi	r29,r29,#-8
 4768  00004c10  3c010000	lhi	r1,((_processQuantum_LF3)>>16)&0xffff
 4769  00004c14  2421f3b4	addui	r1,r1,(_processQuantum_LF3)&0xffff
 4770  00004c18  8c210000	lw	r1,(r1)
 4771  00004c1c  afa10000	sw	(r29),r1
 4772  00004c20  0c003bcc	jal	_TimerSet
 4773  00004c24  54000000	nop; not filled.
 4774  00004c28  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4775  00004c2c  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 4776  00004c30  afa20000	sw	(r29),r2
 4777  00004c34  20080070	addi	r8,r0,#112
 4778  00004c38  afa80004	sw	4(r29),r8
 4779  00004c3c  0fffeedc	jal	_dindex
 4780  00004c40  54000000	nop; not filled.
 4781  00004c44  23bd0008	addi	r29,r29,#8
 4782  00004c48  64210000	snei	r1,r1,#0
 4783  00004c4c  1420002c	bnez	r1,L129_LF3
 4784  00004c50  54000000	nop; not filled.
 4785  00004c54  23bdfff8	addi	r29,r29,#-8
 4786  00004c58  afa20000	sw	(r29),r2
 4787  00004c5c  2008002b	addi	r8,r0,#43
 4788  00004c60  afa80004	sw	4(r29),r8
 4789  00004c64  0fffeeb4	jal	_dindex
 4790  00004c68  54000000	nop; not filled.
 4791  00004c6c  23bd0008	addi	r29,r29,#8
 4792  00004c70  64210000	snei	r1,r1,#0
 4793  00004c74  10200030	beqz	r1,L128_LF3
 4794  00004c78  54000000	nop; not filled.
 4795  00004c7c          	L129_LF3:
 4796  00004c7c  23bdfff8	addi	r29,r29,#-8
 4797  00004c80  3c080000	lhi	r8,((LC7_LF3)>>16)&0xffff
 4798  00004c84  2508f4b4	addui	r8,r8,(LC7_LF3)&0xffff
 4799  00004c88  afa80000	sw	(r29),r8
 4800  00004c8c  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 4801  00004c90  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 4802  00004c94  8c210000	lw	r1,(r1)
 4803  00004c98  afa10004	sw	4(r29),r1
 4804  00004c9c  0c0054e0	jal	_printf
 4805  00004ca0  54000000	nop; not filled.
 4806  00004ca4  23bd0008	addi	r29,r29,#8
 4807  00004ca8          	L128_LF3:
 4808  00004ca8  8fa20000	lw	r2,0(r29)
 4809  00004cac  8fa30004	lw	r3,4(r29)
 4810  00004cb0  8fa40008	lw	r4,8(r29)
 4811  00004cb4  8fa5000c	lw	r5,12(r29)
 4812  00004cb8  8fa60010	lw	r6,16(r29)
 4813  00004cbc  8fa70014	lw	r7,20(r29)
 4814  00004cc0  8fa80018	lw	r8,24(r29)
 4815  00004cc4  8fdffff8	lw	r31,-8(r30)
 4816  00004cc8  001ee820	add	r29,r0,r30
 4817  00004ccc  8fdefffc	lw	r30,-4(r30)
 4818  00004cd0  4be00000	jr	r31
 4819  00004cd4  54000000	nop
 4820  00004cd8          	.endproc _ProcessSchedule
 4821  00004cd8          	.data
 4822  0000f4d8          	.align 2
 4823  0000f4d8          	LC8_LF3:
 4824  0000f4d8  53757370	.ascii "Suspending PCB 0x%x (%s).\n\000"
 4824  0000f4dc  656e6469	
 4824  0000f4e0  6e672050	
 4824  0000f4e4  43422030	
 4824  0000f4e8  78257820	
 4824  0000f4ec  28257329	
 4824  0000f4f0  2e0a00  	
 4825  0000f4f3          	.align 2
 4826  0000f4f4          	LC9_LF3:
 4827  0000f4f4  25733a20	.ascii "%s: %s\n\000"
 4827  0000f4f8  25730a00	
 4828  0000f4fc          	.align 2
 4829  0000f4fc          	LC10_LF3:
 4830  0000f4fc  50726f63	.ascii "ProcessSuspend\000"
 4830  0000f500  65737353	
 4830  0000f504  75737065	
 4830  0000f508  6e6400  	
 4831  0000f50b          	.align 2
 4832  0000f50c          	LC11_LF3:
 4833  0000f50c  54727969	.ascii "Trying to suspend a non-running process!\n\000"
 4833  0000f510  6e672074	
 4833  0000f514  6f207375	
 4833  0000f518  7370656e	
 4833  0000f51c  64206120	
 4833  0000f520  6e6f6e2d	
 4833  0000f524  72756e6e	
 4833  0000f528  696e6720	
 4833  0000f52c  70726f63	
 4833  0000f530  65737321	
 4833  0000f534  0a00    	
 4834  0000f536          	.text
 4835  00004cd8          	.align 2
 4836  00004cd8          	.proc _ProcessSuspend
 4837  00004cd8          	.global _ProcessSuspend
 4838  00004cd8          	_ProcessSuspend:
 4839                      ;  Function 'ProcessSuspend'; 0 bytes of locals, 3 regs to save.
 4840  00004cd8  afbefffc	sw	-4(r29),r30; push fp
 4841  00004cdc  001df020	add	r30,r0,r29; fp = sp
 4842  00004ce0  afbffff8	sw	-8(r29),r31; push ret addr
 4843  00004ce4  2fbd0018	subui	r29,r29,#24; alloc local storage
 4844  00004ce8  afa20000	sw	0(r29),r2
 4845  00004cec  afa30004	sw	4(r29),r3
 4846  00004cf0  afa40008	sw	8(r29),r4
 4847  00004cf4  8fc30000	lw	r3,(r30)
 4848  00004cf8  23bdfff8	addi	r29,r29,#-8
 4849  00004cfc  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4850  00004d00  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 4851  00004d04  afa20000	sw	(r29),r2
 4852  00004d08  20040070	addi	r4,r0,#112
 4853  00004d0c  afa40004	sw	4(r29),r4
 4854  00004d10  0fffee08	jal	_dindex
 4855  00004d14  54000000	nop; not filled.
 4856  00004d18  23bd0008	addi	r29,r29,#8
 4857  00004d1c  64210000	snei	r1,r1,#0
 4858  00004d20  1420002c	bnez	r1,L132_LF3
 4859  00004d24  54000000	nop; not filled.
 4860  00004d28  23bdfff8	addi	r29,r29,#-8
 4861  00004d2c  afa20000	sw	(r29),r2
 4862  00004d30  2004002b	addi	r4,r0,#43
 4863  00004d34  afa40004	sw	4(r29),r4
 4864  00004d38  0fffede0	jal	_dindex
 4865  00004d3c  54000000	nop; not filled.
 4866  00004d40  23bd0008	addi	r29,r29,#8
 4867  00004d44  64210000	snei	r1,r1,#0
 4868  00004d48  1020002c	beqz	r1,L131_LF3
 4869  00004d4c  54000000	nop; not filled.
 4870  00004d50          	L132_LF3:
 4871  00004d50  23bdfff0	addi	r29,r29,#-16
 4872  00004d54  3c040000	lhi	r4,((LC8_LF3)>>16)&0xffff
 4873  00004d58  2484f4d8	addui	r4,r4,(LC8_LF3)&0xffff
 4874  00004d5c  afa40000	sw	(r29),r4
 4875  00004d60  afa30004	sw	4(r29),r3
 4876  00004d64  20610010	addi	r1,r3,#16
 4877  00004d68  afa10008	sw	8(r29),r1
 4878  00004d6c  0c005410	jal	_printf
 4879  00004d70  54000000	nop; not filled.
 4880  00004d74  23bd0010	addi	r29,r29,#16
 4881  00004d78          	L131_LF3:
 4882  00004d78  8064000f	lb	r4,15(r3)
 4883  00004d7c  58810001	srli	r1,r4,#0x1
 4884  00004d80  30210001	andi	r1,r1,#1
 4885  00004d84  14200038	bnez	r1,L134_LF3
 4886  00004d88  54000000	nop; not filled.
 4887  00004d8c  23bdfff0	addi	r29,r29,#-16
 4888  00004d90  3c040000	lhi	r4,((LC9_LF3)>>16)&0xffff
 4889  00004d94  2484f4f4	addui	r4,r4,(LC9_LF3)&0xffff
 4890  00004d98  afa40000	sw	(r29),r4
 4891  00004d9c  3c010000	lhi	r1,((LC10_LF3)>>16)&0xffff
 4892  00004da0  2421f4fc	addui	r1,r1,(LC10_LF3)&0xffff
 4893  00004da4  afa10004	sw	4(r29),r1
 4894  00004da8  3c040000	lhi	r4,((LC11_LF3)>>16)&0xffff
 4895  00004dac  2484f50c	addui	r4,r4,(LC11_LF3)&0xffff
 4896  00004db0  afa40008	sw	8(r29),r4
 4897  00004db4  0c0053c8	jal	_printf
 4898  00004db8  54000000	nop; not filled.
 4899  00004dbc  23bd0010	addi	r29,r29,#16
 4900  00004dc0          	L134_LF3:
 4901  00004dc0  8c61000c	lw	r1,12(r3)
 4902  00004dc4  2004ffc0	addi	r4,r0,#-64
 4903  00004dc8  00240824	and	r1,r1,r4
 4904  00004dcc  34210004	ori	r1,r1,#4
 4905  00004dd0  ac61000c	sw	12(r3),r1
 4906  00004dd4  207f00a4	addi	r31,r3,#164
 4907  00004dd8  8c6100ac	lw	r1,172(r3)
 4908  00004ddc  8c210008	lw	r1,8(r1)
 4909  00004de0  6c210000	sgti	r1,r1,#0
 4910  00004de4  1020002c	beqz	r1,L137_LF3
 4911  00004de8  54000000	nop; not filled.
 4912  00004dec  8c6100a8	lw	r1,168(r3)
 4913  00004df0  8fe40000	lw	r4,(r31)
 4914  00004df4  ac240000	sw	(r1),r4
 4915  00004df8  8fe10000	lw	r1,(r31)
 4916  00004dfc  8c6400a8	lw	r4,168(r3)
 4917  00004e00  ac240004	sw	4(r1),r4
 4918  00004e04  8c6200ac	lw	r2,172(r3)
 4919  00004e08  8c410008	lw	r1,8(r2)
 4920  00004e0c  2021ffff	addi	r1,r1,#-1
 4921  00004e10  ac410008	sw	8(r2),r1
 4922  00004e14          	L137_LF3:
 4923  00004e14  20040000	addi	r4,r0,#0
 4924  00004e18  afe40000	sw	(r31),r4
 4925  00004e1c  3c020000	lhi	r2,((_waitQueue_LF3)>>16)&0xffff
 4926  00004e20  2442fd0c	addui	r2,r2,(_waitQueue_LF3)&0xffff
 4927  00004e24  8c410004	lw	r1,4(r2)
 4928  00004e28  ac6200ac	sw	172(r3),r2
 4929  00004e2c  ac6100a8	sw	168(r3),r1
 4930  00004e30  8c240000	lw	r4,(r1)
 4931  00004e34  afe40000	sw	(r31),r4
 4932  00004e38  ac3f0000	sw	(r1),r31
 4933  00004e3c  8fe10000	lw	r1,(r31)
 4934  00004e40  ac3f0004	sw	4(r1),r31
 4935  00004e44  8c410008	lw	r1,8(r2)
 4936  00004e48  20210001	addi	r1,r1,#1
 4937  00004e4c  ac410008	sw	8(r2),r1
 4938  00004e50  8fa20000	lw	r2,0(r29)
 4939  00004e54  8fa30004	lw	r3,4(r29)
 4940  00004e58  8fa40008	lw	r4,8(r29)
 4941  00004e5c  8fdffff8	lw	r31,-8(r30)
 4942  00004e60  001ee820	add	r29,r0,r30
 4943  00004e64  8fdefffc	lw	r30,-4(r30)
 4944  00004e68  4be00000	jr	r31
 4945  00004e6c  54000000	nop
 4946  00004e70          	.endproc _ProcessSuspend
 4947  00004e70          	.data
 4948  0000f536          	.align 2
 4949  0000f538          	LC12_LF3:
 4950  0000f538  57616b69	.ascii "Waking up PCB 0x%x.\n\000"
 4950  0000f53c  6e672075	
 4950  0000f540  70205043	
 4950  0000f544  42203078	
 4950  0000f548  25782e0a	
 4950  0000f54c  00      	
 4951  0000f54d          	.align 2
 4952  0000f550          	LC13_LF3:
 4953  0000f550  50726f63	.ascii "ProcessWakeup\000"
 4953  0000f554  65737357	
 4953  0000f558  616b6575	
 4953  0000f55c  7000    	
 4954  0000f55e          	.align 2
 4955  0000f560          	LC14_LF3:
 4956  0000f560  54727969	.ascii "Trying to wake up a non-sleeping process!\n\000"
 4956  0000f564  6e672074	
 4956  0000f568  6f207761	
 4956  0000f56c  6b652075	
 4956  0000f570  70206120	
 4956  0000f574  6e6f6e2d	
 4956  0000f578  736c6565	
 4956  0000f57c  70696e67	
 4956  0000f580  2070726f	
 4956  0000f584  63657373	
 4956  0000f588  210a00  	
 4957  0000f58b          	.text
 4958  00004e70          	.align 2
 4959  00004e70          	.proc _ProcessWakeup
 4960  00004e70          	.global _ProcessWakeup
 4961  00004e70          	_ProcessWakeup:
 4962                      ;  Function 'ProcessWakeup'; 0 bytes of locals, 3 regs to save.
 4963  00004e70  afbefffc	sw	-4(r29),r30; push fp
 4964  00004e74  001df020	add	r30,r0,r29; fp = sp
 4965  00004e78  afbffff8	sw	-8(r29),r31; push ret addr
 4966  00004e7c  2fbd0018	subui	r29,r29,#24; alloc local storage
 4967  00004e80  afa20000	sw	0(r29),r2
 4968  00004e84  afa30004	sw	4(r29),r3
 4969  00004e88  afa40008	sw	8(r29),r4
 4970  00004e8c  8fc30000	lw	r3,(r30)
 4971  00004e90  23bdfff8	addi	r29,r29,#-8
 4972  00004e94  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 4973  00004e98  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 4974  00004e9c  afa20000	sw	(r29),r2
 4975  00004ea0  20040070	addi	r4,r0,#112
 4976  00004ea4  afa40004	sw	4(r29),r4
 4977  00004ea8  0fffec70	jal	_dindex
 4978  00004eac  54000000	nop; not filled.
 4979  00004eb0  23bd0008	addi	r29,r29,#8
 4980  00004eb4  64210000	snei	r1,r1,#0
 4981  00004eb8  1420002c	bnez	r1,L143_LF3
 4982  00004ebc  54000000	nop; not filled.
 4983  00004ec0  23bdfff8	addi	r29,r29,#-8
 4984  00004ec4  afa20000	sw	(r29),r2
 4985  00004ec8  2004002b	addi	r4,r0,#43
 4986  00004ecc  afa40004	sw	4(r29),r4
 4987  00004ed0  0fffec48	jal	_dindex
 4988  00004ed4  54000000	nop; not filled.
 4989  00004ed8  23bd0008	addi	r29,r29,#8
 4990  00004edc  64210000	snei	r1,r1,#0
 4991  00004ee0  10200024	beqz	r1,L142_LF3
 4992  00004ee4  54000000	nop; not filled.
 4993  00004ee8          	L143_LF3:
 4994  00004ee8  23bdfff8	addi	r29,r29,#-8
 4995  00004eec  3c040000	lhi	r4,((LC12_LF3)>>16)&0xffff
 4996  00004ef0  2484f538	addui	r4,r4,(LC12_LF3)&0xffff
 4997  00004ef4  afa40000	sw	(r29),r4
 4998  00004ef8  afa30004	sw	4(r29),r3
 4999  00004efc  0c005280	jal	_printf
 5000  00004f00  54000000	nop; not filled.
 5001  00004f04  23bd0008	addi	r29,r29,#8
 5002  00004f08          	L142_LF3:
 5003  00004f08  8064000f	lb	r4,15(r3)
 5004  00004f0c  58810002	srli	r1,r4,#0x2
 5005  00004f10  30210001	andi	r1,r1,#1
 5006  00004f14  14200038	bnez	r1,L145_LF3
 5007  00004f18  54000000	nop; not filled.
 5008  00004f1c  23bdfff0	addi	r29,r29,#-16
 5009  00004f20  3c040000	lhi	r4,((LC9_LF3)>>16)&0xffff
 5010  00004f24  2484f4f4	addui	r4,r4,(LC9_LF3)&0xffff
 5011  00004f28  afa40000	sw	(r29),r4
 5012  00004f2c  3c010000	lhi	r1,((LC13_LF3)>>16)&0xffff
 5013  00004f30  2421f550	addui	r1,r1,(LC13_LF3)&0xffff
 5014  00004f34  afa10004	sw	4(r29),r1
 5015  00004f38  3c040000	lhi	r4,((LC14_LF3)>>16)&0xffff
 5016  00004f3c  2484f560	addui	r4,r4,(LC14_LF3)&0xffff
 5017  00004f40  afa40008	sw	8(r29),r4
 5018  00004f44  0c005238	jal	_printf
 5019  00004f48  54000000	nop; not filled.
 5020  00004f4c  23bd0010	addi	r29,r29,#16
 5021  00004f50          	L145_LF3:
 5022  00004f50  8c61000c	lw	r1,12(r3)
 5023  00004f54  2004ffc0	addi	r4,r0,#-64
 5024  00004f58  00240824	and	r1,r1,r4
 5025  00004f5c  34210002	ori	r1,r1,#2
 5026  00004f60  ac61000c	sw	12(r3),r1
 5027  00004f64  207f00a4	addi	r31,r3,#164
 5028  00004f68  8c6100ac	lw	r1,172(r3)
 5029  00004f6c  8c210008	lw	r1,8(r1)
 5030  00004f70  6c210000	sgti	r1,r1,#0
 5031  00004f74  1020002c	beqz	r1,L148_LF3
 5032  00004f78  54000000	nop; not filled.
 5033  00004f7c  8c6100a8	lw	r1,168(r3)
 5034  00004f80  8fe40000	lw	r4,(r31)
 5035  00004f84  ac240000	sw	(r1),r4
 5036  00004f88  8fe10000	lw	r1,(r31)
 5037  00004f8c  8c6400a8	lw	r4,168(r3)
 5038  00004f90  ac240004	sw	4(r1),r4
 5039  00004f94  8c6200ac	lw	r2,172(r3)
 5040  00004f98  8c410008	lw	r1,8(r2)
 5041  00004f9c  2021ffff	addi	r1,r1,#-1
 5042  00004fa0  ac410008	sw	8(r2),r1
 5043  00004fa4          	L148_LF3:
 5044  00004fa4  20040000	addi	r4,r0,#0
 5045  00004fa8  afe40000	sw	(r31),r4
 5046  00004fac  3c020000	lhi	r2,((_runQueue_LF3)>>16)&0xffff
 5047  00004fb0  2442fd00	addui	r2,r2,(_runQueue_LF3)&0xffff
 5048  00004fb4  8c410004	lw	r1,4(r2)
 5049  00004fb8  ac6200ac	sw	172(r3),r2
 5050  00004fbc  ac6100a8	sw	168(r3),r1
 5051  00004fc0  8c240000	lw	r4,(r1)
 5052  00004fc4  afe40000	sw	(r31),r4
 5053  00004fc8  ac3f0000	sw	(r1),r31
 5054  00004fcc  8fe10000	lw	r1,(r31)
 5055  00004fd0  ac3f0004	sw	4(r1),r31
 5056  00004fd4  8c410008	lw	r1,8(r2)
 5057  00004fd8  20210001	addi	r1,r1,#1
 5058  00004fdc  ac410008	sw	8(r2),r1
 5059  00004fe0  8fa20000	lw	r2,0(r29)
 5060  00004fe4  8fa30004	lw	r3,4(r29)
 5061  00004fe8  8fa40008	lw	r4,8(r29)
 5062  00004fec  8fdffff8	lw	r31,-8(r30)
 5063  00004ff0  001ee820	add	r29,r0,r30
 5064  00004ff4  8fdefffc	lw	r30,-4(r30)
 5065  00004ff8  4be00000	jr	r31
 5066  00004ffc  54000000	nop
 5067  00005000          	.endproc _ProcessWakeup
 5068  00005000          	.data
 5069  0000f58b          	.align 2
 5070  0000f58c          	LC15_LF3:
 5071  0000f58c  456e7465	.ascii "Entering ProcessDestroy for 0x%x.\n\000"
 5071  0000f590  72696e67	
 5071  0000f594  2050726f	
 5071  0000f598  63657373	
 5071  0000f59c  44657374	
 5071  0000f5a0  726f7920	
 5071  0000f5a4  666f7220	
 5071  0000f5a8  30782578	
 5071  0000f5ac  2e0a00  	
 5072  0000f5af          	.align 2
 5073  0000f5b0          	LC16_LF3:
 5074  0000f5b0  4c656176	.ascii "Leaving ProcessDestroy for 0x%x.\n\000"
 5074  0000f5b4  696e6720	
 5074  0000f5b8  50726f63	
 5074  0000f5bc  65737344	
 5074  0000f5c0  65737472	
 5074  0000f5c4  6f792066	
 5074  0000f5c8  6f722030	
 5074  0000f5cc  7825782e	
 5074  0000f5d0  0a00    	
 5075  0000f5d2          	.text
 5076  00005000          	.align 2
 5077  00005000          	.proc _ProcessDestroy
 5078  00005000          	.global _ProcessDestroy
 5079  00005000          	_ProcessDestroy:
 5080                      ;  Function 'ProcessDestroy'; 0 bytes of locals, 3 regs to save.
 5081  00005000  afbefffc	sw	-4(r29),r30; push fp
 5082  00005004  001df020	add	r30,r0,r29; fp = sp
 5083  00005008  afbffff8	sw	-8(r29),r31; push ret addr
 5084  0000500c  2fbd0018	subui	r29,r29,#24; alloc local storage
 5085  00005010  afa20000	sw	0(r29),r2
 5086  00005014  afa30004	sw	4(r29),r3
 5087  00005018  afa40008	sw	8(r29),r4
 5088  0000501c  8fc30000	lw	r3,(r30)
 5089  00005020  23bdfff8	addi	r29,r29,#-8
 5090  00005024  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5091  00005028  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5092  0000502c  afa20000	sw	(r29),r2
 5093  00005030  20040070	addi	r4,r0,#112
 5094  00005034  afa40004	sw	4(r29),r4
 5095  00005038  0fffeae0	jal	_dindex
 5096  0000503c  54000000	nop; not filled.
 5097  00005040  23bd0008	addi	r29,r29,#8
 5098  00005044  64210000	snei	r1,r1,#0
 5099  00005048  1420002c	bnez	r1,L154_LF3
 5100  0000504c  54000000	nop; not filled.
 5101  00005050  23bdfff8	addi	r29,r29,#-8
 5102  00005054  afa20000	sw	(r29),r2
 5103  00005058  2004002b	addi	r4,r0,#43
 5104  0000505c  afa40004	sw	4(r29),r4
 5105  00005060  0fffeab8	jal	_dindex
 5106  00005064  54000000	nop; not filled.
 5107  00005068  23bd0008	addi	r29,r29,#8
 5108  0000506c  64210000	snei	r1,r1,#0
 5109  00005070  10200024	beqz	r1,L153_LF3
 5110  00005074  54000000	nop; not filled.
 5111  00005078          	L154_LF3:
 5112  00005078  23bdfff8	addi	r29,r29,#-8
 5113  0000507c  3c040000	lhi	r4,((LC15_LF3)>>16)&0xffff
 5114  00005080  2484f58c	addui	r4,r4,(LC15_LF3)&0xffff
 5115  00005084  afa40000	sw	(r29),r4
 5116  00005088  afa30004	sw	4(r29),r3
 5117  0000508c  0c0050f0	jal	_printf
 5118  00005090  54000000	nop; not filled.
 5119  00005094  23bd0008	addi	r29,r29,#8
 5120  00005098          	L153_LF3:
 5121  00005098  8c61000c	lw	r1,12(r3)
 5122  0000509c  2004ffc0	addi	r4,r0,#-64
 5123  000050a0  00240824	and	r1,r1,r4
 5124  000050a4  34210010	ori	r1,r1,#16
 5125  000050a8  ac61000c	sw	12(r3),r1
 5126  000050ac  207f00a4	addi	r31,r3,#164
 5127  000050b0  8c6100ac	lw	r1,172(r3)
 5128  000050b4  8c210008	lw	r1,8(r1)
 5129  000050b8  6c210000	sgti	r1,r1,#0
 5130  000050bc  1020002c	beqz	r1,L157_LF3
 5131  000050c0  54000000	nop; not filled.
 5132  000050c4  8c6100a8	lw	r1,168(r3)
 5133  000050c8  8fe40000	lw	r4,(r31)
 5134  000050cc  ac240000	sw	(r1),r4
 5135  000050d0  8fe10000	lw	r1,(r31)
 5136  000050d4  8c6400a8	lw	r4,168(r3)
 5137  000050d8  ac240004	sw	4(r1),r4
 5138  000050dc  8c6200ac	lw	r2,172(r3)
 5139  000050e0  8c410008	lw	r1,8(r2)
 5140  000050e4  2021ffff	addi	r1,r1,#-1
 5141  000050e8  ac410008	sw	8(r2),r1
 5142  000050ec          	L157_LF3:
 5143  000050ec  20040000	addi	r4,r0,#0
 5144  000050f0  afe40000	sw	(r31),r4
 5145  000050f4  3c020000	lhi	r2,((_zombieQueue_LF3)>>16)&0xffff
 5146  000050f8  2442fd18	addui	r2,r2,(_zombieQueue_LF3)&0xffff
 5147  000050fc  ac6200ac	sw	172(r3),r2
 5148  00005100  ac6200a8	sw	168(r3),r2
 5149  00005104  8c440000	lw	r4,(r2)
 5150  00005108  afe40000	sw	(r31),r4
 5151  0000510c  ac5f0000	sw	(r2),r31
 5152  00005110  8fe10000	lw	r1,(r31)
 5153  00005114  ac3f0004	sw	4(r1),r31
 5154  00005118  8c410008	lw	r1,8(r2)
 5155  0000511c  20210001	addi	r1,r1,#1
 5156  00005120  ac410008	sw	8(r2),r1
 5157  00005124  23bdfff8	addi	r29,r29,#-8
 5158  00005128  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5159  0000512c  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5160  00005130  afa20000	sw	(r29),r2
 5161  00005134  20040070	addi	r4,r0,#112
 5162  00005138  afa40004	sw	4(r29),r4
 5163  0000513c  0fffe9dc	jal	_dindex
 5164  00005140  54000000	nop; not filled.
 5165  00005144  23bd0008	addi	r29,r29,#8
 5166  00005148  64210000	snei	r1,r1,#0
 5167  0000514c  1420002c	bnez	r1,L161_LF3
 5168  00005150  54000000	nop; not filled.
 5169  00005154  23bdfff8	addi	r29,r29,#-8
 5170  00005158  afa20000	sw	(r29),r2
 5171  0000515c  2004002b	addi	r4,r0,#43
 5172  00005160  afa40004	sw	4(r29),r4
 5173  00005164  0fffe9b4	jal	_dindex
 5174  00005168  54000000	nop; not filled.
 5175  0000516c  23bd0008	addi	r29,r29,#8
 5176  00005170  64210000	snei	r1,r1,#0
 5177  00005174  10200024	beqz	r1,L160_LF3
 5178  00005178  54000000	nop; not filled.
 5179  0000517c          	L161_LF3:
 5180  0000517c  23bdfff8	addi	r29,r29,#-8
 5181  00005180  3c040000	lhi	r4,((LC16_LF3)>>16)&0xffff
 5182  00005184  2484f5b0	addui	r4,r4,(LC16_LF3)&0xffff
 5183  00005188  afa40000	sw	(r29),r4
 5184  0000518c  afa30004	sw	4(r29),r3
 5185  00005190  0c004fec	jal	_printf
 5186  00005194  54000000	nop; not filled.
 5187  00005198  23bd0008	addi	r29,r29,#8
 5188  0000519c          	L160_LF3:
 5189  0000519c  8fa20000	lw	r2,0(r29)
 5190  000051a0  8fa30004	lw	r3,4(r29)
 5191  000051a4  8fa40008	lw	r4,8(r29)
 5192  000051a8  8fdffff8	lw	r31,-8(r30)
 5193  000051ac  001ee820	add	r29,r0,r30
 5194  000051b0  8fdefffc	lw	r30,-4(r30)
 5195  000051b4  4be00000	jr	r31
 5196  000051b8  54000000	nop
 5197  000051bc          	.endproc _ProcessDestroy
 5198  000051bc          	.data
 5199  0000f5d2          	.align 2
 5200  0000f5d4          	LC17_LF3:
 5201  0000f5d4  4f6c6420	.ascii "Old interrupt value was 0x%x.\n\000"
 5201  0000f5d8  696e7465	
 5201  0000f5dc  72727570	
 5201  0000f5e0  74207661	
 5201  0000f5e4  6c756520	
 5201  0000f5e8  77617320	
 5201  0000f5ec  30782578	
 5201  0000f5f0  2e0a00  	
 5202  0000f5f3          	.align 2
 5203  0000f5f4          	LC18_LF3:
 5204  0000f5f4  456e7465	.ascii "Entering ProcessFork args=0x%x 0x%x %s %d\n\000"
 5204  0000f5f8  72696e67	
 5204  0000f5fc  2050726f	
 5204  0000f600  63657373	
 5204  0000f604  466f726b	
 5204  0000f608  20617267	
 5204  0000f60c  733d3078	
 5204  0000f610  25782030	
 5204  0000f614  78257820	
 5204  0000f618  25732025	
 5204  0000f61c  640a00  	
 5205  0000f61f          	.align 2
 5206  0000f620          	LC19_LF3:
 5207  0000f620  46415441	.ascii "FATAL error: no free processes!\n\000"
 5207  0000f624  4c206572	
 5207  0000f628  726f723a	
 5207  0000f62c  206e6f20	
 5207  0000f630  66726565	
 5207  0000f634  2070726f	
 5207  0000f638  63657373	
 5207  0000f63c  6573210a	
 5207  0000f640  00      	
 5208  0000f641          	.align 2
 5209  0000f644          	LC20_LF3:
 5210  0000f644  476f7420	.ascii "Got a link @ 0x%x\n\000"
 5210  0000f648  61206c69	
 5210  0000f64c  6e6b2040	
 5210  0000f650  20307825	
 5210  0000f654  780a00  	
 5211  0000f657          	.align 2
 5212  0000f658          	LC21_LF3:
 5213  0000f658  4265666f	.ascii "Before restore interrupt value is 0x%x.\n\000"
 5213  0000f65c  72652072	
 5213  0000f660  6573746f	
 5213  0000f664  72652069	
 5213  0000f668  6e746572	
 5213  0000f66c  72757074	
 5213  0000f670  2076616c	
 5213  0000f674  75652069	
 5213  0000f678  73203078	
 5213  0000f67c  25782e0a	
 5213  0000f680  00      	
 5214  0000f681          	.align 2
 5215  0000f684          	LC22_LF3:
 5216  0000f684  4e657720	.ascii "New interrupt value is 0x%x.\n\000"
 5216  0000f688  696e7465	
 5216  0000f68c  72727570	
 5216  0000f690  74207661	
 5216  0000f694  6c756520	
 5216  0000f698  69732030	
 5216  0000f69c  7825782e	
 5216  0000f6a0  0a00    	
 5217  0000f6a2          	.align 2
 5218  0000f6a4          	LC23_LF3:
 5219  0000f6a4  46415441	.ascii "FATAL: couldn\'t allocate memory - no free pages!\n\000"
 5219  0000f6a8  4c3a2063	
 5219  0000f6ac  6f756c64	
 5219  0000f6b0  6e277420	
 5219  0000f6b4  616c6c6f	
 5219  0000f6b8  63617465	
 5219  0000f6bc  206d656d	
 5219  0000f6c0  6f727920	
 5219  0000f6c4  2d206e6f	
 5219  0000f6c8  20667265	
 5219  0000f6cc  65207061	
 5219  0000f6d0  67657321	
 5219  0000f6d4  0a00    	
 5220  0000f6d6          	.align 2
 5221  0000f6d8          	LC24_LF3:
 5222  0000f6d8  46415441	.ascii "FATAL: couldn\'t allocate system stack - no free pages!\n\000"
 5222  0000f6dc  4c3a2063	
 5222  0000f6e0  6f756c64	
 5222  0000f6e4  6e277420	
 5222  0000f6e8  616c6c6f	
 5222  0000f6ec  63617465	
 5222  0000f6f0  20737973	
 5222  0000f6f4  74656d20	
 5222  0000f6f8  73746163	
 5222  0000f6fc  6b202d20	
 5222  0000f700  6e6f2066	
 5222  0000f704  72656520	
 5222  0000f708  70616765	
 5222  0000f70c  73210a00	
 5223  0000f710          	.align 2
 5224  0000f710          	LC25_LF3:
 5225  0000f710  53657474	.ascii "Setting up PCB @ 0x%x (sys stack=0x%x, mem=0x%x, size=0x%x)\n\000"
 5225  0000f714  696e6720	
 5225  0000f718  75702050	
 5225  0000f71c  43422040	
 5225  0000f720  20307825	
 5225  0000f724  78202873	
 5225  0000f728  79732073	
 5225  0000f72c  7461636b	
 5225  0000f730  3d307825	
 5225  0000f734  782c206d	
 5225  0000f738  656d3d30	
 5225  0000f73c  7825782c	
 5225  0000f740  2073697a	
 5225  0000f744  653d3078	
 5225  0000f748  2578290a	
 5225  0000f74c  00      	
 5226  0000f74d          	.align 2
 5227  0000f750          	LC26_LF3:
 5228  0000f750  41626f75	.ascii "About to load %s\n\000"
 5228  0000f754  7420746f	
 5228  0000f758  206c6f61	
 5228  0000f75c  64202573	
 5228  0000f760  0a00    	
 5229  0000f762          	.align 2
 5230  0000f764          	LC27_LF3:
 5231  0000f764  46696c65	.ascii "File %s -> start=0x%08x\n\000"
 5231  0000f768  20257320	
 5231  0000f76c  2d3e2073	
 5231  0000f770  74617274	
 5231  0000f774  3d307825	
 5231  0000f778  3038780a	
 5231  0000f77c  00      	
 5232  0000f77d          	.align 2
 5233  0000f780          	LC28_LF3:
 5234  0000f780  46696c65	.ascii "File %s -> code @ 0x%08x (size=0x%08x)\n\000"
 5234  0000f784  20257320	
 5234  0000f788  2d3e2063	
 5234  0000f78c  6f646520	
 5234  0000f790  40203078	
 5234  0000f794  25303878	
 5234  0000f798  20287369	
 5234  0000f79c  7a653d30	
 5234  0000f7a0  78253038	
 5234  0000f7a4  78290a00	
 5235  0000f7a8          	.align 2
 5236  0000f7a8          	LC29_LF3:
 5237  0000f7a8  46696c65	.ascii "File %s -> data @ 0x%08x (size=0x%08x)\n\000"
 5237  0000f7ac  20257320	
 5237  0000f7b0  2d3e2064	
 5237  0000f7b4  61746120	
 5237  0000f7b8  40203078	
 5237  0000f7bc  25303878	
 5237  0000f7c0  20287369	
 5237  0000f7c4  7a653d30	
 5237  0000f7c8  78253038	
 5237  0000f7cc  78290a00	
 5238  0000f7d0          	.align 2
 5239  0000f7d0          	LC30_LF3:
 5240  0000f7d0  506c6163	.ascii "Placing %d bytes at vaddr %08x.\n\000"
 5240  0000f7d4  696e6720	
 5240  0000f7d8  25642062	
 5240  0000f7dc  79746573	
 5240  0000f7e0  20617420	
 5240  0000f7e4  76616464	
 5240  0000f7e8  72202530	
 5240  0000f7ec  38782e0a	
 5240  0000f7f0  00      	
 5241  0000f7f1          	.align 2
 5242  0000f7f4          	LC31_LF3:
 5243  0000f7f4  53657474	.ascii "Setting currentPCB=0x%x, stackframe=0x%x\n\000"
 5243  0000f7f8  696e6720	
 5243  0000f7fc  63757272	
 5243  0000f800  656e7450	
 5243  0000f804  43423d30	
 5243  0000f808  7825782c	
 5243  0000f80c  20737461	
 5243  0000f810  636b6672	
 5243  0000f814  616d653d	
 5243  0000f818  30782578	
 5243  0000f81c  0a00    	
 5244  0000f81e          	.align 2
 5245  0000f820          	LC32_LF3:
 5246  0000f820  4c656176	.ascii "Leaving ProcessFork (%s)\n\000"
 5246  0000f824  696e6720	
 5246  0000f828  50726f63	
 5246  0000f82c  65737346	
 5246  0000f830  6f726b20	
 5246  0000f834  28257329	
 5246  0000f838  0a00    	
 5247  0000f83a          	.text
 5248  000051bc          	.align 2
 5249  000051bc          	.proc _ProcessFork
 5250  000051bc          	.global _ProcessFork
 5251  000051bc          	_ProcessFork:
 5252                      ;  Function 'ProcessFork'; 128 bytes of locals, 10 regs to save.
 5253  000051bc  afbefffc	sw	-4(r29),r30; push fp
 5254  000051c0  001df020	add	r30,r0,r29; fp = sp
 5255  000051c4  afbffff8	sw	-8(r29),r31; push ret addr
 5256  000051c8  2fbd00b0	subui	r29,r29,#176; alloc local storage
 5257  000051cc  afa20000	sw	0(r29),r2
 5258  000051d0  afa30004	sw	4(r29),r3
 5259  000051d4  afa40008	sw	8(r29),r4
 5260  000051d8  afa5000c	sw	12(r29),r5
 5261  000051dc  afa60010	sw	16(r29),r6
 5262  000051e0  afa70014	sw	20(r29),r7
 5263  000051e4  afa80018	sw	24(r29),r8
 5264  000051e8  afa9001c	sw	28(r29),r9
 5265  000051ec  afaa0020	sw	32(r29),r10
 5266  000051f0  afab0024	sw	36(r29),r11
 5267  000051f4  8fc80000	lw	r8,(r30)
 5268  000051f8  8fca0008	lw	r10,8(r30)
 5269  000051fc  8fc7000c	lw	r7,12(r30)
 5270  00005200  200b0000	addi	r11,r0,#0
 5271  00005204  afcbff78	sw	-136(r30),r11
 5272  00005208  23bdfff8	addi	r29,r29,#-8
 5273  0000520c  200b000f	addi	r11,r0,#15
 5274  00005210  afab0000	sw	(r29),r11
 5275  00005214  0c004e14	jal	_SetIntrs
 5276  00005218  54000000	nop; not filled.
 5277  0000521c  00011820	add	r3,r0,r1
 5278  00005220  23bd0008	addi	r29,r29,#8
 5279  00005224  23bdfff8	addi	r29,r29,#-8
 5280  00005228  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5281  0000522c  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5282  00005230  afa20000	sw	(r29),r2
 5283  00005234  200b0049	addi	r11,r0,#73
 5284  00005238  afab0004	sw	4(r29),r11
 5285  0000523c  0fffe8dc	jal	_dindex
 5286  00005240  54000000	nop; not filled.
 5287  00005244  23bd0008	addi	r29,r29,#8
 5288  00005248  64210000	snei	r1,r1,#0
 5289  0000524c  1420002c	bnez	r1,L167_LF3
 5290  00005250  54000000	nop; not filled.
 5291  00005254  23bdfff8	addi	r29,r29,#-8
 5292  00005258  afa20000	sw	(r29),r2
 5293  0000525c  200b002b	addi	r11,r0,#43
 5294  00005260  afab0004	sw	4(r29),r11
 5295  00005264  0fffe8b4	jal	_dindex
 5296  00005268  54000000	nop; not filled.
 5297  0000526c  23bd0008	addi	r29,r29,#8
 5298  00005270  64210000	snei	r1,r1,#0
 5299  00005274  10200024	beqz	r1,L166_LF3
 5300  00005278  54000000	nop; not filled.
 5301  0000527c          	L167_LF3:
 5302  0000527c  23bdfff8	addi	r29,r29,#-8
 5303  00005280  3c0b0000	lhi	r11,((LC17_LF3)>>16)&0xffff
 5304  00005284  256bf5d4	addui	r11,r11,(LC17_LF3)&0xffff
 5305  00005288  afab0000	sw	(r29),r11
 5306  0000528c  afa30004	sw	4(r29),r3
 5307  00005290  0c004eec	jal	_printf
 5308  00005294  54000000	nop; not filled.
 5309  00005298  23bd0008	addi	r29,r29,#8
 5310  0000529c          	L166_LF3:
 5311  0000529c  23bdfff8	addi	r29,r29,#-8
 5312  000052a0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5313  000052a4  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5314  000052a8  afa20000	sw	(r29),r2
 5315  000052ac  200b0070	addi	r11,r0,#112
 5316  000052b0  afab0004	sw	4(r29),r11
 5317  000052b4  0fffe864	jal	_dindex
 5318  000052b8  54000000	nop; not filled.
 5319  000052bc  23bd0008	addi	r29,r29,#8
 5320  000052c0  64210000	snei	r1,r1,#0
 5321  000052c4  1420002c	bnez	r1,L169_LF3
 5322  000052c8  54000000	nop; not filled.
 5323  000052cc  23bdfff8	addi	r29,r29,#-8
 5324  000052d0  afa20000	sw	(r29),r2
 5325  000052d4  200b002b	addi	r11,r0,#43
 5326  000052d8  afab0004	sw	4(r29),r11
 5327  000052dc  0fffe83c	jal	_dindex
 5328  000052e0  54000000	nop; not filled.
 5329  000052e4  23bd0008	addi	r29,r29,#8
 5330  000052e8  64210000	snei	r1,r1,#0
 5331  000052ec  10200034	beqz	r1,L168_LF3
 5332  000052f0  54000000	nop; not filled.
 5333  000052f4          	L169_LF3:
 5334  000052f4  23bdffe8	addi	r29,r29,#-24
 5335  000052f8  3c0b0000	lhi	r11,((LC18_LF3)>>16)&0xffff
 5336  000052fc  256bf5f4	addui	r11,r11,(LC18_LF3)&0xffff
 5337  00005300  afab0000	sw	(r29),r11
 5338  00005304  afa80004	sw	4(r29),r8
 5339  00005308  8fcb0004	lw	r11,4(r30)
 5340  0000530c  afab0008	sw	8(r29),r11
 5341  00005310  afaa000c	sw	12(r29),r10
 5342  00005314  afa70010	sw	16(r29),r7
 5343  00005318  0c004e64	jal	_printf
 5344  0000531c  54000000	nop; not filled.
 5345  00005320  23bd0018	addi	r29,r29,#24
 5346  00005324          	L168_LF3:
 5347  00005324  3c020000	lhi	r2,((_freepcbs_LF3)>>16)&0xffff
 5348  00005328  2442fcf4	addui	r2,r2,(_freepcbs_LF3)&0xffff
 5349  0000532c  8c410008	lw	r1,8(r2)
 5350  00005330  60210000	seqi	r1,r1,#0
 5351  00005334  10200028	beqz	r1,L170_LF3
 5352  00005338  54000000	nop; not filled.
 5353  0000533c  23bdfff8	addi	r29,r29,#-8
 5354  00005340  3c0b0000	lhi	r11,((LC19_LF3)>>16)&0xffff
 5355  00005344  256bf620	addui	r11,r11,(LC19_LF3)&0xffff
 5356  00005348  afab0000	sw	(r29),r11
 5357  0000534c  0c004e30	jal	_printf
 5358  00005350  54000000	nop; not filled.
 5359  00005354  0c004e10	jal	_exitsim
 5360  00005358  54000000	nop; not filled.
 5361  0000535c  23bd0008	addi	r29,r29,#8
 5362  00005360          	L170_LF3:
 5363  00005360  8c460000	lw	r6,(r2)
 5364  00005364  23bdfff8	addi	r29,r29,#-8
 5365  00005368  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5366  0000536c  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5367  00005370  afa20000	sw	(r29),r2
 5368  00005374  200b0070	addi	r11,r0,#112
 5369  00005378  afab0004	sw	4(r29),r11
 5370  0000537c  0fffe79c	jal	_dindex
 5371  00005380  54000000	nop; not filled.
 5372  00005384  23bd0008	addi	r29,r29,#8
 5373  00005388  64210000	snei	r1,r1,#0
 5374  0000538c  1420002c	bnez	r1,L175_LF3
 5375  00005390  54000000	nop; not filled.
 5376  00005394  23bdfff8	addi	r29,r29,#-8
 5377  00005398  afa20000	sw	(r29),r2
 5378  0000539c  200b002b	addi	r11,r0,#43
 5379  000053a0  afab0004	sw	4(r29),r11
 5380  000053a4  0fffe774	jal	_dindex
 5381  000053a8  54000000	nop; not filled.
 5382  000053ac  23bd0008	addi	r29,r29,#8
 5383  000053b0  64210000	snei	r1,r1,#0
 5384  000053b4  10200024	beqz	r1,L174_LF3
 5385  000053b8  54000000	nop; not filled.
 5386  000053bc          	L175_LF3:
 5387  000053bc  23bdfff8	addi	r29,r29,#-8
 5388  000053c0  3c0b0000	lhi	r11,((LC20_LF3)>>16)&0xffff
 5389  000053c4  256bf644	addui	r11,r11,(LC20_LF3)&0xffff
 5390  000053c8  afab0000	sw	(r29),r11
 5391  000053cc  afa60004	sw	4(r29),r6
 5392  000053d0  0c004dac	jal	_printf
 5393  000053d4  54000000	nop; not filled.
 5394  000053d8  23bd0008	addi	r29,r29,#8
 5395  000053dc          	L174_LF3:
 5396  000053dc  8cc10008	lw	r1,8(r6)
 5397  000053e0  8c210008	lw	r1,8(r1)
 5398  000053e4  6c210000	sgti	r1,r1,#0
 5399  000053e8  1020002c	beqz	r1,L177_LF3
 5400  000053ec  54000000	nop; not filled.
 5401  000053f0  8cc10004	lw	r1,4(r6)
 5402  000053f4  8ccb0000	lw	r11,(r6)
 5403  000053f8  ac2b0000	sw	(r1),r11
 5404  000053fc  8cc10000	lw	r1,(r6)
 5405  00005400  8ccb0004	lw	r11,4(r6)
 5406  00005404  ac2b0004	sw	4(r1),r11
 5407  00005408  8cc20008	lw	r2,8(r6)
 5408  0000540c  8c410008	lw	r1,8(r2)
 5409  00005410  2021ffff	addi	r1,r1,#-1
 5410  00005414  ac410008	sw	8(r2),r1
 5411  00005418          	L177_LF3:
 5412  00005418  200b0000	addi	r11,r0,#0
 5413  0000541c  accb0000	sw	(r6),r11
 5414  00005420  8cc4000c	lw	r4,12(r6)
 5415  00005424  8c81000c	lw	r1,12(r4)
 5416  00005428  200bffc0	addi	r11,r0,#-64
 5417  0000542c  002b0824	and	r1,r1,r11
 5418  00005430  34210002	ori	r1,r1,#2
 5419  00005434  ac81000c	sw	12(r4),r1
 5420  00005438  23bdfff8	addi	r29,r29,#-8
 5421  0000543c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5422  00005440  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5423  00005444  afa20000	sw	(r29),r2
 5424  00005448  200b0049	addi	r11,r0,#73
 5425  0000544c  afab0004	sw	4(r29),r11
 5426  00005450  0fffe6c8	jal	_dindex
 5427  00005454  54000000	nop; not filled.
 5428  00005458  23bd0008	addi	r29,r29,#8
 5429  0000545c  64210000	snei	r1,r1,#0
 5430  00005460  1420002c	bnez	r1,L180_LF3
 5431  00005464  54000000	nop; not filled.
 5432  00005468  23bdfff8	addi	r29,r29,#-8
 5433  0000546c  afa20000	sw	(r29),r2
 5434  00005470  200b002b	addi	r11,r0,#43
 5435  00005474  afab0004	sw	4(r29),r11
 5436  00005478  0fffe6a0	jal	_dindex
 5437  0000547c  54000000	nop; not filled.
 5438  00005480  23bd0008	addi	r29,r29,#8
 5439  00005484  64210000	snei	r1,r1,#0
 5440  00005488  1020002c	beqz	r1,L179_LF3
 5441  0000548c  54000000	nop; not filled.
 5442  00005490          	L180_LF3:
 5443  00005490  0c004bd4	jal	_CurrentIntrs
 5444  00005494  54000000	nop; not filled.
 5445  00005498  23bdfff8	addi	r29,r29,#-8
 5446  0000549c  3c0b0000	lhi	r11,((LC21_LF3)>>16)&0xffff
 5447  000054a0  256bf658	addui	r11,r11,(LC21_LF3)&0xffff
 5448  000054a4  afab0000	sw	(r29),r11
 5449  000054a8  afa10004	sw	4(r29),r1
 5450  000054ac  0c004cd0	jal	_printf
 5451  000054b0  54000000	nop; not filled.
 5452  000054b4  23bd0008	addi	r29,r29,#8
 5453  000054b8          	L179_LF3:
 5454  000054b8  23bdfff8	addi	r29,r29,#-8
 5455  000054bc  afa30000	sw	(r29),r3
 5456  000054c0  0c004b68	jal	_SetIntrs
 5457  000054c4  54000000	nop; not filled.
 5458  000054c8  23bd0008	addi	r29,r29,#8
 5459  000054cc  23bdfff8	addi	r29,r29,#-8
 5460  000054d0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5461  000054d4  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5462  000054d8  afa20000	sw	(r29),r2
 5463  000054dc  200b0049	addi	r11,r0,#73
 5464  000054e0  afab0004	sw	4(r29),r11
 5465  000054e4  0fffe634	jal	_dindex
 5466  000054e8  54000000	nop; not filled.
 5467  000054ec  23bd0008	addi	r29,r29,#8
 5468  000054f0  64210000	snei	r1,r1,#0
 5469  000054f4  1420002c	bnez	r1,L183_LF3
 5470  000054f8  54000000	nop; not filled.
 5471  000054fc  23bdfff8	addi	r29,r29,#-8
 5472  00005500  afa20000	sw	(r29),r2
 5473  00005504  200b002b	addi	r11,r0,#43
 5474  00005508  afab0004	sw	4(r29),r11
 5475  0000550c  0fffe60c	jal	_dindex
 5476  00005510  54000000	nop; not filled.
 5477  00005514  23bd0008	addi	r29,r29,#8
 5478  00005518  64210000	snei	r1,r1,#0
 5479  0000551c  1020002c	beqz	r1,L182_LF3
 5480  00005520  54000000	nop; not filled.
 5481  00005524          	L183_LF3:
 5482  00005524  0c004b40	jal	_CurrentIntrs
 5483  00005528  54000000	nop; not filled.
 5484  0000552c  23bdfff8	addi	r29,r29,#-8
 5485  00005530  3c0b0000	lhi	r11,((LC22_LF3)>>16)&0xffff
 5486  00005534  256bf684	addui	r11,r11,(LC22_LF3)&0xffff
 5487  00005538  afab0000	sw	(r29),r11
 5488  0000553c  afa10004	sw	4(r29),r1
 5489  00005540  0c004c3c	jal	_printf
 5490  00005544  54000000	nop; not filled.
 5491  00005548  23bd0008	addi	r29,r29,#8
 5492  0000554c          	L182_LF3:
 5493  0000554c  23bdfff8	addi	r29,r29,#-8
 5494  00005550  20810010	addi	r1,r4,#16
 5495  00005554  afa10000	sw	(r29),r1
 5496  00005558  afaa0004	sw	4(r29),r10
 5497  0000555c  0fffe0fc	jal	_dstrcpy
 5498  00005560  54000000	nop; not filled.
 5499  00005564  200b0001	addi	r11,r0,#1
 5500  00005568  ac8b00a0	sw	160(r4),r11
 5501  0000556c  0fffd6dc	jal	_MemoryAllocPage
 5502  00005570  54000000	nop; not filled.
 5503  00005574  00011020	add	r2,r0,r1
 5504  00005578  23bd0008	addi	r29,r29,#8
 5505  0000557c  64410000	snei	r1,r2,#0
 5506  00005580  14200028	bnez	r1,L184_LF3
 5507  00005584  54000000	nop; not filled.
 5508  00005588  23bdfff8	addi	r29,r29,#-8
 5509  0000558c  3c0b0000	lhi	r11,((LC23_LF3)>>16)&0xffff
 5510  00005590  256bf6a4	addui	r11,r11,(LC23_LF3)&0xffff
 5511  00005594  afab0000	sw	(r29),r11
 5512  00005598  0c004be4	jal	_printf
 5513  0000559c  54000000	nop; not filled.
 5514  000055a0  0c004bc4	jal	_exitsim
 5515  000055a4  54000000	nop; not filled.
 5516  000055a8  23bd0008	addi	r29,r29,#8
 5517  000055ac          	L184_LF3:
 5518  000055ac  23bdfff8	addi	r29,r29,#-8
 5519  000055b0  afa20000	sw	(r29),r2
 5520  000055b4  0fffdddc	jal	_MemorySetupPte
 5521  000055b8  54000000	nop; not filled.
 5522  000055bc  ac810060	sw	96(r4),r1
 5523  000055c0  0fffd688	jal	_MemoryAllocPage
 5524  000055c4  54000000	nop; not filled.
 5525  000055c8  00011020	add	r2,r0,r1
 5526  000055cc  23bd0008	addi	r29,r29,#8
 5527  000055d0  64410000	snei	r1,r2,#0
 5528  000055d4  14200028	bnez	r1,L185_LF3
 5529  000055d8  54000000	nop; not filled.
 5530  000055dc  23bdfff8	addi	r29,r29,#-8
 5531  000055e0  3c0b0000	lhi	r11,((LC24_LF3)>>16)&0xffff
 5532  000055e4  256bf6d8	addui	r11,r11,(LC24_LF3)&0xffff
 5533  000055e8  afab0000	sw	(r29),r11
 5534  000055ec  0c004b90	jal	_printf
 5535  000055f0  54000000	nop; not filled.
 5536  000055f4  0c004b70	jal	_exitsim
 5537  000055f8  54000000	nop; not filled.
 5538  000055fc  23bd0008	addi	r29,r29,#8
 5539  00005600          	L185_LF3:
 5540  00005600  50410010	slli	r1,r2,#0x10
 5541  00005604  ac810008	sw	8(r4),r1
 5542  00005608  3425fe8c	ori	r5,r1,#65164
 5543  0000560c  ac850004	sw	4(r4),r5
 5544  00005610  ac850000	sw	(r4),r5
 5545  00005614  23bdfff8	addi	r29,r29,#-8
 5546  00005618  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5547  0000561c  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5548  00005620  afa20000	sw	(r29),r2
 5549  00005624  200b0070	addi	r11,r0,#112
 5550  00005628  afab0004	sw	4(r29),r11
 5551  0000562c  0fffe4ec	jal	_dindex
 5552  00005630  54000000	nop; not filled.
 5553  00005634  23bd0008	addi	r29,r29,#8
 5554  00005638  64210000	snei	r1,r1,#0
 5555  0000563c  1420002c	bnez	r1,L187_LF3
 5556  00005640  54000000	nop; not filled.
 5557  00005644  23bdfff8	addi	r29,r29,#-8
 5558  00005648  afa20000	sw	(r29),r2
 5559  0000564c  200b002b	addi	r11,r0,#43
 5560  00005650  afab0004	sw	4(r29),r11
 5561  00005654  0fffe4c4	jal	_dindex
 5562  00005658  54000000	nop; not filled.
 5563  0000565c  23bd0008	addi	r29,r29,#8
 5564  00005660  64210000	snei	r1,r1,#0
 5565  00005664  10200040	beqz	r1,L186_LF3
 5566  00005668  54000000	nop; not filled.
 5567  0000566c          	L187_LF3:
 5568  0000566c  23bdffe8	addi	r29,r29,#-24
 5569  00005670  3c0b0000	lhi	r11,((LC25_LF3)>>16)&0xffff
 5570  00005674  256bf710	addui	r11,r11,(LC25_LF3)&0xffff
 5571  00005678  afab0000	sw	(r29),r11
 5572  0000567c  afa40004	sw	4(r29),r4
 5573  00005680  8c8b0008	lw	r11,8(r4)
 5574  00005684  afab0008	sw	8(r29),r11
 5575  00005688  8c8b0060	lw	r11,96(r4)
 5576  0000568c  afab000c	sw	12(r29),r11
 5577  00005690  8c8100a0	lw	r1,160(r4)
 5578  00005694  50210010	slli	r1,r1,#0x10
 5579  00005698  afa10010	sw	16(r29),r1
 5580  0000569c  0c004ae0	jal	_printf
 5581  000056a0  54000000	nop; not filled.
 5582  000056a4  23bd0018	addi	r29,r29,#24
 5583  000056a8          	L186_LF3:
 5584  000056a8  200b0000	addi	r11,r0,#0
 5585  000056ac  acab0028	sw	40(r5),r11
 5586  000056b0  20810060	addi	r1,r4,#96
 5587  000056b4  aca10138	sw	312(r5),r1
 5588  000056b8  8c8b00a0	lw	r11,160(r4)
 5589  000056bc  acab013c	sw	316(r5),r11
 5590  000056c0  3c010010	lhi	r1,#16
 5591  000056c4  24210010	addui	r1,r1,#16
 5592  000056c8  aca10140	sw	320(r5),r1
 5593  000056cc  64e10000	snei	r1,r7,#0
 5594  000056d0  10200468	beqz	r1,L188_LF3
 5595  000056d4  54000000	nop; not filled.
 5596  000056d8  23bdfff8	addi	r29,r29,#-8
 5597  000056dc  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5598  000056e0  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5599  000056e4  afa20000	sw	(r29),r2
 5600  000056e8  200b0070	addi	r11,r0,#112
 5601  000056ec  afab0004	sw	4(r29),r11
 5602  000056f0  0fffe428	jal	_dindex
 5603  000056f4  54000000	nop; not filled.
 5604  000056f8  23bd0008	addi	r29,r29,#8
 5605  000056fc  64210000	snei	r1,r1,#0
 5606  00005700  1420002c	bnez	r1,L190_LF3
 5607  00005704  54000000	nop; not filled.
 5608  00005708  23bdfff8	addi	r29,r29,#-8
 5609  0000570c  afa20000	sw	(r29),r2
 5610  00005710  200b002b	addi	r11,r0,#43
 5611  00005714  afab0004	sw	4(r29),r11
 5612  00005718  0fffe400	jal	_dindex
 5613  0000571c  54000000	nop; not filled.
 5614  00005720  23bd0008	addi	r29,r29,#8
 5615  00005724  64210000	snei	r1,r1,#0
 5616  00005728  10200024	beqz	r1,L189_LF3
 5617  0000572c  54000000	nop; not filled.
 5618  00005730          	L190_LF3:
 5619  00005730  23bdfff8	addi	r29,r29,#-8
 5620  00005734  3c0b0000	lhi	r11,((LC26_LF3)>>16)&0xffff
 5621  00005738  256bf750	addui	r11,r11,(LC26_LF3)&0xffff
 5622  0000573c  afab0000	sw	(r29),r11
 5623  00005740  afaa0004	sw	4(r29),r10
 5624  00005744  0c004a38	jal	_printf
 5625  00005748  54000000	nop; not filled.
 5626  0000574c  23bd0008	addi	r29,r29,#8
 5627  00005750          	L189_LF3:
 5628  00005750  23bdffe8	addi	r29,r29,#-24
 5629  00005754  afaa0000	sw	(r29),r10
 5630  00005758  23c1ff8c	addi	r1,r30,#-116
 5631  0000575c  afa10004	sw	4(r29),r1
 5632  00005760  23c1ff88	addi	r1,r30,#-120
 5633  00005764  afa10008	sw	8(r29),r1
 5634  00005768  23c1ff84	addi	r1,r30,#-124
 5635  0000576c  afa1000c	sw	12(r29),r1
 5636  00005770  23c1ff80	addi	r1,r30,#-128
 5637  00005774  afa10010	sw	16(r29),r1
 5638  00005778  23c1ff7c	addi	r1,r30,#-132
 5639  0000577c  afa10014	sw	20(r29),r1
 5640  00005780  0c0005d0	jal	_ProcessGetCodeInfo
 5641  00005784  54000000	nop; not filled.
 5642  00005788  00014020	add	r8,r0,r1
 5643  0000578c  23bd0018	addi	r29,r29,#24
 5644  00005790  69010000	slti	r1,r8,#0
 5645  00005794  102000bc	beqz	r1,L191_LF3
 5646  00005798  54000000	nop; not filled.
 5647  0000579c  3c030000	lhi	r3,((_freepcbs_LF3)>>16)&0xffff
 5648  000057a0  2463fcf4	addui	r3,r3,(_freepcbs_LF3)&0xffff
 5649  000057a4  208200a4	addi	r2,r4,#164
 5650  000057a8  8c610004	lw	r1,4(r3)
 5651  000057ac  ac8300ac	sw	172(r4),r3
 5652  000057b0  ac8100a8	sw	168(r4),r1
 5653  000057b4  8c2b0000	lw	r11,(r1)
 5654  000057b8  ac4b0000	sw	(r2),r11
 5655  000057bc  ac220000	sw	(r1),r2
 5656  000057c0  8c410000	lw	r1,(r2)
 5657  000057c4  ac220004	sw	4(r1),r2
 5658  000057c8  8c610008	lw	r1,8(r3)
 5659  000057cc  20210001	addi	r1,r1,#1
 5660  000057d0  ac610008	sw	8(r3),r1
 5661  000057d4  20020000	addi	r2,r0,#0
 5662  000057d8  8c8100a0	lw	r1,160(r4)
 5663  000057dc  0041082a	slt	r1,r2,r1
 5664  000057e0  10200038	beqz	r1,L197_LF3
 5665  000057e4  54000000	nop; not filled.
 5666  000057e8  00041820	add	r3,r0,r4
 5667  000057ec          	L199_LF3:
 5668  000057ec  23bdfff8	addi	r29,r29,#-8
 5669  000057f0  8c6b0060	lw	r11,96(r3)
 5670  000057f4  afab0000	sw	(r29),r11
 5671  000057f8  0fffdbc8	jal	_MemoryFreePte
 5672  000057fc  54000000	nop; not filled.
 5673  00005800  23bd0008	addi	r29,r29,#8
 5674  00005804  20630004	addi	r3,r3,#4
 5675  00005808  20420001	addi	r2,r2,#1
 5676  0000580c  8c8100a0	lw	r1,160(r4)
 5677  00005810  0041082a	slt	r1,r2,r1
 5678  00005814  1420ffd4	bnez	r1,L199_LF3
 5679  00005818  54000000	nop; not filled.
 5680  0000581c          	L197_LF3:
 5681  0000581c  23bdfff8	addi	r29,r29,#-8
 5682  00005820  94810008	lhu	r1,8(r4)
 5683  00005824  afa10000	sw	(r29),r1
 5684  00005828  0fffd6cc	jal	_MemoryFreePage
 5685  0000582c  54000000	nop; not filled.
 5686  00005830  23bd0008	addi	r29,r29,#8
 5687  00005834  8c81000c	lw	r1,12(r4)
 5688  00005838  200bffc0	addi	r11,r0,#-64
 5689  0000583c  002b0824	and	r1,r1,r11
 5690  00005840  34210001	ori	r1,r1,#1
 5691  00005844  ac81000c	sw	12(r4),r1
 5692  00005848  2001ffff	addi	r1,r0,#-1
 5693  0000584c  080004c8	j	L224_LF3
 5694  00005850  54000000	nop; not filled.
 5695  00005854          	L191_LF3:
 5696  00005854  23bdfff8	addi	r29,r29,#-8
 5697  00005858  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5698  0000585c  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5699  00005860  afa20000	sw	(r29),r2
 5700  00005864  200b0070	addi	r11,r0,#112
 5701  00005868  afab0004	sw	4(r29),r11
 5702  0000586c  0fffe2ac	jal	_dindex
 5703  00005870  54000000	nop; not filled.
 5704  00005874  23bd0008	addi	r29,r29,#8
 5705  00005878  64210000	snei	r1,r1,#0
 5706  0000587c  1420002c	bnez	r1,L203_LF3
 5707  00005880  54000000	nop; not filled.
 5708  00005884  23bdfff8	addi	r29,r29,#-8
 5709  00005888  afa20000	sw	(r29),r2
 5710  0000588c  200b002b	addi	r11,r0,#43
 5711  00005890  afab0004	sw	4(r29),r11
 5712  00005894  0fffe284	jal	_dindex
 5713  00005898  54000000	nop; not filled.
 5714  0000589c  23bd0008	addi	r29,r29,#8
 5715  000058a0  64210000	snei	r1,r1,#0
 5716  000058a4  1020002c	beqz	r1,L202_LF3
 5717  000058a8  54000000	nop; not filled.
 5718  000058ac          	L203_LF3:
 5719  000058ac  23bdfff0	addi	r29,r29,#-16
 5720  000058b0  3c0b0000	lhi	r11,((LC27_LF3)>>16)&0xffff
 5721  000058b4  256bf764	addui	r11,r11,(LC27_LF3)&0xffff
 5722  000058b8  afab0000	sw	(r29),r11
 5723  000058bc  afaa0004	sw	4(r29),r10
 5724  000058c0  8fcbff8c	lw	r11,-116(r30)
 5725  000058c4  afab0008	sw	8(r29),r11
 5726  000058c8  0c0048b4	jal	_printf
 5727  000058cc  54000000	nop; not filled.
 5728  000058d0  23bd0010	addi	r29,r29,#16
 5729  000058d4          	L202_LF3:
 5730  000058d4  23bdfff8	addi	r29,r29,#-8
 5731  000058d8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5732  000058dc  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5733  000058e0  afa20000	sw	(r29),r2
 5734  000058e4  200b0070	addi	r11,r0,#112
 5735  000058e8  afab0004	sw	4(r29),r11
 5736  000058ec  0fffe22c	jal	_dindex
 5737  000058f0  54000000	nop; not filled.
 5738  000058f4  23bd0008	addi	r29,r29,#8
 5739  000058f8  64210000	snei	r1,r1,#0
 5740  000058fc  1420002c	bnez	r1,L205_LF3
 5741  00005900  54000000	nop; not filled.
 5742  00005904  23bdfff8	addi	r29,r29,#-8
 5743  00005908  afa20000	sw	(r29),r2
 5744  0000590c  200b002b	addi	r11,r0,#43
 5745  00005910  afab0004	sw	4(r29),r11
 5746  00005914  0fffe204	jal	_dindex
 5747  00005918  54000000	nop; not filled.
 5748  0000591c  23bd0008	addi	r29,r29,#8
 5749  00005920  64210000	snei	r1,r1,#0
 5750  00005924  10200034	beqz	r1,L204_LF3
 5751  00005928  54000000	nop; not filled.
 5752  0000592c          	L205_LF3:
 5753  0000592c  23bdfff0	addi	r29,r29,#-16
 5754  00005930  3c0b0000	lhi	r11,((LC28_LF3)>>16)&0xffff
 5755  00005934  256bf780	addui	r11,r11,(LC28_LF3)&0xffff
 5756  00005938  afab0000	sw	(r29),r11
 5757  0000593c  afaa0004	sw	4(r29),r10
 5758  00005940  8fcbff88	lw	r11,-120(r30)
 5759  00005944  afab0008	sw	8(r29),r11
 5760  00005948  8fcbff84	lw	r11,-124(r30)
 5761  0000594c  afab000c	sw	12(r29),r11
 5762  00005950  0c00482c	jal	_printf
 5763  00005954  54000000	nop; not filled.
 5764  00005958  23bd0010	addi	r29,r29,#16
 5765  0000595c          	L204_LF3:
 5766  0000595c  23bdfff8	addi	r29,r29,#-8
 5767  00005960  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5768  00005964  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5769  00005968  afa20000	sw	(r29),r2
 5770  0000596c  200b0070	addi	r11,r0,#112
 5771  00005970  afab0004	sw	4(r29),r11
 5772  00005974  0fffe1a4	jal	_dindex
 5773  00005978  54000000	nop; not filled.
 5774  0000597c  23bd0008	addi	r29,r29,#8
 5775  00005980  64210000	snei	r1,r1,#0
 5776  00005984  1420002c	bnez	r1,L207_LF3
 5777  00005988  54000000	nop; not filled.
 5778  0000598c  23bdfff8	addi	r29,r29,#-8
 5779  00005990  afa20000	sw	(r29),r2
 5780  00005994  200b002b	addi	r11,r0,#43
 5781  00005998  afab0004	sw	4(r29),r11
 5782  0000599c  0fffe17c	jal	_dindex
 5783  000059a0  54000000	nop; not filled.
 5784  000059a4  23bd0008	addi	r29,r29,#8
 5785  000059a8  64210000	snei	r1,r1,#0
 5786  000059ac  10200034	beqz	r1,L206_LF3
 5787  000059b0  54000000	nop; not filled.
 5788  000059b4          	L207_LF3:
 5789  000059b4  23bdfff0	addi	r29,r29,#-16
 5790  000059b8  3c0b0000	lhi	r11,((LC29_LF3)>>16)&0xffff
 5791  000059bc  256bf7a8	addui	r11,r11,(LC29_LF3)&0xffff
 5792  000059c0  afab0000	sw	(r29),r11
 5793  000059c4  afaa0004	sw	4(r29),r10
 5794  000059c8  8fcbff80	lw	r11,-128(r30)
 5795  000059cc  afab0008	sw	8(r29),r11
 5796  000059d0  8fcbff7c	lw	r11,-132(r30)
 5797  000059d4  afab000c	sw	12(r29),r11
 5798  000059d8  0c0047a4	jal	_printf
 5799  000059dc  54000000	nop; not filled.
 5800  000059e0  23bd0010	addi	r29,r29,#16
 5801  000059e4          	L206_LF3:
 5802  000059e4  23c3ff90	addi	r3,r30,#-112
 5803  000059e8  23c9ff78	addi	r9,r30,#-136
 5804  000059ec  3c070000	lhi	r7,((_debugstr)>>16)&0xffff
 5805  000059f0  24e7fc26	addui	r7,r7,(_debugstr)&0xffff
 5806  000059f4          	L208_LF3:
 5807  000059f4  23bdfff0	addi	r29,r29,#-16
 5808  000059f8  afa80000	sw	(r29),r8
 5809  000059fc  afa30004	sw	4(r29),r3
 5810  00005a00  afa90008	sw	8(r29),r9
 5811  00005a04  200b0064	addi	r11,r0,#100
 5812  00005a08  afab000c	sw	12(r29),r11
 5813  00005a0c  0c0007a4	jal	_ProcessGetFromFile
 5814  00005a10  54000000	nop; not filled.
 5815  00005a14  00011020	add	r2,r0,r1
 5816  00005a18  23bd0010	addi	r29,r29,#16
 5817  00005a1c  6c410000	sgti	r1,r2,#0
 5818  00005a20  102000b0	beqz	r1,L209_LF3
 5819  00005a24  54000000	nop; not filled.
 5820  00005a28  23bdfff8	addi	r29,r29,#-8
 5821  00005a2c  afa70000	sw	(r29),r7
 5822  00005a30  200b0070	addi	r11,r0,#112
 5823  00005a34  afab0004	sw	4(r29),r11
 5824  00005a38  0fffe0e0	jal	_dindex
 5825  00005a3c  54000000	nop; not filled.
 5826  00005a40  23bd0008	addi	r29,r29,#8
 5827  00005a44  64210000	snei	r1,r1,#0
 5828  00005a48  1420002c	bnez	r1,L212_LF3
 5829  00005a4c  54000000	nop; not filled.
 5830  00005a50  23bdfff8	addi	r29,r29,#-8
 5831  00005a54  afa70000	sw	(r29),r7
 5832  00005a58  200b002b	addi	r11,r0,#43
 5833  00005a5c  afab0004	sw	4(r29),r11
 5834  00005a60  0fffe0b8	jal	_dindex
 5835  00005a64  54000000	nop; not filled.
 5836  00005a68  23bd0008	addi	r29,r29,#8
 5837  00005a6c  64210000	snei	r1,r1,#0
 5838  00005a70  10200030	beqz	r1,L211_LF3
 5839  00005a74  54000000	nop; not filled.
 5840  00005a78          	L212_LF3:
 5841  00005a78  23bdfff0	addi	r29,r29,#-16
 5842  00005a7c  3c0b0000	lhi	r11,((LC30_LF3)>>16)&0xffff
 5843  00005a80  256bf7d0	addui	r11,r11,(LC30_LF3)&0xffff
 5844  00005a84  afab0000	sw	(r29),r11
 5845  00005a88  afa20004	sw	4(r29),r2
 5846  00005a8c  8fc1ff78	lw	r1,-136(r30)
 5847  00005a90  00220822	sub	r1,r1,r2
 5848  00005a94  afa10008	sw	8(r29),r1
 5849  00005a98  0c0046e4	jal	_printf
 5850  00005a9c  54000000	nop; not filled.
 5851  00005aa0  23bd0010	addi	r29,r29,#16
 5852  00005aa4          	L211_LF3:
 5853  00005aa4  23bdfff0	addi	r29,r29,#-16
 5854  00005aa8  afa40000	sw	(r29),r4
 5855  00005aac  afa30004	sw	4(r29),r3
 5856  00005ab0  8fc1ff78	lw	r1,-136(r30)
 5857  00005ab4  00220822	sub	r1,r1,r2
 5858  00005ab8  afa10008	sw	8(r29),r1
 5859  00005abc  afa2000c	sw	12(r29),r2
 5860  00005ac0  0fffd680	jal	_MemoryCopySystemToUser
 5861  00005ac4  54000000	nop; not filled.
 5862  00005ac8  23bd0010	addi	r29,r29,#16
 5863  00005acc  0bffff24	j	L208_LF3
 5864  00005ad0  54000000	nop; not filled.
 5865  00005ad4          	L209_LF3:
 5866  00005ad4  23bdfff8	addi	r29,r29,#-8
 5867  00005ad8  afa80000	sw	(r29),r8
 5868  00005adc  0fffbd18	jal	_FsClose
 5869  00005ae0  54000000	nop; not filled.
 5870  00005ae4  200b0100	addi	r11,r0,#256
 5871  00005ae8  acab012c	sw	300(r5),r11
 5872  00005aec  240bffe0	addui	r11,r0,#65504
 5873  00005af0  acab009c	sw	156(r5),r11
 5874  00005af4  23bdfff8	addi	r29,r29,#-8
 5875  00005af8  afa40000	sw	(r29),r4
 5876  00005afc  23c10004	addi	r1,r30,#4
 5877  00005b00  afa10004	sw	4(r29),r1
 5878  00005b04  8cab009c	lw	r11,156(r5)
 5879  00005b08  afab0008	sw	8(r29),r11
 5880  00005b0c  200b0004	addi	r11,r0,#4
 5881  00005b10  afab000c	sw	12(r29),r11
 5882  00005b14  0fffd62c	jal	_MemoryCopySystemToUser
 5883  00005b18  54000000	nop; not filled.
 5884  00005b1c  8fcbff8c	lw	r11,-116(r30)
 5885  00005b20  acab0128	sw	296(r5),r11
 5886  00005b24  8c81000c	lw	r1,12(r4)
 5887  00005b28  34210200	ori	r1,r1,#512
 5888  00005b2c  ac81000c	sw	12(r4),r1
 5889  00005b30  23bd0010	addi	r29,r29,#16
 5890  00005b34  0800003c	j	L213_LF3
 5891  00005b38  54000000	nop; not filled.
 5892  00005b3c          	L188_LF3:
 5893  00005b3c  3c0b0000	lhi	r11,((_ProcessExit_LF3)>>16)&0xffff
 5894  00005b40  256b713c	addui	r11,r11,(_ProcessExit_LF3)&0xffff
 5895  00005b44  acab00a4	sw	164(r5),r11
 5896  00005b48  8c810008	lw	r1,8(r4)
 5897  00005b4c  2421ffe0	addui	r1,r1,#65504
 5898  00005b50  aca1009c	sw	156(r5),r1
 5899  00005b54  8fcb0004	lw	r11,4(r30)
 5900  00005b58  ac2b0000	sw	(r1),r11
 5901  00005b5c  aca80128	sw	296(r5),r8
 5902  00005b60  200b0140	addi	r11,r0,#320
 5903  00005b64  acab012c	sw	300(r5),r11
 5904  00005b68  8c81000c	lw	r1,12(r4)
 5905  00005b6c  34210100	ori	r1,r1,#256
 5906  00005b70  ac81000c	sw	12(r4),r1
 5907  00005b74          	L213_LF3:
 5908  00005b74  23bdfff8	addi	r29,r29,#-8
 5909  00005b78  200b000f	addi	r11,r0,#15
 5910  00005b7c  afab0000	sw	(r29),r11
 5911  00005b80  0c0044a8	jal	_SetIntrs
 5912  00005b84  54000000	nop; not filled.
 5913  00005b88  23bd0008	addi	r29,r29,#8
 5914  00005b8c  3c030000	lhi	r3,((_runQueue_LF3)>>16)&0xffff
 5915  00005b90  2463fd00	addui	r3,r3,(_runQueue_LF3)&0xffff
 5916  00005b94  8c620004	lw	r2,4(r3)
 5917  00005b98  acc30008	sw	8(r6),r3
 5918  00005b9c  acc20004	sw	4(r6),r2
 5919  00005ba0  8c4b0000	lw	r11,(r2)
 5920  00005ba4  accb0000	sw	(r6),r11
 5921  00005ba8  ac460000	sw	(r2),r6
 5922  00005bac  8cc20000	lw	r2,(r6)
 5923  00005bb0  ac460004	sw	4(r2),r6
 5924  00005bb4  8c620008	lw	r2,8(r3)
 5925  00005bb8  20420001	addi	r2,r2,#1
 5926  00005bbc  ac620008	sw	8(r3),r2
 5927  00005bc0  23bdfff8	addi	r29,r29,#-8
 5928  00005bc4  afa10000	sw	(r29),r1
 5929  00005bc8  0c004460	jal	_SetIntrs
 5930  00005bcc  54000000	nop; not filled.
 5931  00005bd0  23bd0008	addi	r29,r29,#8
 5932  00005bd4  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 5933  00005bd8  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 5934  00005bdc  8c210000	lw	r1,(r1)
 5935  00005be0  64210000	snei	r1,r1,#0
 5936  00005be4  14200090	bnez	r1,L219_LF3
 5937  00005be8  54000000	nop; not filled.
 5938  00005bec  23bdfff8	addi	r29,r29,#-8
 5939  00005bf0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5940  00005bf4  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5941  00005bf8  afa20000	sw	(r29),r2
 5942  00005bfc  200b0070	addi	r11,r0,#112
 5943  00005c00  afab0004	sw	4(r29),r11
 5944  00005c04  0fffdf14	jal	_dindex
 5945  00005c08  54000000	nop; not filled.
 5946  00005c0c  23bd0008	addi	r29,r29,#8
 5947  00005c10  64210000	snei	r1,r1,#0
 5948  00005c14  1420002c	bnez	r1,L221_LF3
 5949  00005c18  54000000	nop; not filled.
 5950  00005c1c  23bdfff8	addi	r29,r29,#-8
 5951  00005c20  afa20000	sw	(r29),r2
 5952  00005c24  200b002b	addi	r11,r0,#43
 5953  00005c28  afab0004	sw	4(r29),r11
 5954  00005c2c  0fffdeec	jal	_dindex
 5955  00005c30  54000000	nop; not filled.
 5956  00005c34  23bd0008	addi	r29,r29,#8
 5957  00005c38  64210000	snei	r1,r1,#0
 5958  00005c3c  1020002c	beqz	r1,L220_LF3
 5959  00005c40  54000000	nop; not filled.
 5960  00005c44          	L221_LF3:
 5961  00005c44  23bdfff0	addi	r29,r29,#-16
 5962  00005c48  3c0b0000	lhi	r11,((LC31_LF3)>>16)&0xffff
 5963  00005c4c  256bf7f4	addui	r11,r11,(LC31_LF3)&0xffff
 5964  00005c50  afab0000	sw	(r29),r11
 5965  00005c54  afa40004	sw	4(r29),r4
 5966  00005c58  8c8b0000	lw	r11,(r4)
 5967  00005c5c  afab0008	sw	8(r29),r11
 5968  00005c60  0c00451c	jal	_printf
 5969  00005c64  54000000	nop; not filled.
 5970  00005c68  23bd0010	addi	r29,r29,#16
 5971  00005c6c          	L220_LF3:
 5972  00005c6c  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 5973  00005c70  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 5974  00005c74  ac240000	sw	(r1),r4
 5975  00005c78          	L219_LF3:
 5976  00005c78  23bdfff8	addi	r29,r29,#-8
 5977  00005c7c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 5978  00005c80  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 5979  00005c84  afa20000	sw	(r29),r2
 5980  00005c88  200b0070	addi	r11,r0,#112
 5981  00005c8c  afab0004	sw	4(r29),r11
 5982  00005c90  0fffde88	jal	_dindex
 5983  00005c94  54000000	nop; not filled.
 5984  00005c98  23bd0008	addi	r29,r29,#8
 5985  00005c9c  64210000	snei	r1,r1,#0
 5986  00005ca0  1420002c	bnez	r1,L223_LF3
 5987  00005ca4  54000000	nop; not filled.
 5988  00005ca8  23bdfff8	addi	r29,r29,#-8
 5989  00005cac  afa20000	sw	(r29),r2
 5990  00005cb0  200b002b	addi	r11,r0,#43
 5991  00005cb4  afab0004	sw	4(r29),r11
 5992  00005cb8  0fffde60	jal	_dindex
 5993  00005cbc  54000000	nop; not filled.
 5994  00005cc0  23bd0008	addi	r29,r29,#8
 5995  00005cc4  64210000	snei	r1,r1,#0
 5996  00005cc8  10200024	beqz	r1,L222_LF3
 5997  00005ccc  54000000	nop; not filled.
 5998  00005cd0          	L223_LF3:
 5999  00005cd0  23bdfff8	addi	r29,r29,#-8
 6000  00005cd4  3c0b0000	lhi	r11,((LC32_LF3)>>16)&0xffff
 6001  00005cd8  256bf820	addui	r11,r11,(LC32_LF3)&0xffff
 6002  00005cdc  afab0000	sw	(r29),r11
 6003  00005ce0  afaa0004	sw	4(r29),r10
 6004  00005ce4  0c004498	jal	_printf
 6005  00005ce8  54000000	nop; not filled.
 6006  00005cec  23bd0008	addi	r29,r29,#8
 6007  00005cf0          	L222_LF3:
 6008  00005cf0  3c0b0000	lhi	r11,((_pcbs_LF3)>>16)&0xffff
 6009  00005cf4  256bfd24	addui	r11,r11,(_pcbs_LF3)&0xffff
 6010  00005cf8  008b1022	sub	r2,r4,r11
 6011  00005cfc  3c01a4fa	lhi	r1,#-23302
 6012  00005d00  24214fa5	addui	r1,r1,#20389
 6013  00005d04  00400035	movi2fp	f0,r2
 6014  00005d08  00200835	movi2fp	f1,r1
 6015  00005d0c  0401000e	mult	f0,f0,f1
 6016  00005d10  00000834	movfp2i	r1,f0
 6017  00005d14  5c210002	srai	r1,r1,#0x2
 6018  00005d18          	L224_LF3:
 6019  00005d18  8fa20000	lw	r2,0(r29)
 6020  00005d1c  8fa30004	lw	r3,4(r29)
 6021  00005d20  8fa40008	lw	r4,8(r29)
 6022  00005d24  8fa5000c	lw	r5,12(r29)
 6023  00005d28  8fa60010	lw	r6,16(r29)
 6024  00005d2c  8fa70014	lw	r7,20(r29)
 6025  00005d30  8fa80018	lw	r8,24(r29)
 6026  00005d34  8fa9001c	lw	r9,28(r29)
 6027  00005d38  8faa0020	lw	r10,32(r29)
 6028  00005d3c  8fab0024	lw	r11,36(r29)
 6029  00005d40  8fdffff8	lw	r31,-8(r30)
 6030  00005d44  001ee820	add	r29,r0,r30
 6031  00005d48  8fdefffc	lw	r30,-4(r30)
 6032  00005d4c  4be00000	jr	r31
 6033  00005d50  54000000	nop
 6034  00005d54          	.endproc _ProcessFork
 6035  00005d54          	.data
 6036  0000f83a          	.align 2
 6037  0000f83c          	LC33_LF3:
 6038  0000f83c  50726f63	.ascii "ProcessGetCodeInfo: open of %s failed (%d).\n\000"
 6038  0000f840  65737347	
 6038  0000f844  6574436f	
 6038  0000f848  6465496e	
 6038  0000f84c  666f3a20	
 6038  0000f850  6f70656e	
 6038  0000f854  206f6620	
 6038  0000f858  25732066	
 6038  0000f85c  61696c65	
 6038  0000f860  64202825	
 6038  0000f864  64292e0a	
 6038  0000f868  00      	
 6039  0000f869          	.align 2
 6040  0000f86c          	LC34_LF3:
 6041  0000f86c  46696c65	.ascii "File descriptor is now %d.\n\000"
 6041  0000f870  20646573	
 6041  0000f874  63726970	
 6041  0000f878  746f7220	
 6041  0000f87c  6973206e	
 6041  0000f880  6f772025	
 6041  0000f884  642e0a00	
 6042  0000f888          	.align 2
 6043  0000f888          	LC35_LF3:
 6044  0000f888  50726f63	.ascii "ProcessGetCodeInfo: read got %d (not %d) bytes from %s\n\000"
 6044  0000f88c  65737347	
 6044  0000f890  6574436f	
 6044  0000f894  6465496e	
 6044  0000f898  666f3a20	
 6044  0000f89c  72656164	
 6044  0000f8a0  20676f74	
 6044  0000f8a4  20256420	
 6044  0000f8a8  286e6f74	
 6044  0000f8ac  20256429	
 6044  0000f8b0  20627974	
 6044  0000f8b4  65732066	
 6044  0000f8b8  726f6d20	
 6044  0000f8bc  25730a00	
 6045  0000f8c0          	.align 2
 6046  0000f8c0          	LC36_LF3:
 6047  0000f8c0  73746172	.ascii "start:\000"
 6047  0000f8c4  743a00  	
 6048  0000f8c7          	.align 2
 6049  0000f8c8          	LC37_LF3:
 6050  0000f8c8  50726f63	.ascii "ProcessGetCodeInfo: %s missing start line (not a DLX executable?)\n\000"
 6050  0000f8cc  65737347	
 6050  0000f8d0  6574436f	
 6050  0000f8d4  6465496e	
 6050  0000f8d8  666f3a20	
 6050  0000f8dc  2573206d	
 6050  0000f8e0  69737369	
 6050  0000f8e4  6e672073	
 6050  0000f8e8  74617274	
 6050  0000f8ec  206c696e	
 6050  0000f8f0  6520286e	
 6050  0000f8f4  6f742061	
 6050  0000f8f8  20444c58	
 6050  0000f8fc  20657865	
 6050  0000f900  63757461	
 6050  0000f904  626c653f	
 6050  0000f908  290a00  	
 6051  0000f90b          	.text
 6052  00005d54          	.align 2
 6053  00005d54          	.proc _ProcessGetCodeInfo
 6054  00005d54          	.global _ProcessGetCodeInfo
 6055  00005d54          	_ProcessGetCodeInfo:
 6056                      ;  Function 'ProcessGetCodeInfo'; 112 bytes of locals, 11 regs to save.
 6057  00005d54  afbefffc	sw	-4(r29),r30; push fp
 6058  00005d58  001df020	add	r30,r0,r29; fp = sp
 6059  00005d5c  afbffff8	sw	-8(r29),r31; push ret addr
 6060  00005d60  2fbd00a8	subui	r29,r29,#168; alloc local storage
 6061  00005d64  afa20000	sw	0(r29),r2
 6062  00005d68  afa30004	sw	4(r29),r3
 6063  00005d6c  afa40008	sw	8(r29),r4
 6064  00005d70  afa5000c	sw	12(r29),r5
 6065  00005d74  afa60010	sw	16(r29),r6
 6066  00005d78  afa70014	sw	20(r29),r7
 6067  00005d7c  afa80018	sw	24(r29),r8
 6068  00005d80  afa9001c	sw	28(r29),r9
 6069  00005d84  afaa0020	sw	32(r29),r10
 6070  00005d88  afab0024	sw	36(r29),r11
 6071  00005d8c  afac0028	sw	40(r29),r12
 6072  00005d90  8fc60000	lw	r6,(r30)
 6073  00005d94  8fc70004	lw	r7,4(r30)
 6074  00005d98  8fc80008	lw	r8,8(r30)
 6075  00005d9c  8fc9000c	lw	r9,12(r30)
 6076  00005da0  8fca0010	lw	r10,16(r30)
 6077  00005da4  8fcb0014	lw	r11,20(r30)
 6078  00005da8  23bdfff8	addi	r29,r29,#-8
 6079  00005dac  afa60000	sw	(r29),r6
 6080  00005db0  200c0001	addi	r12,r0,#1
 6081  00005db4  afac0004	sw	4(r29),r12
 6082  00005db8  0fffb6e0	jal	_FsOpen
 6083  00005dbc  54000000	nop; not filled.
 6084  00005dc0  00011820	add	r3,r0,r1
 6085  00005dc4  23bd0008	addi	r29,r29,#8
 6086  00005dc8  68610000	slti	r1,r3,#0
 6087  00005dcc  10200088	beqz	r1,L241_LF3
 6088  00005dd0  54000000	nop; not filled.
 6089  00005dd4  23bdfff8	addi	r29,r29,#-8
 6090  00005dd8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6091  00005ddc  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 6092  00005de0  afa20000	sw	(r29),r2
 6093  00005de4  200c0066	addi	r12,r0,#102
 6094  00005de8  afac0004	sw	4(r29),r12
 6095  00005dec  0fffdd2c	jal	_dindex
 6096  00005df0  54000000	nop; not filled.
 6097  00005df4  23bd0008	addi	r29,r29,#8
 6098  00005df8  64210000	snei	r1,r1,#0
 6099  00005dfc  1420002c	bnez	r1,L243_LF3
 6100  00005e00  54000000	nop; not filled.
 6101  00005e04  23bdfff8	addi	r29,r29,#-8
 6102  00005e08  afa20000	sw	(r29),r2
 6103  00005e0c  200c002b	addi	r12,r0,#43
 6104  00005e10  afac0004	sw	4(r29),r12
 6105  00005e14  0fffdd04	jal	_dindex
 6106  00005e18  54000000	nop; not filled.
 6107  00005e1c  23bd0008	addi	r29,r29,#8
 6108  00005e20  64210000	snei	r1,r1,#0
 6109  00005e24  10200224	beqz	r1,L250_LF3
 6110  00005e28  54000000	nop; not filled.
 6111  00005e2c          	L243_LF3:
 6112  00005e2c  23bdfff0	addi	r29,r29,#-16
 6113  00005e30  3c0c0000	lhi	r12,((LC33_LF3)>>16)&0xffff
 6114  00005e34  258cf83c	addui	r12,r12,(LC33_LF3)&0xffff
 6115  00005e38  afac0000	sw	(r29),r12
 6116  00005e3c  afa60004	sw	4(r29),r6
 6117  00005e40  afa30008	sw	8(r29),r3
 6118  00005e44  0c004338	jal	_printf
 6119  00005e48  54000000	nop; not filled.
 6120  00005e4c  23bd0010	addi	r29,r29,#16
 6121  00005e50  080001f8	j	L250_LF3
 6122  00005e54  54000000	nop; not filled.
 6123  00005e58          	L241_LF3:
 6124  00005e58  23bdfff8	addi	r29,r29,#-8
 6125  00005e5c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6126  00005e60  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 6127  00005e64  afa20000	sw	(r29),r2
 6128  00005e68  200c0066	addi	r12,r0,#102
 6129  00005e6c  afac0004	sw	4(r29),r12
 6130  00005e70  0fffdca8	jal	_dindex
 6131  00005e74  54000000	nop; not filled.
 6132  00005e78  23bd0008	addi	r29,r29,#8
 6133  00005e7c  64210000	snei	r1,r1,#0
 6134  00005e80  1420002c	bnez	r1,L245_LF3
 6135  00005e84  54000000	nop; not filled.
 6136  00005e88  23bdfff8	addi	r29,r29,#-8
 6137  00005e8c  afa20000	sw	(r29),r2
 6138  00005e90  200c002b	addi	r12,r0,#43
 6139  00005e94  afac0004	sw	4(r29),r12
 6140  00005e98  0fffdc80	jal	_dindex
 6141  00005e9c  54000000	nop; not filled.
 6142  00005ea0  23bd0008	addi	r29,r29,#8
 6143  00005ea4  64210000	snei	r1,r1,#0
 6144  00005ea8  10200024	beqz	r1,L244_LF3
 6145  00005eac  54000000	nop; not filled.
 6146  00005eb0          	L245_LF3:
 6147  00005eb0  23bdfff8	addi	r29,r29,#-8
 6148  00005eb4  3c0c0000	lhi	r12,((LC34_LF3)>>16)&0xffff
 6149  00005eb8  258cf86c	addui	r12,r12,(LC34_LF3)&0xffff
 6150  00005ebc  afac0000	sw	(r29),r12
 6151  00005ec0  afa30004	sw	4(r29),r3
 6152  00005ec4  0c0042b8	jal	_printf
 6153  00005ec8  54000000	nop; not filled.
 6154  00005ecc  23bd0008	addi	r29,r29,#8
 6155  00005ed0          	L244_LF3:
 6156  00005ed0  23bdfff0	addi	r29,r29,#-16
 6157  00005ed4  afa30000	sw	(r29),r3
 6158  00005ed8  23c4ff90	addi	r4,r30,#-112
 6159  00005edc  afa40004	sw	4(r29),r4
 6160  00005ee0  200c0064	addi	r12,r0,#100
 6161  00005ee4  afac0008	sw	8(r29),r12
 6162  00005ee8  0fffba14	jal	_FsRead
 6163  00005eec  54000000	nop; not filled.
 6164  00005ef0  00012820	add	r5,r0,r1
 6165  00005ef4  23bd0010	addi	r29,r29,#16
 6166  00005ef8  64a10064	snei	r1,r5,#100
 6167  00005efc  102000a8	beqz	r1,L246_LF3
 6168  00005f00  54000000	nop; not filled.
 6169  00005f04  23bdfff8	addi	r29,r29,#-8
 6170  00005f08  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6171  00005f0c  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 6172  00005f10  afa20000	sw	(r29),r2
 6173  00005f14  200c0066	addi	r12,r0,#102
 6174  00005f18  afac0004	sw	4(r29),r12
 6175  00005f1c  0fffdbfc	jal	_dindex
 6176  00005f20  54000000	nop; not filled.
 6177  00005f24  23bd0008	addi	r29,r29,#8
 6178  00005f28  64210000	snei	r1,r1,#0
 6179  00005f2c  1420002c	bnez	r1,L248_LF3
 6180  00005f30  54000000	nop; not filled.
 6181  00005f34  23bdfff8	addi	r29,r29,#-8
 6182  00005f38  afa20000	sw	(r29),r2
 6183  00005f3c  200c002b	addi	r12,r0,#43
 6184  00005f40  afac0004	sw	4(r29),r12
 6185  00005f44  0fffdbd4	jal	_dindex
 6186  00005f48  54000000	nop; not filled.
 6187  00005f4c  23bd0008	addi	r29,r29,#8
 6188  00005f50  64210000	snei	r1,r1,#0
 6189  00005f54  10200030	beqz	r1,L247_LF3
 6190  00005f58  54000000	nop; not filled.
 6191  00005f5c          	L248_LF3:
 6192  00005f5c  23bdfff0	addi	r29,r29,#-16
 6193  00005f60  3c0c0000	lhi	r12,((LC35_LF3)>>16)&0xffff
 6194  00005f64  258cf888	addui	r12,r12,(LC35_LF3)&0xffff
 6195  00005f68  afac0000	sw	(r29),r12
 6196  00005f6c  afa50004	sw	4(r29),r5
 6197  00005f70  200c0064	addi	r12,r0,#100
 6198  00005f74  afac0008	sw	8(r29),r12
 6199  00005f78  afa6000c	sw	12(r29),r6
 6200  00005f7c  0c004200	jal	_printf
 6201  00005f80  54000000	nop; not filled.
 6202  00005f84  23bd0010	addi	r29,r29,#16
 6203  00005f88          	L247_LF3:
 6204  00005f88  23bdfff8	addi	r29,r29,#-8
 6205  00005f8c  afa30000	sw	(r29),r3
 6206  00005f90  0fffb864	jal	_FsClose
 6207  00005f94  54000000	nop; not filled.
 6208  00005f98  2001ffff	addi	r1,r0,#-1
 6209  00005f9c  23bd0008	addi	r29,r29,#8
 6210  00005fa0  080001d0	j	L240_LF3
 6211  00005fa4  54000000	nop; not filled.
 6212  00005fa8          	L246_LF3:
 6213  00005fa8  23bdfff8	addi	r29,r29,#-8
 6214  00005fac  afa40000	sw	(r29),r4
 6215  00005fb0  3c010000	lhi	r1,((LC36_LF3)>>16)&0xffff
 6216  00005fb4  2421f8c0	addui	r1,r1,(LC36_LF3)&0xffff
 6217  00005fb8  afa10004	sw	4(r29),r1
 6218  00005fbc  0fffd944	jal	_dstrstr
 6219  00005fc0  54000000	nop; not filled.
 6220  00005fc4  23bd0008	addi	r29,r29,#8
 6221  00005fc8  64210000	snei	r1,r1,#0
 6222  00005fcc  14200088	bnez	r1,L249_LF3
 6223  00005fd0  54000000	nop; not filled.
 6224  00005fd4  23bdfff8	addi	r29,r29,#-8
 6225  00005fd8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6226  00005fdc  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 6227  00005fe0  afa20000	sw	(r29),r2
 6228  00005fe4  200c0066	addi	r12,r0,#102
 6229  00005fe8  afac0004	sw	4(r29),r12
 6230  00005fec  0fffdb2c	jal	_dindex
 6231  00005ff0  54000000	nop; not filled.
 6232  00005ff4  23bd0008	addi	r29,r29,#8
 6233  00005ff8  64210000	snei	r1,r1,#0
 6234  00005ffc  1420002c	bnez	r1,L251_LF3
 6235  00006000  54000000	nop; not filled.
 6236  00006004  23bdfff8	addi	r29,r29,#-8
 6237  00006008  afa20000	sw	(r29),r2
 6238  0000600c  200c002b	addi	r12,r0,#43
 6239  00006010  afac0004	sw	4(r29),r12
 6240  00006014  0fffdb04	jal	_dindex
 6241  00006018  54000000	nop; not filled.
 6242  0000601c  23bd0008	addi	r29,r29,#8
 6243  00006020  64210000	snei	r1,r1,#0
 6244  00006024  10200024	beqz	r1,L250_LF3
 6245  00006028  54000000	nop; not filled.
 6246  0000602c          	L251_LF3:
 6247  0000602c  23bdfff8	addi	r29,r29,#-8
 6248  00006030  3c0c0000	lhi	r12,((LC37_LF3)>>16)&0xffff
 6249  00006034  258cf8c8	addui	r12,r12,(LC37_LF3)&0xffff
 6250  00006038  afac0000	sw	(r29),r12
 6251  0000603c  afa60004	sw	4(r29),r6
 6252  00006040  0c00413c	jal	_printf
 6253  00006044  54000000	nop; not filled.
 6254  00006048  23bd0008	addi	r29,r29,#8
 6255  0000604c          	L250_LF3:
 6256  0000604c  2001ffff	addi	r1,r0,#-1
 6257  00006050  08000120	j	L240_LF3
 6258  00006054  54000000	nop; not filled.
 6259  00006058          	L249_LF3:
 6260  00006058  23bdfff8	addi	r29,r29,#-8
 6261  0000605c  afa40000	sw	(r29),r4
 6262  00006060  200c003a	addi	r12,r0,#58
 6263  00006064  afac0004	sw	4(r29),r12
 6264  00006068  0fffdab0	jal	_dindex
 6265  0000606c  54000000	nop; not filled.
 6266  00006070  20210001	addi	r1,r1,#1
 6267  00006074  afc1ff8c	sw	-116(r30),r1
 6268  00006078  23bdfff8	addi	r29,r29,#-8
 6269  0000607c  afa10000	sw	(r29),r1
 6270  00006080  23c2ff8c	addi	r2,r30,#-116
 6271  00006084  afa20004	sw	4(r29),r2
 6272  00006088  200c0010	addi	r12,r0,#16
 6273  0000608c  afac0008	sw	8(r29),r12
 6274  00006090  0fffdc10	jal	_dstrtol
 6275  00006094  54000000	nop; not filled.
 6276  00006098  ace10000	sw	(r7),r1
 6277  0000609c  8fccff8c	lw	r12,-116(r30)
 6278  000060a0  afac0000	sw	(r29),r12
 6279  000060a4  afa20004	sw	4(r29),r2
 6280  000060a8  200c0010	addi	r12,r0,#16
 6281  000060ac  afac0008	sw	8(r29),r12
 6282  000060b0  0fffdbf0	jal	_dstrtol
 6283  000060b4  54000000	nop; not filled.
 6284  000060b8  8fccff8c	lw	r12,-116(r30)
 6285  000060bc  afac0000	sw	(r29),r12
 6286  000060c0  afa20004	sw	4(r29),r2
 6287  000060c4  200c0010	addi	r12,r0,#16
 6288  000060c8  afac0008	sw	8(r29),r12
 6289  000060cc  0fffdbd4	jal	_dstrtol
 6290  000060d0  54000000	nop; not filled.
 6291  000060d4  ad010000	sw	(r8),r1
 6292  000060d8  8fccff8c	lw	r12,-116(r30)
 6293  000060dc  afac0000	sw	(r29),r12
 6294  000060e0  afa20004	sw	4(r29),r2
 6295  000060e4  200c0010	addi	r12,r0,#16
 6296  000060e8  afac0008	sw	8(r29),r12
 6297  000060ec  0fffdbb4	jal	_dstrtol
 6298  000060f0  54000000	nop; not filled.
 6299  000060f4  ad210000	sw	(r9),r1
 6300  000060f8  8fccff8c	lw	r12,-116(r30)
 6301  000060fc  afac0000	sw	(r29),r12
 6302  00006100  afa20004	sw	4(r29),r2
 6303  00006104  200c0010	addi	r12,r0,#16
 6304  00006108  afac0008	sw	8(r29),r12
 6305  0000610c  0fffdb94	jal	_dstrtol
 6306  00006110  54000000	nop; not filled.
 6307  00006114  ad410000	sw	(r10),r1
 6308  00006118  8fccff8c	lw	r12,-116(r30)
 6309  0000611c  afac0000	sw	(r29),r12
 6310  00006120  afa20004	sw	4(r29),r2
 6311  00006124  200c0010	addi	r12,r0,#16
 6312  00006128  afac0008	sw	8(r29),r12
 6313  0000612c  0fffdb74	jal	_dstrtol
 6314  00006130  54000000	nop; not filled.
 6315  00006134  ad610000	sw	(r11),r1
 6316  00006138  afa40000	sw	(r29),r4
 6317  0000613c  200c000a	addi	r12,r0,#10
 6318  00006140  afac0004	sw	4(r29),r12
 6319  00006144  0fffd9d4	jal	_dindex
 6320  00006148  54000000	nop; not filled.
 6321  0000614c  23c2ff8f	addi	r2,r30,#-113
 6322  00006150  00220822	sub	r1,r1,r2
 6323  00006154  afa30000	sw	(r29),r3
 6324  00006158  afa10004	sw	4(r29),r1
 6325  0000615c  200c0000	addi	r12,r0,#0
 6326  00006160  afac0008	sw	8(r29),r12
 6327  00006164  0fffb990	jal	_FsSeek
 6328  00006168  54000000	nop; not filled.
 6329  0000616c  00030820	add	r1,r0,r3
 6330  00006170  23bd0010	addi	r29,r29,#16
 6331  00006174          	L240_LF3:
 6332  00006174  8fa20000	lw	r2,0(r29)
 6333  00006178  8fa30004	lw	r3,4(r29)
 6334  0000617c  8fa40008	lw	r4,8(r29)
 6335  00006180  8fa5000c	lw	r5,12(r29)
 6336  00006184  8fa60010	lw	r6,16(r29)
 6337  00006188  8fa70014	lw	r7,20(r29)
 6338  0000618c  8fa80018	lw	r8,24(r29)
 6339  00006190  8fa9001c	lw	r9,28(r29)
 6340  00006194  8faa0020	lw	r10,32(r29)
 6341  00006198  8fab0024	lw	r11,36(r29)
 6342  0000619c  8fac0028	lw	r12,40(r29)
 6343  000061a0  8fdffff8	lw	r31,-8(r30)
 6344  000061a4  001ee820	add	r29,r0,r30
 6345  000061a8  8fdefffc	lw	r30,-4(r30)
 6346  000061ac  4be00000	jr	r31
 6347  000061b0  54000000	nop
 6348  000061b4          	.endproc _ProcessGetCodeInfo
 6349  000061b4          	.data
 6350  0000f90b          	.align 2
 6351  0000f90c          	LC38_LF3:
 6352  0000f90c  476f7420	.ascii "Got %d bytes at offset %d ...\000"
 6352  0000f910  25642062	
 6352  0000f914  79746573	
 6352  0000f918  20617420	
 6352  0000f91c  6f666673	
 6352  0000f920  65742025	
 6352  0000f924  64202e2e	
 6352  0000f928  2e00    	
 6353  0000f92a          	.align 2
 6354  0000f92c          	LC39_LF3:
 6355  0000f92c  20746572	.ascii " terminated at %d.\n\000"
 6355  0000f930  6d696e61	
 6355  0000f934  74656420	
 6355  0000f938  61742025	
 6355  0000f93c  642e0a00	
 6356  0000f940          	.align 2
 6357  0000f940          	LC40_LF3:
 6358  0000f940  42756666	.ascii "Buffer is \'%s\'\n\000"
 6358  0000f944  65722069	
 6358  0000f948  73202725	
 6358  0000f94c  73270a00	
 6359  0000f950          	.align 2
 6360  0000f950          	LC41_LF3:
 6361  0000f950  4e657720	.ascii "New address is 0x%x.\n\000"
 6361  0000f954  61646472	
 6361  0000f958  65737320	
 6361  0000f95c  69732030	
 6361  0000f960  7825782e	
 6361  0000f964  0a00    	
 6362  0000f966          	.align 2
 6363  0000f968          	LC42_LF3:
 6364  0000f968  5365656b	.ascii "Seeking to %d and returning %d bytes!\n\000"
 6364  0000f96c  696e6720	
 6364  0000f970  746f2025	
 6364  0000f974  6420616e	
 6364  0000f978  64207265	
 6364  0000f97c  7475726e	
 6364  0000f980  696e6720	
 6364  0000f984  25642062	
 6364  0000f988  79746573	
 6364  0000f98c  210a00  	
 6365  0000f98f          	.text
 6366  000061b4          	.align 2
 6367  000061b4          	.proc _ProcessGetFromFile
 6368  000061b4          	.global _ProcessGetFromFile
 6369  000061b4          	_ProcessGetFromFile:
 6370                      ;  Function 'ProcessGetFromFile'; 216 bytes of locals, 11 regs to save.
 6371  000061b4  afbefffc	sw	-4(r29),r30; push fp
 6372  000061b8  001df020	add	r30,r0,r29; fp = sp
 6373  000061bc  afbffff8	sw	-8(r29),r31; push ret addr
 6374  000061c0  2fbd0110	subui	r29,r29,#272; alloc local storage
 6375  000061c4  afa20000	sw	0(r29),r2
 6376  000061c8  afa30004	sw	4(r29),r3
 6377  000061cc  afa40008	sw	8(r29),r4
 6378  000061d0  afa5000c	sw	12(r29),r5
 6379  000061d4  afa60010	sw	16(r29),r6
 6380  000061d8  afa70014	sw	20(r29),r7
 6381  000061dc  afa80018	sw	24(r29),r8
 6382  000061e0  afa9001c	sw	28(r29),r9
 6383  000061e4  afaa0020	sw	32(r29),r10
 6384  000061e8  afab0024	sw	36(r29),r11
 6385  000061ec  afac0028	sw	40(r29),r12
 6386  000061f0  8fca0000	lw	r10,(r30)
 6387  000061f4  8fc70008	lw	r7,8(r30)
 6388  000061f8  8fc2000c	lw	r2,12(r30)
 6389  000061fc  8fcb0004	lw	r11,4(r30)
 6390  00006200  23c3ff28	addi	r3,r30,#-216
 6391  00006204  afc3ff24	sw	-220(r30),r3
 6392  00006208  23bdfff0	addi	r29,r29,#-16
 6393  0000620c  afaa0000	sw	(r29),r10
 6394  00006210  200c0000	addi	r12,r0,#0
 6395  00006214  afac0004	sw	4(r29),r12
 6396  00006218  200c0001	addi	r12,r0,#1
 6397  0000621c  afac0008	sw	8(r29),r12
 6398  00006220  0fffb8d4	jal	_FsSeek
 6399  00006224  54000000	nop; not filled.
 6400  00006228  00014820	add	r9,r0,r1
 6401  0000622c  50420001	slli	r2,r2,#0x1
 6402  00006230  23bd0010	addi	r29,r29,#16
 6403  00006234  6c4100c8	sgtui	r1,r2,#200
 6404  00006238  10200008	beqz	r1,L254_LF3
 6405  0000623c  54000000	nop; not filled.
 6406  00006240  200200c8	addi	r2,r0,#200
 6407  00006244          	L254_LF3:
 6408  00006244  23bdfff0	addi	r29,r29,#-16
 6409  00006248  afaa0000	sw	(r29),r10
 6410  0000624c  afa30004	sw	4(r29),r3
 6411  00006250  afa20008	sw	8(r29),r2
 6412  00006254  0fffb6a8	jal	_FsRead
 6413  00006258  54000000	nop; not filled.
 6414  0000625c  00012820	add	r5,r0,r1
 6415  00006260  23bd0010	addi	r29,r29,#16
 6416  00006264  70a10000	slei	r1,r5,#0
 6417  00006268  10200010	beqz	r1,L255_LF3
 6418  0000626c  54000000	nop; not filled.
 6419  00006270  20010000	addi	r1,r0,#0
 6420  00006274  08000594	j	L309_LF3
 6421  00006278  54000000	nop; not filled.
 6422  0000627c          	L255_LF3:
 6423  0000627c  23bdfff8	addi	r29,r29,#-8
 6424  00006280  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6425  00006284  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 6426  00006288  afa20000	sw	(r29),r2
 6427  0000628c  200c0066	addi	r12,r0,#102
 6428  00006290  afac0004	sw	4(r29),r12
 6429  00006294  0fffd884	jal	_dindex
 6430  00006298  54000000	nop; not filled.
 6431  0000629c  23bd0008	addi	r29,r29,#8
 6432  000062a0  64210000	snei	r1,r1,#0
 6433  000062a4  1420002c	bnez	r1,L257_LF3
 6434  000062a8  54000000	nop; not filled.
 6435  000062ac  23bdfff8	addi	r29,r29,#-8
 6436  000062b0  afa20000	sw	(r29),r2
 6437  000062b4  200c002b	addi	r12,r0,#43
 6438  000062b8  afac0004	sw	4(r29),r12
 6439  000062bc  0fffd85c	jal	_dindex
 6440  000062c0  54000000	nop; not filled.
 6441  000062c4  23bd0008	addi	r29,r29,#8
 6442  000062c8  64210000	snei	r1,r1,#0
 6443  000062cc  10200028	beqz	r1,L256_LF3
 6444  000062d0  54000000	nop; not filled.
 6445  000062d4          	L257_LF3:
 6446  000062d4  23bdfff0	addi	r29,r29,#-16
 6447  000062d8  3c0c0000	lhi	r12,((LC38_LF3)>>16)&0xffff
 6448  000062dc  258cf90c	addui	r12,r12,(LC38_LF3)&0xffff
 6449  000062e0  afac0000	sw	(r29),r12
 6450  000062e4  afa50004	sw	4(r29),r5
 6451  000062e8  afa90008	sw	8(r29),r9
 6452  000062ec  0c003e90	jal	_printf
 6453  000062f0  54000000	nop; not filled.
 6454  000062f4  23bd0010	addi	r29,r29,#16
 6455  000062f8          	L256_LF3:
 6456  000062f8  20a5ffff	addi	r5,r5,#-1
 6457  000062fc  23c1ff28	addi	r1,r30,#-216
 6458  00006300  00251020	add	r2,r1,r5
 6459  00006304  0800000c	j	L312_LF3
 6460  00006308  54000000	nop; not filled.
 6461  0000630c          	L258_LF3:
 6462  0000630c  2042ffff	addi	r2,r2,#-1
 6463  00006310  20a5ffff	addi	r5,r5,#-1
 6464  00006314          	L312_LF3:
 6465  00006314  90410000	lbu	r1,(r2)
 6466  00006318  6421000a	snei	r1,r1,#10
 6467  0000631c  1420ffec	bnez	r1,L258_LF3
 6468  00006320  54000000	nop; not filled.
 6469  00006324  23c1ff29	addi	r1,r30,#-215
 6470  00006328  00250820	add	r1,r1,r5
 6471  0000632c  200c005a	addi	r12,r0,(#0x5a)&0xff
 6472  00006330  a02c0000	sb	(r1),r12
 6473  00006334  23c1ff2a	addi	r1,r30,#-214
 6474  00006338  00250820	add	r1,r1,r5
 6475  0000633c  200c0000	addi	r12,r0,(#0x0)&0xff
 6476  00006340  a02c0000	sb	(r1),r12
 6477  00006344  23bdfff8	addi	r29,r29,#-8
 6478  00006348  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6479  0000634c  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 6480  00006350  afa20000	sw	(r29),r2
 6481  00006354  200c0066	addi	r12,r0,#102
 6482  00006358  afac0004	sw	4(r29),r12
 6483  0000635c  0fffd7bc	jal	_dindex
 6484  00006360  54000000	nop; not filled.
 6485  00006364  23bd0008	addi	r29,r29,#8
 6486  00006368  64210000	snei	r1,r1,#0
 6487  0000636c  1420002c	bnez	r1,L263_LF3
 6488  00006370  54000000	nop; not filled.
 6489  00006374  23bdfff8	addi	r29,r29,#-8
 6490  00006378  afa20000	sw	(r29),r2
 6491  0000637c  200c002b	addi	r12,r0,#43
 6492  00006380  afac0004	sw	4(r29),r12
 6493  00006384  0fffd794	jal	_dindex
 6494  00006388  54000000	nop; not filled.
 6495  0000638c  23bd0008	addi	r29,r29,#8
 6496  00006390  64210000	snei	r1,r1,#0
 6497  00006394  10200024	beqz	r1,L262_LF3
 6498  00006398  54000000	nop; not filled.
 6499  0000639c          	L263_LF3:
 6500  0000639c  23bdfff8	addi	r29,r29,#-8
 6501  000063a0  3c0c0000	lhi	r12,((LC39_LF3)>>16)&0xffff
 6502  000063a4  258cf92c	addui	r12,r12,(LC39_LF3)&0xffff
 6503  000063a8  afac0000	sw	(r29),r12
 6504  000063ac  afa50004	sw	4(r29),r5
 6505  000063b0  0c003dcc	jal	_printf
 6506  000063b4  54000000	nop; not filled.
 6507  000063b8  23bd0008	addi	r29,r29,#8
 6508  000063bc          	L262_LF3:
 6509  000063bc  23bdfff8	addi	r29,r29,#-8
 6510  000063c0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6511  000063c4  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 6512  000063c8  afa20000	sw	(r29),r2
 6513  000063cc  200c0066	addi	r12,r0,#102
 6514  000063d0  afac0004	sw	4(r29),r12
 6515  000063d4  0fffd744	jal	_dindex
 6516  000063d8  54000000	nop; not filled.
 6517  000063dc  23bd0008	addi	r29,r29,#8
 6518  000063e0  64210000	snei	r1,r1,#0
 6519  000063e4  1420002c	bnez	r1,L265_LF3
 6520  000063e8  54000000	nop; not filled.
 6521  000063ec  23bdfff8	addi	r29,r29,#-8
 6522  000063f0  afa20000	sw	(r29),r2
 6523  000063f4  200c002b	addi	r12,r0,#43
 6524  000063f8  afac0004	sw	4(r29),r12
 6525  000063fc  0fffd71c	jal	_dindex
 6526  00006400  54000000	nop; not filled.
 6527  00006404  23bd0008	addi	r29,r29,#8
 6528  00006408  64210000	snei	r1,r1,#0
 6529  0000640c  10200028	beqz	r1,L264_LF3
 6530  00006410  54000000	nop; not filled.
 6531  00006414          	L265_LF3:
 6532  00006414  23bdfff8	addi	r29,r29,#-8
 6533  00006418  3c0c0000	lhi	r12,((LC40_LF3)>>16)&0xffff
 6534  0000641c  258cf940	addui	r12,r12,(LC40_LF3)&0xffff
 6535  00006420  afac0000	sw	(r29),r12
 6536  00006424  23c1ff28	addi	r1,r30,#-216
 6537  00006428  afa10004	sw	4(r29),r1
 6538  0000642c  0c003d50	jal	_printf
 6539  00006430  54000000	nop; not filled.
 6540  00006434  23bd0008	addi	r29,r29,#8
 6541  00006438          	L264_LF3:
 6542  00006438  20050000	addi	r5,r0,#0
 6543  0000643c  3c080000	lhi	r8,((_debugstr)>>16)&0xffff
 6544  00006440  2508fc26	addui	r8,r8,(_debugstr)&0xffff
 6545  00006444          	L266_LF3:
 6546  00006444  23bdfff8	addi	r29,r29,#-8
 6547  00006448  8fccff24	lw	r12,-220(r30)
 6548  0000644c  afac0000	sw	(r29),r12
 6549  00006450  200c005a	addi	r12,r0,#90
 6550  00006454  afac0004	sw	4(r29),r12
 6551  00006458  0fffd6c0	jal	_dindex
 6552  0000645c  54000000	nop; not filled.
 6553  00006460  23bd0008	addi	r29,r29,#8
 6554  00006464  64210000	snei	r1,r1,#0
 6555  00006468  102002ec	beqz	r1,L267_LF3
 6556  0000646c  54000000	nop; not filled.
 6557  00006470  23bdfff8	addi	r29,r29,#-8
 6558  00006474  8fccff24	lw	r12,-220(r30)
 6559  00006478  afac0000	sw	(r29),r12
 6560  0000647c  200c003a	addi	r12,r0,#58
 6561  00006480  afac0004	sw	4(r29),r12
 6562  00006484  0fffd694	jal	_dindex
 6563  00006488  54000000	nop; not filled.
 6564  0000648c  23bd0008	addi	r29,r29,#8
 6565  00006490  64210000	snei	r1,r1,#0
 6566  00006494  102002c0	beqz	r1,L267_LF3
 6567  00006498  54000000	nop; not filled.
 6568  0000649c  8fc2ff24	lw	r2,-220(r30)
 6569  000064a0  90410000	lbu	r1,(r2)
 6570  000064a4  6421003a	snei	r1,r1,#58
 6571  000064a8  102000b8	beqz	r1,L311_LF3
 6572  000064ac  54000000	nop; not filled.
 6573  000064b0  6ca10000	sgti	r1,r5,#0
 6574  000064b4  142002a0	bnez	r1,L267_LF3
 6575  000064b8  54000000	nop; not filled.
 6576  000064bc  23bdfff0	addi	r29,r29,#-16
 6577  000064c0  afa20000	sw	(r29),r2
 6578  000064c4  23c1ff24	addi	r1,r30,#-220
 6579  000064c8  afa10004	sw	4(r29),r1
 6580  000064cc  200c0010	addi	r12,r0,#16
 6581  000064d0  afac0008	sw	8(r29),r12
 6582  000064d4  0fffd7cc	jal	_dstrtol
 6583  000064d8  54000000	nop; not filled.
 6584  000064dc  ace10000	sw	(r7),r1
 6585  000064e0  afa80000	sw	(r29),r8
 6586  000064e4  200c0066	addi	r12,r0,#102
 6587  000064e8  afac0004	sw	4(r29),r12
 6588  000064ec  0fffd62c	jal	_dindex
 6589  000064f0  54000000	nop; not filled.
 6590  000064f4  23bd0010	addi	r29,r29,#16
 6591  000064f8  64210000	snei	r1,r1,#0
 6592  000064fc  1420002c	bnez	r1,L273_LF3
 6593  00006500  54000000	nop; not filled.
 6594  00006504  23bdfff8	addi	r29,r29,#-8
 6595  00006508  afa80000	sw	(r29),r8
 6596  0000650c  200c002b	addi	r12,r0,#43
 6597  00006510  afac0004	sw	4(r29),r12
 6598  00006514  0fffd604	jal	_dindex
 6599  00006518  54000000	nop; not filled.
 6600  0000651c  23bd0008	addi	r29,r29,#8
 6601  00006520  64210000	snei	r1,r1,#0
 6602  00006524  10200028	beqz	r1,L270_LF3
 6603  00006528  54000000	nop; not filled.
 6604  0000652c          	L273_LF3:
 6605  0000652c  23bdfff8	addi	r29,r29,#-8
 6606  00006530  3c0c0000	lhi	r12,((LC41_LF3)>>16)&0xffff
 6607  00006534  258cf950	addui	r12,r12,(LC41_LF3)&0xffff
 6608  00006538  afac0000	sw	(r29),r12
 6609  0000653c  8ce10000	lw	r1,(r7)
 6610  00006540  afa10004	sw	4(r29),r1
 6611  00006544  0c003c38	jal	_printf
 6612  00006548  54000000	nop; not filled.
 6613  0000654c  23bd0008	addi	r29,r29,#8
 6614  00006550          	L270_LF3:
 6615  00006550  8fc1ff24	lw	r1,-220(r30)
 6616  00006554  90210000	lbu	r1,(r1)
 6617  00006558  6421003a	snei	r1,r1,#58
 6618  0000655c  142001f8	bnez	r1,L267_LF3
 6619  00006560  54000000	nop; not filled.
 6620  00006564          	L311_LF3:
 6621  00006564  8fc1ff24	lw	r1,-220(r30)
 6622  00006568  20210001	addi	r1,r1,#1
 6623  0000656c  afc1ff24	sw	-220(r30),r1
 6624  00006570  00ab3020	add	r6,r5,r11
 6625  00006574          	L277_LF3:
 6626  00006574  8fc1ff24	lw	r1,-220(r30)
 6627  00006578  08000010	j	L313_LF3
 6628  0000657c  54000000	nop; not filled.
 6629  00006580          	L280_LF3:
 6630  00006580  8fc1ff24	lw	r1,-220(r30)
 6631  00006584  20210001	addi	r1,r1,#1
 6632  00006588  afc1ff24	sw	-220(r30),r1
 6633  0000658c          	L313_LF3:
 6634  0000658c  903f0000	lbu	r31,(r1)
 6635  00006590  63e10020	seqi	r1,r31,#32
 6636  00006594  1420ffe8	bnez	r1,L280_LF3
 6637  00006598  54000000	nop; not filled.
 6638  0000659c  63e10009	seqi	r1,r31,#9
 6639  000065a0  1420ffdc	bnez	r1,L280_LF3
 6640  000065a4  54000000	nop; not filled.
 6641  000065a8  8fc2ff24	lw	r2,-220(r30)
 6642  000065ac  805f0000	lb	r31,(r2)
 6643  000065b0  33e300ff	andi	r3,r31,#0x00ff
 6644  000065b4  6061000a	seqi	r1,r3,#10
 6645  000065b8  10200014	beqz	r1,L282_LF3
 6646  000065bc  54000000	nop; not filled.
 6647  000065c0  20410001	addi	r1,r2,#1
 6648  000065c4  afc1ff24	sw	-220(r30),r1
 6649  000065c8  0bfffe78	j	L266_LF3
 6650  000065cc  54000000	nop; not filled.
 6651  000065d0          	L282_LF3:
 6652  000065d0  20020000	addi	r2,r0,#0
 6653  000065d4  23e1ffd0	addi	r1,r31,#-48
 6654  000065d8  302100ff	andi	r1,r1,#0x00ff
 6655  000065dc  70210009	sleui	r1,r1,#9
 6656  000065e0  14200024	bnez	r1,L288_LF3
 6657  000065e4  54000000	nop; not filled.
 6658  000065e8  23e1ff9f	addi	r1,r31,#-97
 6659  000065ec  302100ff	andi	r1,r1,#0x00ff
 6660  000065f0  70210005	sleui	r1,r1,#5
 6661  000065f4  14200010	bnez	r1,L288_LF3
 6662  000065f8  54000000	nop; not filled.
 6663  000065fc  64610041	snei	r1,r3,#65
 6664  00006600  14200008	bnez	r1,L287_LF3
 6665  00006604  54000000	nop; not filled.
 6666  00006608          	L288_LF3:
 6667  00006608  20020001	addi	r2,r0,#1
 6668  0000660c          	L287_LF3:
 6669  0000660c  64410000	snei	r1,r2,#0
 6670  00006610  1020fe30	beqz	r1,L266_LF3
 6671  00006614  54000000	nop; not filled.
 6672  00006618  8fc1ff24	lw	r1,-220(r30)
 6673  0000661c  80220001	lb	r2,1(r1)
 6674  00006620  20030000	addi	r3,r0,#0
 6675  00006624  2041ffd0	addi	r1,r2,#-48
 6676  00006628  302100ff	andi	r1,r1,#0x00ff
 6677  0000662c  70210009	sleui	r1,r1,#9
 6678  00006630  14200028	bnez	r1,L291_LF3
 6679  00006634  54000000	nop; not filled.
 6680  00006638  2041ff9f	addi	r1,r2,#-97
 6681  0000663c  302100ff	andi	r1,r1,#0x00ff
 6682  00006640  70210005	sleui	r1,r1,#5
 6683  00006644  14200014	bnez	r1,L291_LF3
 6684  00006648  54000000	nop; not filled.
 6685  0000664c  304100ff	andi	r1,r2,#0x00ff
 6686  00006650  64210041	snei	r1,r1,#65
 6687  00006654  14200008	bnez	r1,L290_LF3
 6688  00006658  54000000	nop; not filled.
 6689  0000665c          	L291_LF3:
 6690  0000665c  20030001	addi	r3,r0,#1
 6691  00006660          	L290_LF3:
 6692  00006660  64610000	snei	r1,r3,#0
 6693  00006664  1020fddc	beqz	r1,L266_LF3
 6694  00006668  54000000	nop; not filled.
 6695  0000666c  8fc1ff24	lw	r1,-220(r30)
 6696  00006670  90220000	lbu	r2,(r1)
 6697  00006674  00021820	add	r3,r0,r2
 6698  00006678  205fffd0	addi	r31,r2,#-48
 6699  0000667c  73e10009	sleui	r1,r31,#9
 6700  00006680  10200010	beqz	r1,L293_LF3
 6701  00006684  54000000	nop; not filled.
 6702  00006688  001f2020	add	r4,r0,r31
 6703  0000668c  08000038	j	L292_LF3
 6704  00006690  54000000	nop; not filled.
 6705  00006694          	L293_LF3:
 6706  00006694  2041ff9f	addi	r1,r2,#-97
 6707  00006698  70210005	sleui	r1,r1,#5
 6708  0000669c  10200010	beqz	r1,L295_LF3
 6709  000066a0  54000000	nop; not filled.
 6710  000066a4  2044ffa9	addi	r4,r2,#-87
 6711  000066a8  0800001c	j	L292_LF3
 6712  000066ac  54000000	nop; not filled.
 6713  000066b0          	L295_LF3:
 6714  000066b0  2061ffbf	addi	r1,r3,#-65
 6715  000066b4  70210005	sleui	r1,r1,#5
 6716  000066b8  20040000	addi	r4,r0,#0
 6717  000066bc  10200008	beqz	r1,L292_LF3
 6718  000066c0  54000000	nop; not filled.
 6719  000066c4  2064ffc9	addi	r4,r3,#-55
 6720  000066c8          	L292_LF3:
 6721  000066c8  8fc1ff24	lw	r1,-220(r30)
 6722  000066cc  90220001	lbu	r2,1(r1)
 6723  000066d0  00021820	add	r3,r0,r2
 6724  000066d4  205fffd0	addi	r31,r2,#-48
 6725  000066d8  73e10009	sleui	r1,r31,#9
 6726  000066dc  10200010	beqz	r1,L300_LF3
 6727  000066e0  54000000	nop; not filled.
 6728  000066e4  001f1020	add	r2,r0,r31
 6729  000066e8  08000038	j	L299_LF3
 6730  000066ec  54000000	nop; not filled.
 6731  000066f0          	L300_LF3:
 6732  000066f0  2041ff9f	addi	r1,r2,#-97
 6733  000066f4  70210005	sleui	r1,r1,#5
 6734  000066f8  10200010	beqz	r1,L302_LF3
 6735  000066fc  54000000	nop; not filled.
 6736  00006700  2042ffa9	addi	r2,r2,#-87
 6737  00006704  0800001c	j	L299_LF3
 6738  00006708  54000000	nop; not filled.
 6739  0000670c          	L302_LF3:
 6740  0000670c  2061ffbf	addi	r1,r3,#-65
 6741  00006710  70210005	sleui	r1,r1,#5
 6742  00006714  20020000	addi	r2,r0,#0
 6743  00006718  10200008	beqz	r1,L299_LF3
 6744  0000671c  54000000	nop; not filled.
 6745  00006720  2062ffc9	addi	r2,r3,#-55
 6746  00006724          	L299_LF3:
 6747  00006724  50810004	slli	r1,r4,#0x4
 6748  00006728  00220820	add	r1,r1,r2
 6749  0000672c  a0c10000	sb	(r6),r1
 6750  00006730  20c60001	addi	r6,r6,#1
 6751  00006734  20a50001	addi	r5,r5,#1
 6752  00006738  8fc1ff24	lw	r1,-220(r30)
 6753  0000673c  20210002	addi	r1,r1,#2
 6754  00006740  afc1ff24	sw	-220(r30),r1
 6755  00006744  8ce10000	lw	r1,(r7)
 6756  00006748  20210001	addi	r1,r1,#1
 6757  0000674c  ace10000	sw	(r7),r1
 6758  00006750  0bfffe20	j	L277_LF3
 6759  00006754  54000000	nop; not filled.
 6760  00006758          	L267_LF3:
 6761  00006758  23bdfff0	addi	r29,r29,#-16
 6762  0000675c  afaa0000	sw	(r29),r10
 6763  00006760  8fc1ff24	lw	r1,-220(r30)
 6764  00006764  00290820	add	r1,r1,r9
 6765  00006768  23c3ff28	addi	r3,r30,#-216
 6766  0000676c  00230822	sub	r1,r1,r3
 6767  00006770  afa10004	sw	4(r29),r1
 6768  00006774  200c0000	addi	r12,r0,#0
 6769  00006778  afac0008	sw	8(r29),r12
 6770  0000677c  0fffb378	jal	_FsSeek
 6771  00006780  54000000	nop; not filled.
 6772  00006784  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 6773  00006788  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 6774  0000678c  afa20000	sw	(r29),r2
 6775  00006790  200c0066	addi	r12,r0,#102
 6776  00006794  afac0004	sw	4(r29),r12
 6777  00006798  0fffd380	jal	_dindex
 6778  0000679c  54000000	nop; not filled.
 6779  000067a0  23bd0010	addi	r29,r29,#16
 6780  000067a4  64210000	snei	r1,r1,#0
 6781  000067a8  1420002c	bnez	r1,L308_LF3
 6782  000067ac  54000000	nop; not filled.
 6783  000067b0  23bdfff8	addi	r29,r29,#-8
 6784  000067b4  afa20000	sw	(r29),r2
 6785  000067b8  200c002b	addi	r12,r0,#43
 6786  000067bc  afac0004	sw	4(r29),r12
 6787  000067c0  0fffd358	jal	_dindex
 6788  000067c4  54000000	nop; not filled.
 6789  000067c8  23bd0008	addi	r29,r29,#8
 6790  000067cc  64210000	snei	r1,r1,#0
 6791  000067d0  10200034	beqz	r1,L307_LF3
 6792  000067d4  54000000	nop; not filled.
 6793  000067d8          	L308_LF3:
 6794  000067d8  23bdfff0	addi	r29,r29,#-16
 6795  000067dc  3c0c0000	lhi	r12,((LC42_LF3)>>16)&0xffff
 6796  000067e0  258cf968	addui	r12,r12,(LC42_LF3)&0xffff
 6797  000067e4  afac0000	sw	(r29),r12
 6798  000067e8  8fc1ff24	lw	r1,-220(r30)
 6799  000067ec  00290820	add	r1,r1,r9
 6800  000067f0  00230822	sub	r1,r1,r3
 6801  000067f4  afa10004	sw	4(r29),r1
 6802  000067f8  afa50008	sw	8(r29),r5
 6803  000067fc  0c003980	jal	_printf
 6804  00006800  54000000	nop; not filled.
 6805  00006804  23bd0010	addi	r29,r29,#16
 6806  00006808          	L307_LF3:
 6807  00006808  00050820	add	r1,r0,r5
 6808  0000680c          	L309_LF3:
 6809  0000680c  8fa20000	lw	r2,0(r29)
 6810  00006810  8fa30004	lw	r3,4(r29)
 6811  00006814  8fa40008	lw	r4,8(r29)
 6812  00006818  8fa5000c	lw	r5,12(r29)
 6813  0000681c  8fa60010	lw	r6,16(r29)
 6814  00006820  8fa70014	lw	r7,20(r29)
 6815  00006824  8fa80018	lw	r8,24(r29)
 6816  00006828  8fa9001c	lw	r9,28(r29)
 6817  0000682c  8faa0020	lw	r10,32(r29)
 6818  00006830  8fab0024	lw	r11,36(r29)
 6819  00006834  8fac0028	lw	r12,40(r29)
 6820  00006838  8fdffff8	lw	r31,-8(r30)
 6821  0000683c  001ee820	add	r29,r0,r30
 6822  00006840  8fdefffc	lw	r30,-4(r30)
 6823  00006844  4be00000	jr	r31
 6824  00006848  54000000	nop
 6825  0000684c          	.endproc _ProcessGetFromFile
 6826  0000684c          	.data
 6827  0000f98f          	.align 2
 6828  0000f990          	LC43_LF3:
 6829  0000f990  476f7420	.ascii "Got %d arguments.\n\000"
 6829  0000f994  25642061	
 6829  0000f998  7267756d	
 6829  0000f99c  656e7473	
 6829  0000f9a0  2e0a00  	
 6830  0000f9a3          	.align 2
 6831  0000f9a4          	LC44_LF3:
 6832  0000f9a4  41766169	.ascii "Available memory: 0x%x -> 0x%x.\n\000"
 6832  0000f9a8  6c61626c	
 6832  0000f9ac  65206d65	
 6832  0000f9b0  6d6f7279	
 6832  0000f9b4  3a203078	
 6832  0000f9b8  2578202d	
 6832  0000f9bc  3e203078	
 6832  0000f9c0  25782e0a	
 6832  0000f9c4  00      	
 6833  0000f9c5          	.align 2
 6834  0000f9c8          	LC45_LF3:
 6835  0000f9c8  41726775	.ascii "Argument count is %d.\n\000"
 6835  0000f9cc  6d656e74	
 6835  0000f9d0  20636f75	
 6835  0000f9d4  6e742069	
 6835  0000f9d8  73202564	
 6835  0000f9dc  2e0a00  	
 6836  0000f9df          	.align 2
 6837  0000f9e0          	LC46_LF3:
 6838  0000f9e0  41726775	.ascii "Argument %d is %s.\n\000"
 6838  0000f9e4  6d656e74	
 6838  0000f9e8  20256420	
 6838  0000f9ec  69732025	
 6838  0000f9f0  732e0a00	
 6839  0000f9f4          	.align 2
 6840  0000f9f4          	LC47_LF3:
 6841  0000f9f4  436f6e76	.ascii "Converted %s to %d=%s\n\000"
 6841  0000f9f8  65727465	
 6841  0000f9fc  64202573	
 6841  0000fa00  20746f20	
 6841  0000fa04  25643d25	
 6841  0000fa08  730a00  	
 6842  0000fa0b          	_buf62_LF3:
 6843  0000fa0b          	.space 200
 6844  0000fad3          	.align 2
 6845  0000fad4          	LC48_LF3:
 6846  0000fad4  25303878	.ascii "%08x: %02x%02x%02x%02x\n\000"
 6846  0000fad8  3a202530	
 6846  0000fadc  32782530	
 6846  0000fae0  32782530	
 6846  0000fae4  32782530	
 6846  0000fae8  32780a00	
 6847  0000faec          	.align 2
 6848  0000faec          	LC49_LF3:
 6849  0000faec  4f707469	.ascii "Option %s not recognized.\n\000"
 6849  0000faf0  6f6e2025	
 6849  0000faf4  73206e6f	
 6849  0000faf8  74207265	
 6849  0000fafc  636f676e	
 6849  0000fb00  697a6564	
 6849  0000fb04  2e0a00  	
 6850  0000fb07          	.align 2
 6851  0000fb08          	LC50_LF3:
 6852  0000fb08  41626f75	.ascii "About to initialize queues.\n\000"
 6852  0000fb0c  7420746f	
 6852  0000fb10  20696e69	
 6852  0000fb14  7469616c	
 6852  0000fb18  697a6520	
 6852  0000fb1c  71756575	
 6852  0000fb20  65732e0a	
 6852  0000fb24  00      	
 6853  0000fb25          	.align 2
 6854  0000fb28          	LC51_LF3:
 6855  0000fb28  41667465	.ascii "After initializing queues.\n\000"
 6855  0000fb2c  7220696e	
 6855  0000fb30  69746961	
 6855  0000fb34  6c697a69	
 6855  0000fb38  6e672071	
 6855  0000fb3c  75657565	
 6855  0000fb40  732e0a00	
 6856  0000fb44          	.align 2
 6857  0000fb44          	LC52_LF3:
 6858  0000fb44  41667465	.ascii "After initializing memory.\n\000"
 6858  0000fb48  7220696e	
 6858  0000fb4c  69746961	
 6858  0000fb50  6c697a69	
 6858  0000fb54  6e67206d	
 6858  0000fb58  656d6f72	
 6858  0000fb5c  792e0a00	
 6859  0000fb60          	.align 2
 6860  0000fb60          	LC53_LF3:
 6861  0000fb60  41667465	.ascii "After initializing processes.\n\000"
 6861  0000fb64  7220696e	
 6861  0000fb68  69746961	
 6861  0000fb6c  6c697a69	
 6861  0000fb70  6e672070	
 6861  0000fb74  726f6365	
 6861  0000fb78  73736573	
 6861  0000fb7c  2e0a00  	
 6862  0000fb7f          	.align 2
 6863  0000fb80          	LC54_LF3:
 6864  0000fb80  41667465	.ascii "After initializing keyboard.\n\000"
 6864  0000fb84  7220696e	
 6864  0000fb88  69746961	
 6864  0000fb8c  6c697a69	
 6864  0000fb90  6e67206b	
 6864  0000fb94  6579626f	
 6864  0000fb98  6172642e	
 6864  0000fb9c  0a00    	
 6865  0000fb9e          	.align 2
 6866  0000fba0          	LC55_LF3:
 6867  0000fba0  766d00  	.ascii "vm\000"
 6868  0000fba3          	.align 2
 6869  0000fba4          	LC56_LF3:
 6870  0000fba4  564d2044	.ascii "VM Descriptor is %d\n\000"
 6870  0000fba8  65736372	
 6870  0000fbac  6970746f	
 6870  0000fbb0  72206973	
 6870  0000fbb4  2025640a	
 6870  0000fbb8  00      	
 6871  0000fbb9          	.align 2
 6872  0000fbbc          	LC57_LF3:
 6873  0000fbbc  43726561	.ascii "Created processes - about to set timer quantum.\n\000"
 6873  0000fbc0  74656420	
 6873  0000fbc4  70726f63	
 6873  0000fbc8  65737365	
 6873  0000fbcc  73202d20	
 6873  0000fbd0  61626f75	
 6873  0000fbd4  7420746f	
 6873  0000fbd8  20736574	
 6873  0000fbdc  2074696d	
 6873  0000fbe0  65722071	
 6873  0000fbe4  75616e74	
 6873  0000fbe8  756d2e0a	
 6873  0000fbec  00      	
 6874  0000fbed          	.align 2
 6875  0000fbf0          	LC58_LF3:
 6876  0000fbf0  53657420	.ascii "Set timer quantum to %d, about to run first process.\n\000"
 6876  0000fbf4  74696d65	
 6876  0000fbf8  72207175	
 6876  0000fbfc  616e7475	
 6876  0000fc00  6d20746f	
 6876  0000fc04  2025642c	
 6876  0000fc08  2061626f	
 6876  0000fc0c  75742074	
 6876  0000fc10  6f207275	
 6876  0000fc14  6e206669	
 6876  0000fc18  72737420	
 6876  0000fc1c  70726f63	
 6876  0000fc20  6573732e	
 6876  0000fc24  0a00    	
 6877  0000fc26          	.text
 6878  0000684c          	.align 2
 6879  0000684c          	.proc _main
 6880  0000684c          	.global _main
 6881  0000684c          	_main:
 6882                      ;  Function 'main'; 144 bytes of locals, 0 regs to save.
 6883  0000684c  afbefffc	sw	-4(r29),r30; push fp
 6884  00006850  001df020	add	r30,r0,r29; fp = sp
 6885  00006854  afbffff8	sw	-8(r29),r31; push ret addr
 6886  00006858  2fbd0098	subui	r29,r29,#152; alloc local storage
 6887  0000685c  8fcc0000	lw	r12,(r30)
 6888  00006860  0c003884	jal	___main
 6889  00006864  54000000	nop; not filled.
 6890  00006868  20100000	addi	r16,r0,#0
 6891  0000686c  3c010000	lhi	r1,((_debugstr)>>16)&0xffff
 6892  00006870  2421fc26	addui	r1,r1,(_debugstr)&0xffff
 6893  00006874  20130000	addi	r19,r0,(#0x0)&0xff
 6894  00006878  a0330000	sb	(r1),r19
 6895  0000687c  23bdfff8	addi	r29,r29,#-8
 6896  00006880  3c130000	lhi	r19,((LC43_LF3)>>16)&0xffff
 6897  00006884  2673f990	addui	r19,r19,(LC43_LF3)&0xffff
 6898  00006888  afb30000	sw	(r29),r19
 6899  0000688c  afac0004	sw	4(r29),r12
 6900  00006890  0c0038ec	jal	_printf
 6901  00006894  54000000	nop; not filled.
 6902  00006898  0fffbe74	jal	_MemoryGetSize
 6903  0000689c  54000000	nop; not filled.
 6904  000068a0  23bdfff8	addi	r29,r29,#-8
 6905  000068a4  3c130000	lhi	r19,((LC44_LF3)>>16)&0xffff
 6906  000068a8  2673f9a4	addui	r19,r19,(LC44_LF3)&0xffff
 6907  000068ac  afb30000	sw	(r29),r19
 6908  000068b0  3c020001	lhi	r2,((_lastosaddress)>>16)&0xffff
 6909  000068b4  244231a0	addui	r2,r2,(_lastosaddress)&0xffff
 6910  000068b8  8c420000	lw	r2,(r2)
 6911  000068bc  afa20004	sw	4(r29),r2
 6912  000068c0  afa10008	sw	8(r29),r1
 6913  000068c4  0c0038b8	jal	_printf
 6914  000068c8  54000000	nop; not filled.
 6915  000068cc  3c130000	lhi	r19,((LC45_LF3)>>16)&0xffff
 6916  000068d0  2673f9c8	addui	r19,r19,(LC45_LF3)&0xffff
 6917  000068d4  afb30000	sw	(r29),r19
 6918  000068d8  afac0004	sw	4(r29),r12
 6919  000068dc  0c0038a0	jal	_printf
 6920  000068e0  54000000	nop; not filled.
 6921  000068e4  20090000	addi	r9,r0,#0
 6922  000068e8  23bd0010	addi	r29,r29,#16
 6923  000068ec  020c082a	slt	r1,r16,r12
 6924  000068f0  10200044	beqz	r1,L316_LF3
 6925  000068f4  54000000	nop; not filled.
 6926  000068f8  8fc20004	lw	r2,4(r30)
 6927  000068fc          	L318_LF3:
 6928  000068fc  23bdfff0	addi	r29,r29,#-16
 6929  00006900  3c130000	lhi	r19,((LC46_LF3)>>16)&0xffff
 6930  00006904  2673f9e0	addui	r19,r19,(LC46_LF3)&0xffff
 6931  00006908  afb30000	sw	(r29),r19
 6932  0000690c  afa90004	sw	4(r29),r9
 6933  00006910  8c530000	lw	r19,(r2)
 6934  00006914  afb30008	sw	8(r29),r19
 6935  00006918  0c003864	jal	_printf
 6936  0000691c  54000000	nop; not filled.
 6937  00006920  23bd0010	addi	r29,r29,#16
 6938  00006924  20420004	addi	r2,r2,#4
 6939  00006928  21290001	addi	r9,r9,#1
 6940  0000692c  012c082a	slt	r1,r9,r12
 6941  00006930  1420ffc8	bnez	r1,L318_LF3
 6942  00006934  54000000	nop; not filled.
 6943  00006938          	L316_LF3:
 6944  00006938  0fffb848	jal	_FsModuleInit
 6945  0000693c  54000000	nop; not filled.
 6946  00006940  20090000	addi	r9,r0,#0
 6947  00006944  012c082a	slt	r1,r9,r12
 6948  00006948  1020032c	beqz	r1,L321_LF3
 6949  0000694c  54000000	nop; not filled.
 6950  00006950  23cdff80	addi	r13,r30,#-128
 6951  00006954  23ceff68	addi	r14,r30,#-152
 6952  00006958  3c0f0000	lhi	r15,((_buf62_LF3)>>16)&0xffff
 6953  0000695c  25effa0b	addui	r15,r15,(_buf62_LF3)&0xffff
 6954  00006960  21f20001	addi	r18,r15,#1
 6955  00006964  21f10002	addi	r17,r15,#2
 6956  00006968  8fc80004	lw	r8,4(r30)
 6957  0000696c          	L323_LF3:
 6958  0000696c  8d020000	lw	r2,(r8)
 6959  00006970  90410000	lbu	r1,(r2)
 6960  00006974  6021002d	seqi	r1,r1,#45
 6961  00006978  102002e8	beqz	r1,L322_LF3
 6962  0000697c  54000000	nop; not filled.
 6963  00006980  90420001	lbu	r2,1(r2)
 6964  00006984  60410066	seqi	r1,r2,#102
 6965  00006988  142000e0	bnez	r1,L328_LF3
 6966  0000698c  54000000	nop; not filled.
 6967  00006990  6c410066	sgti	r1,r2,#102
 6968  00006994  14200018	bnez	r1,L340_LF3
 6969  00006998  54000000	nop; not filled.
 6970  0000699c  60410044	seqi	r1,r2,#68
 6971  000069a0  1020029c	beqz	r1,L338_LF3
 6972  000069a4  54000000	nop; not filled.
 6973  000069a8  08000024	j	L326_LF3
 6974  000069ac  54000000	nop; not filled.
 6975  000069b0          	L340_LF3:
 6976  000069b0  60410069	seqi	r1,r2,#105
 6977  000069b4  14200048	bnez	r1,L327_LF3
 6978  000069b8  54000000	nop; not filled.
 6979  000069bc  60410075	seqi	r1,r2,#117
 6980  000069c0  1020027c	beqz	r1,L338_LF3
 6981  000069c4  54000000	nop; not filled.
 6982  000069c8  08000260	j	L337_LF3
 6983  000069cc  54000000	nop; not filled.
 6984  000069d0          	L326_LF3:
 6985  000069d0  23bdfff8	addi	r29,r29,#-8
 6986  000069d4  3c130000	lhi	r19,((_debugstr)>>16)&0xffff
 6987  000069d8  2673fc26	addui	r19,r19,(_debugstr)&0xffff
 6988  000069dc  afb30000	sw	(r29),r19
 6989  000069e0  21080004	addi	r8,r8,#4
 6990  000069e4  21290001	addi	r9,r9,#1
 6991  000069e8  8d010000	lw	r1,(r8)
 6992  000069ec  afa10004	sw	4(r29),r1
 6993  000069f0  0fffcc68	jal	_dstrcpy
 6994  000069f4  54000000	nop; not filled.
 6995  000069f8  08000264	j	L364_LF3
 6996  000069fc  54000000	nop; not filled.
 6997  00006a00          	L327_LF3:
 6998  00006a00  23bdfff0	addi	r29,r29,#-16
 6999  00006a04  21080004	addi	r8,r8,#4
 7000  00006a08  21290001	addi	r9,r9,#1
 7001  00006a0c  8d130000	lw	r19,(r8)
 7002  00006a10  afb30000	sw	(r29),r19
 7003  00006a14  20130000	addi	r19,r0,#0
 7004  00006a18  afb30004	sw	4(r29),r19
 7005  00006a1c  afb30008	sw	8(r29),r19
 7006  00006a20  0fffd280	jal	_dstrtol
 7007  00006a24  54000000	nop; not filled.
 7008  00006a28  00011820	add	r3,r0,r1
 7009  00006a2c  afa10000	sw	(r29),r1
 7010  00006a30  afad0004	sw	4(r29),r13
 7011  00006a34  0fffd160	jal	_ditoa
 7012  00006a38  54000000	nop; not filled.
 7013  00006a3c  3c130000	lhi	r19,((LC47_LF3)>>16)&0xffff
 7014  00006a40  2673f9f4	addui	r19,r19,(LC47_LF3)&0xffff
 7015  00006a44  afb30000	sw	(r29),r19
 7016  00006a48  8d010000	lw	r1,(r8)
 7017  00006a4c  afa10004	sw	4(r29),r1
 7018  00006a50  afa30008	sw	8(r29),r3
 7019  00006a54  afad000c	sw	12(r29),r13
 7020  00006a58  0c003724	jal	_printf
 7021  00006a5c  54000000	nop; not filled.
 7022  00006a60  23bd0010	addi	r29,r29,#16
 7023  00006a64  080001fc	j	L322_LF3
 7024  00006a68  54000000	nop; not filled.
 7025  00006a6c          	L328_LF3:
 7026  00006a6c  20130000	addi	r19,r0,#0
 7027  00006a70  afd3ff68	sw	-152(r30),r19
 7028  00006a74  23bdffe8	addi	r29,r29,#-24
 7029  00006a78  21080004	addi	r8,r8,#4
 7030  00006a7c  21290001	addi	r9,r9,#1
 7031  00006a80  8d130000	lw	r19,(r8)
 7032  00006a84  afb30000	sw	(r29),r19
 7033  00006a88  23c1ff7c	addi	r1,r30,#-132
 7034  00006a8c  afa10004	sw	4(r29),r1
 7035  00006a90  23c1ff78	addi	r1,r30,#-136
 7036  00006a94  afa10008	sw	8(r29),r1
 7037  00006a98  23c1ff74	addi	r1,r30,#-140
 7038  00006a9c  afa1000c	sw	12(r29),r1
 7039  00006aa0  23c1ff70	addi	r1,r30,#-144
 7040  00006aa4  afa10010	sw	16(r29),r1
 7041  00006aa8  23c1ff6c	addi	r1,r30,#-148
 7042  00006aac  afa10014	sw	20(r29),r1
 7043  00006ab0  0ffff2a0	jal	_ProcessGetCodeInfo
 7044  00006ab4  54000000	nop; not filled.
 7045  00006ab8  00015020	add	r10,r0,r1
 7046  00006abc  3c130000	lhi	r19,((LC27_LF3)>>16)&0xffff
 7047  00006ac0  2673f764	addui	r19,r19,(LC27_LF3)&0xffff
 7048  00006ac4  afb30000	sw	(r29),r19
 7049  00006ac8  8d010000	lw	r1,(r8)
 7050  00006acc  afa10004	sw	4(r29),r1
 7051  00006ad0  8fd3ff7c	lw	r19,-132(r30)
 7052  00006ad4  afb30008	sw	8(r29),r19
 7053  00006ad8  0c0036a4	jal	_printf
 7054  00006adc  54000000	nop; not filled.
 7055  00006ae0  3c130000	lhi	r19,((LC28_LF3)>>16)&0xffff
 7056  00006ae4  2673f780	addui	r19,r19,(LC28_LF3)&0xffff
 7057  00006ae8  afb30000	sw	(r29),r19
 7058  00006aec  8d010000	lw	r1,(r8)
 7059  00006af0  afa10004	sw	4(r29),r1
 7060  00006af4  8fd3ff78	lw	r19,-136(r30)
 7061  00006af8  afb30008	sw	8(r29),r19
 7062  00006afc  8fd3ff74	lw	r19,-140(r30)
 7063  00006b00  afb3000c	sw	12(r29),r19
 7064  00006b04  0c003678	jal	_printf
 7065  00006b08  54000000	nop; not filled.
 7066  00006b0c  3c130000	lhi	r19,((LC29_LF3)>>16)&0xffff
 7067  00006b10  2673f7a8	addui	r19,r19,(LC29_LF3)&0xffff
 7068  00006b14  afb30000	sw	(r29),r19
 7069  00006b18  8d010000	lw	r1,(r8)
 7070  00006b1c  afa10004	sw	4(r29),r1
 7071  00006b20  8fd3ff70	lw	r19,-144(r30)
 7072  00006b24  afb30008	sw	8(r29),r19
 7073  00006b28  8fd3ff6c	lw	r19,-148(r30)
 7074  00006b2c  afb3000c	sw	12(r29),r19
 7075  00006b30  0c00364c	jal	_printf
 7076  00006b34  54000000	nop; not filled.
 7077  00006b38  23bd0018	addi	r29,r29,#24
 7078  00006b3c  3c0b0000	lhi	r11,((_buf62_LF3+3)>>16)&0xffff
 7079  00006b40  256bfa0e	addui	r11,r11,(_buf62_LF3+3)&0xffff
 7080  00006b44          	L329_LF3:
 7081  00006b44  23bdfff0	addi	r29,r29,#-16
 7082  00006b48  afaa0000	sw	(r29),r10
 7083  00006b4c  3c130000	lhi	r19,((_buf62_LF3)>>16)&0xffff
 7084  00006b50  2673fa0b	addui	r19,r19,(_buf62_LF3)&0xffff
 7085  00006b54  afb30004	sw	4(r29),r19
 7086  00006b58  afae0008	sw	8(r29),r14
 7087  00006b5c  201300c8	addi	r19,r0,#200
 7088  00006b60  afb3000c	sw	12(r29),r19
 7089  00006b64  0ffff64c	jal	_ProcessGetFromFile
 7090  00006b68  54000000	nop; not filled.
 7091  00006b6c  00011820	add	r3,r0,r1
 7092  00006b70  23bd0010	addi	r29,r29,#16
 7093  00006b74  6c610000	sgti	r1,r3,#0
 7094  00006b78  10200098	beqz	r1,L330_LF3
 7095  00006b7c  54000000	nop; not filled.
 7096  00006b80  20020000	addi	r2,r0,#0
 7097  00006b84  0043082a	slt	r1,r2,r3
 7098  00006b88  1020ffb8	beqz	r1,L329_LF3
 7099  00006b8c  54000000	nop; not filled.
 7100  00006b90  000b3820	add	r7,r0,r11
 7101  00006b94  00113020	add	r6,r0,r17
 7102  00006b98  00122820	add	r5,r0,r18
 7103  00006b9c  000f2020	add	r4,r0,r15
 7104  00006ba0          	L335_LF3:
 7105  00006ba0  23bdffe8	addi	r29,r29,#-24
 7106  00006ba4  3c130000	lhi	r19,((LC48_LF3)>>16)&0xffff
 7107  00006ba8  2673fad4	addui	r19,r19,(LC48_LF3)&0xffff
 7108  00006bac  afb30000	sw	(r29),r19
 7109  00006bb0  8fc1ff68	lw	r1,-152(r30)
 7110  00006bb4  00220820	add	r1,r1,r2
 7111  00006bb8  00230822	sub	r1,r1,r3
 7112  00006bbc  afa10004	sw	4(r29),r1
 7113  00006bc0  90810000	lbu	r1,(r4)
 7114  00006bc4  afa10008	sw	8(r29),r1
 7115  00006bc8  90a10000	lbu	r1,(r5)
 7116  00006bcc  afa1000c	sw	12(r29),r1
 7117  00006bd0  90c10000	lbu	r1,(r6)
 7118  00006bd4  afa10010	sw	16(r29),r1
 7119  00006bd8  90e10000	lbu	r1,(r7)
 7120  00006bdc  afa10014	sw	20(r29),r1
 7121  00006be0  0c00359c	jal	_printf
 7122  00006be4  54000000	nop; not filled.
 7123  00006be8  23bd0018	addi	r29,r29,#24
 7124  00006bec  20e70004	addi	r7,r7,#4
 7125  00006bf0  20c60004	addi	r6,r6,#4
 7126  00006bf4  20a50004	addi	r5,r5,#4
 7127  00006bf8  20840004	addi	r4,r4,#4
 7128  00006bfc  20420004	addi	r2,r2,#4
 7129  00006c00  0043082a	slt	r1,r2,r3
 7130  00006c04  1420ff98	bnez	r1,L335_LF3
 7131  00006c08  54000000	nop; not filled.
 7132  00006c0c  0bffff34	j	L329_LF3
 7133  00006c10  54000000	nop; not filled.
 7134  00006c14          	L330_LF3:
 7135  00006c14  23bdfff8	addi	r29,r29,#-8
 7136  00006c18  afaa0000	sw	(r29),r10
 7137  00006c1c  0c0034dc	jal	_close
 7138  00006c20  54000000	nop; not filled.
 7139  00006c24  08000038	j	L364_LF3
 7140  00006c28  54000000	nop; not filled.
 7141  00006c2c          	L337_LF3:
 7142  00006c2c  21080004	addi	r8,r8,#4
 7143  00006c30  21290001	addi	r9,r9,#1
 7144  00006c34  8d100000	lw	r16,(r8)
 7145  00006c38  08000028	j	L322_LF3
 7146  00006c3c  54000000	nop; not filled.
 7147  00006c40          	L338_LF3:
 7148  00006c40  23bdfff8	addi	r29,r29,#-8
 7149  00006c44  3c130000	lhi	r19,((LC49_LF3)>>16)&0xffff
 7150  00006c48  2673faec	addui	r19,r19,(LC49_LF3)&0xffff
 7151  00006c4c  afb30000	sw	(r29),r19
 7152  00006c50  8d010000	lw	r1,(r8)
 7153  00006c54  afa10004	sw	4(r29),r1
 7154  00006c58  0c003524	jal	_printf
 7155  00006c5c  54000000	nop; not filled.
 7156  00006c60          	L364_LF3:
 7157  00006c60  23bd0008	addi	r29,r29,#8
 7158  00006c64          	L322_LF3:
 7159  00006c64  21080004	addi	r8,r8,#4
 7160  00006c68  21290001	addi	r9,r9,#1
 7161  00006c6c  012c082a	slt	r1,r9,r12
 7162  00006c70  1420fcf8	bnez	r1,L323_LF3
 7163  00006c74  54000000	nop; not filled.
 7164  00006c78          	L321_LF3:
 7165  00006c78  23bdfff8	addi	r29,r29,#-8
 7166  00006c7c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7167  00006c80  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 7168  00006c84  afa20000	sw	(r29),r2
 7169  00006c88  20130069	addi	r19,r0,#105
 7170  00006c8c  afb30004	sw	4(r29),r19
 7171  00006c90  0fffce88	jal	_dindex
 7172  00006c94  54000000	nop; not filled.
 7173  00006c98  23bd0008	addi	r29,r29,#8
 7174  00006c9c  64210000	snei	r1,r1,#0
 7175  00006ca0  1420002c	bnez	r1,L343_LF3
 7176  00006ca4  54000000	nop; not filled.
 7177  00006ca8  23bdfff8	addi	r29,r29,#-8
 7178  00006cac  afa20000	sw	(r29),r2
 7179  00006cb0  2013002b	addi	r19,r0,#43
 7180  00006cb4  afb30004	sw	4(r29),r19
 7181  00006cb8  0fffce60	jal	_dindex
 7182  00006cbc  54000000	nop; not filled.
 7183  00006cc0  23bd0008	addi	r29,r29,#8
 7184  00006cc4  64210000	snei	r1,r1,#0
 7185  00006cc8  10200020	beqz	r1,L342_LF3
 7186  00006ccc  54000000	nop; not filled.
 7187  00006cd0          	L343_LF3:
 7188  00006cd0  23bdfff8	addi	r29,r29,#-8
 7189  00006cd4  3c130000	lhi	r19,((LC50_LF3)>>16)&0xffff
 7190  00006cd8  2673fb08	addui	r19,r19,(LC50_LF3)&0xffff
 7191  00006cdc  afb30000	sw	(r29),r19
 7192  00006ce0  0c00349c	jal	_printf
 7193  00006ce4  54000000	nop; not filled.
 7194  00006ce8  23bd0008	addi	r29,r29,#8
 7195  00006cec          	L342_LF3:
 7196  00006cec  0c000914	jal	_QueueModuleInit
 7197  00006cf0  54000000	nop; not filled.
 7198  00006cf4  23bdfff8	addi	r29,r29,#-8
 7199  00006cf8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7200  00006cfc  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 7201  00006d00  afa20000	sw	(r29),r2
 7202  00006d04  20130069	addi	r19,r0,#105
 7203  00006d08  afb30004	sw	4(r29),r19
 7204  00006d0c  0fffce0c	jal	_dindex
 7205  00006d10  54000000	nop; not filled.
 7206  00006d14  23bd0008	addi	r29,r29,#8
 7207  00006d18  64210000	snei	r1,r1,#0
 7208  00006d1c  1420002c	bnez	r1,L345_LF3
 7209  00006d20  54000000	nop; not filled.
 7210  00006d24  23bdfff8	addi	r29,r29,#-8
 7211  00006d28  afa20000	sw	(r29),r2
 7212  00006d2c  2013002b	addi	r19,r0,#43
 7213  00006d30  afb30004	sw	4(r29),r19
 7214  00006d34  0fffcde4	jal	_dindex
 7215  00006d38  54000000	nop; not filled.
 7216  00006d3c  23bd0008	addi	r29,r29,#8
 7217  00006d40  64210000	snei	r1,r1,#0
 7218  00006d44  10200020	beqz	r1,L344_LF3
 7219  00006d48  54000000	nop; not filled.
 7220  00006d4c          	L345_LF3:
 7221  00006d4c  23bdfff8	addi	r29,r29,#-8
 7222  00006d50  3c130000	lhi	r19,((LC51_LF3)>>16)&0xffff
 7223  00006d54  2673fb28	addui	r19,r19,(LC51_LF3)&0xffff
 7224  00006d58  afb30000	sw	(r29),r19
 7225  00006d5c  0c003420	jal	_printf
 7226  00006d60  54000000	nop; not filled.
 7227  00006d64  23bd0008	addi	r29,r29,#8
 7228  00006d68          	L344_LF3:
 7229  00006d68  0fffbb04	jal	_MemoryModuleInit
 7230  00006d6c  54000000	nop; not filled.
 7231  00006d70  23bdfff8	addi	r29,r29,#-8
 7232  00006d74  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7233  00006d78  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 7234  00006d7c  afa20000	sw	(r29),r2
 7235  00006d80  20130069	addi	r19,r0,#105
 7236  00006d84  afb30004	sw	4(r29),r19
 7237  00006d88  0fffcd90	jal	_dindex
 7238  00006d8c  54000000	nop; not filled.
 7239  00006d90  23bd0008	addi	r29,r29,#8
 7240  00006d94  64210000	snei	r1,r1,#0
 7241  00006d98  1420002c	bnez	r1,L347_LF3
 7242  00006d9c  54000000	nop; not filled.
 7243  00006da0  23bdfff8	addi	r29,r29,#-8
 7244  00006da4  afa20000	sw	(r29),r2
 7245  00006da8  2013002b	addi	r19,r0,#43
 7246  00006dac  afb30004	sw	4(r29),r19
 7247  00006db0  0fffcd68	jal	_dindex
 7248  00006db4  54000000	nop; not filled.
 7249  00006db8  23bd0008	addi	r29,r29,#8
 7250  00006dbc  64210000	snei	r1,r1,#0
 7251  00006dc0  10200020	beqz	r1,L346_LF3
 7252  00006dc4  54000000	nop; not filled.
 7253  00006dc8          	L347_LF3:
 7254  00006dc8  23bdfff8	addi	r29,r29,#-8
 7255  00006dcc  3c130000	lhi	r19,((LC52_LF3)>>16)&0xffff
 7256  00006dd0  2673fb44	addui	r19,r19,(LC52_LF3)&0xffff
 7257  00006dd4  afb30000	sw	(r29),r19
 7258  00006dd8  0c0033a4	jal	_printf
 7259  00006ddc  54000000	nop; not filled.
 7260  00006de0  23bd0008	addi	r29,r29,#8
 7261  00006de4          	L346_LF3:
 7262  00006de4  0fffd668	jal	_ProcessModuleInit
 7263  00006de8  54000000	nop; not filled.
 7264  00006dec  23bdfff8	addi	r29,r29,#-8
 7265  00006df0  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7266  00006df4  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 7267  00006df8  afa20000	sw	(r29),r2
 7268  00006dfc  20130069	addi	r19,r0,#105
 7269  00006e00  afb30004	sw	4(r29),r19
 7270  00006e04  0fffcd14	jal	_dindex
 7271  00006e08  54000000	nop; not filled.
 7272  00006e0c  23bd0008	addi	r29,r29,#8
 7273  00006e10  64210000	snei	r1,r1,#0
 7274  00006e14  1420002c	bnez	r1,L349_LF3
 7275  00006e18  54000000	nop; not filled.
 7276  00006e1c  23bdfff8	addi	r29,r29,#-8
 7277  00006e20  afa20000	sw	(r29),r2
 7278  00006e24  2013002b	addi	r19,r0,#43
 7279  00006e28  afb30004	sw	4(r29),r19
 7280  00006e2c  0fffccec	jal	_dindex
 7281  00006e30  54000000	nop; not filled.
 7282  00006e34  23bd0008	addi	r29,r29,#8
 7283  00006e38  64210000	snei	r1,r1,#0
 7284  00006e3c  10200020	beqz	r1,L348_LF3
 7285  00006e40  54000000	nop; not filled.
 7286  00006e44          	L349_LF3:
 7287  00006e44  23bdfff8	addi	r29,r29,#-8
 7288  00006e48  3c130000	lhi	r19,((LC53_LF3)>>16)&0xffff
 7289  00006e4c  2673fb60	addui	r19,r19,(LC53_LF3)&0xffff
 7290  00006e50  afb30000	sw	(r29),r19
 7291  00006e54  0c003328	jal	_printf
 7292  00006e58  54000000	nop; not filled.
 7293  00006e5c  23bd0008	addi	r29,r29,#8
 7294  00006e60          	L348_LF3:
 7295  00006e60  0c0019c0	jal	_KbdModuleInit
 7296  00006e64  54000000	nop; not filled.
 7297  00006e68  23bdfff8	addi	r29,r29,#-8
 7298  00006e6c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7299  00006e70  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 7300  00006e74  afa20000	sw	(r29),r2
 7301  00006e78  20130069	addi	r19,r0,#105
 7302  00006e7c  afb30004	sw	4(r29),r19
 7303  00006e80  0fffcc98	jal	_dindex
 7304  00006e84  54000000	nop; not filled.
 7305  00006e88  23bd0008	addi	r29,r29,#8
 7306  00006e8c  64210000	snei	r1,r1,#0
 7307  00006e90  1420002c	bnez	r1,L351_LF3
 7308  00006e94  54000000	nop; not filled.
 7309  00006e98  23bdfff8	addi	r29,r29,#-8
 7310  00006e9c  afa20000	sw	(r29),r2
 7311  00006ea0  2013002b	addi	r19,r0,#43
 7312  00006ea4  afb30004	sw	4(r29),r19
 7313  00006ea8  0fffcc70	jal	_dindex
 7314  00006eac  54000000	nop; not filled.
 7315  00006eb0  23bd0008	addi	r29,r29,#8
 7316  00006eb4  64210000	snei	r1,r1,#0
 7317  00006eb8  10200020	beqz	r1,L350_LF3
 7318  00006ebc  54000000	nop; not filled.
 7319  00006ec0          	L351_LF3:
 7320  00006ec0  23bdfff8	addi	r29,r29,#-8
 7321  00006ec4  3c130000	lhi	r19,((LC54_LF3)>>16)&0xffff
 7322  00006ec8  2673fb80	addui	r19,r19,(LC54_LF3)&0xffff
 7323  00006ecc  afb30000	sw	(r29),r19
 7324  00006ed0  0c0032ac	jal	_printf
 7325  00006ed4  54000000	nop; not filled.
 7326  00006ed8  23bd0008	addi	r29,r29,#8
 7327  00006edc          	L350_LF3:
 7328  00006edc  23c2ff80	addi	r2,r30,#-128
 7329  00006ee0  23c3ffe3	addi	r3,r30,#-29
 7330  00006ee4          	L355_LF3:
 7331  00006ee4  20130061	addi	r19,r0,(#0x61)&0xff
 7332  00006ee8  a0530000	sb	(r2),r19
 7333  00006eec  20420001	addi	r2,r2,#1
 7334  00006ef0  0043082c	sle	r1,r2,r3
 7335  00006ef4  1420ffec	bnez	r1,L355_LF3
 7336  00006ef8  54000000	nop; not filled.
 7337  00006efc  23bdfff8	addi	r29,r29,#-8
 7338  00006f00  3c130000	lhi	r19,((LC55_LF3)>>16)&0xffff
 7339  00006f04  2673fba0	addui	r19,r19,(LC55_LF3)&0xffff
 7340  00006f08  afb30000	sw	(r29),r19
 7341  00006f0c  20130002	addi	r19,r0,#2
 7342  00006f10  afb30004	sw	4(r29),r19
 7343  00006f14  0fffa584	jal	_FsOpen
 7344  00006f18  54000000	nop; not filled.
 7345  00006f1c  00014820	add	r9,r0,r1
 7346  00006f20  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7347  00006f24  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 7348  00006f28  afa20000	sw	(r29),r2
 7349  00006f2c  20130069	addi	r19,r0,#105
 7350  00006f30  afb30004	sw	4(r29),r19
 7351  00006f34  0fffcbe4	jal	_dindex
 7352  00006f38  54000000	nop; not filled.
 7353  00006f3c  23bd0008	addi	r29,r29,#8
 7354  00006f40  64210000	snei	r1,r1,#0
 7355  00006f44  1420002c	bnez	r1,L358_LF3
 7356  00006f48  54000000	nop; not filled.
 7357  00006f4c  23bdfff8	addi	r29,r29,#-8
 7358  00006f50  afa20000	sw	(r29),r2
 7359  00006f54  2013002b	addi	r19,r0,#43
 7360  00006f58  afb30004	sw	4(r29),r19
 7361  00006f5c  0fffcbbc	jal	_dindex
 7362  00006f60  54000000	nop; not filled.
 7363  00006f64  23bd0008	addi	r29,r29,#8
 7364  00006f68  64210000	snei	r1,r1,#0
 7365  00006f6c  10200024	beqz	r1,L357_LF3
 7366  00006f70  54000000	nop; not filled.
 7367  00006f74          	L358_LF3:
 7368  00006f74  23bdfff8	addi	r29,r29,#-8
 7369  00006f78  3c130000	lhi	r19,((LC56_LF3)>>16)&0xffff
 7370  00006f7c  2673fba4	addui	r19,r19,(LC56_LF3)&0xffff
 7371  00006f80  afb30000	sw	(r29),r19
 7372  00006f84  afa90004	sw	4(r29),r9
 7373  00006f88  0c0031f4	jal	_printf
 7374  00006f8c  54000000	nop; not filled.
 7375  00006f90  23bd0008	addi	r29,r29,#8
 7376  00006f94          	L357_LF3:
 7377  00006f94  23bdfff0	addi	r29,r29,#-16
 7378  00006f98  afa90000	sw	(r29),r9
 7379  00006f9c  20130000	addi	r19,r0,#0
 7380  00006fa0  afb30004	sw	4(r29),r19
 7381  00006fa4  afb30008	sw	8(r29),r19
 7382  00006fa8  0fffab4c	jal	_FsSeek
 7383  00006fac  54000000	nop; not filled.
 7384  00006fb0  afa90000	sw	(r29),r9
 7385  00006fb4  23c1ff80	addi	r1,r30,#-128
 7386  00006fb8  afa10004	sw	4(r29),r1
 7387  00006fbc  20130050	addi	r19,r0,#80
 7388  00006fc0  afb30008	sw	8(r29),r19
 7389  00006fc4  0fffaa34	jal	_FsWrite
 7390  00006fc8  54000000	nop; not filled.
 7391  00006fcc  afa90000	sw	(r29),r9
 7392  00006fd0  0fffa824	jal	_FsClose
 7393  00006fd4  54000000	nop; not filled.
 7394  00006fd8  23bd0010	addi	r29,r29,#16
 7395  00006fdc  66010000	snei	r1,r16,#0
 7396  00006fe0  10200030	beqz	r1,L359_LF3
 7397  00006fe4  54000000	nop; not filled.
 7398  00006fe8  23bdfff0	addi	r29,r29,#-16
 7399  00006fec  20130000	addi	r19,r0,#0
 7400  00006ff0  afb30000	sw	(r29),r19
 7401  00006ff4  20131234	addi	r19,r0,#4660
 7402  00006ff8  afb30004	sw	4(r29),r19
 7403  00006ffc  afb00008	sw	8(r29),r16
 7404  00007000  20130001	addi	r19,r0,#1
 7405  00007004  afb3000c	sw	12(r29),r19
 7406  00007008  0fffe1b0	jal	_ProcessFork
 7407  0000700c  54000000	nop; not filled.
 7408  00007010  23bd0010	addi	r29,r29,#16
 7409  00007014          	L359_LF3:
 7410  00007014  0c002d00	jal	_SysprocCreateProcesses
 7411  00007018  54000000	nop; not filled.
 7412  0000701c  23bdfff8	addi	r29,r29,#-8
 7413  00007020  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7414  00007024  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 7415  00007028  afa20000	sw	(r29),r2
 7416  0000702c  20130069	addi	r19,r0,#105
 7417  00007030  afb30004	sw	4(r29),r19
 7418  00007034  0fffcae4	jal	_dindex
 7419  00007038  54000000	nop; not filled.
 7420  0000703c  23bd0008	addi	r29,r29,#8
 7421  00007040  64210000	snei	r1,r1,#0
 7422  00007044  1420002c	bnez	r1,L361_LF3
 7423  00007048  54000000	nop; not filled.
 7424  0000704c  23bdfff8	addi	r29,r29,#-8
 7425  00007050  afa20000	sw	(r29),r2
 7426  00007054  2013002b	addi	r19,r0,#43
 7427  00007058  afb30004	sw	4(r29),r19
 7428  0000705c  0fffcabc	jal	_dindex
 7429  00007060  54000000	nop; not filled.
 7430  00007064  23bd0008	addi	r29,r29,#8
 7431  00007068  64210000	snei	r1,r1,#0
 7432  0000706c  10200020	beqz	r1,L360_LF3
 7433  00007070  54000000	nop; not filled.
 7434  00007074          	L361_LF3:
 7435  00007074  23bdfff8	addi	r29,r29,#-8
 7436  00007078  3c130000	lhi	r19,((LC57_LF3)>>16)&0xffff
 7437  0000707c  2673fbbc	addui	r19,r19,(LC57_LF3)&0xffff
 7438  00007080  afb30000	sw	(r29),r19
 7439  00007084  0c0030f8	jal	_printf
 7440  00007088  54000000	nop; not filled.
 7441  0000708c  23bd0008	addi	r29,r29,#8
 7442  00007090          	L360_LF3:
 7443  00007090  23bdfff8	addi	r29,r29,#-8
 7444  00007094  3c030000	lhi	r3,((_processQuantum_LF3)>>16)&0xffff
 7445  00007098  2463f3b4	addui	r3,r3,(_processQuantum_LF3)&0xffff
 7446  0000709c  8c730000	lw	r19,(r3)
 7447  000070a0  afb30000	sw	(r29),r19
 7448  000070a4  0c001748	jal	_TimerSet
 7449  000070a8  54000000	nop; not filled.
 7450  000070ac  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 7451  000070b0  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 7452  000070b4  afa20000	sw	(r29),r2
 7453  000070b8  20130069	addi	r19,r0,#105
 7454  000070bc  afb30004	sw	4(r29),r19
 7455  000070c0  0fffca58	jal	_dindex
 7456  000070c4  54000000	nop; not filled.
 7457  000070c8  23bd0008	addi	r29,r29,#8
 7458  000070cc  64210000	snei	r1,r1,#0
 7459  000070d0  1420002c	bnez	r1,L363_LF3
 7460  000070d4  54000000	nop; not filled.
 7461  000070d8  23bdfff8	addi	r29,r29,#-8
 7462  000070dc  afa20000	sw	(r29),r2
 7463  000070e0  2013002b	addi	r19,r0,#43
 7464  000070e4  afb30004	sw	4(r29),r19
 7465  000070e8  0fffca30	jal	_dindex
 7466  000070ec  54000000	nop; not filled.
 7467  000070f0  23bd0008	addi	r29,r29,#8
 7468  000070f4  64210000	snei	r1,r1,#0
 7469  000070f8  10200028	beqz	r1,L362_LF3
 7470  000070fc  54000000	nop; not filled.
 7471  00007100          	L363_LF3:
 7472  00007100  23bdfff8	addi	r29,r29,#-8
 7473  00007104  3c130000	lhi	r19,((LC58_LF3)>>16)&0xffff
 7474  00007108  2673fbf0	addui	r19,r19,(LC58_LF3)&0xffff
 7475  0000710c  afb30000	sw	(r29),r19
 7476  00007110  8c610000	lw	r1,(r3)
 7477  00007114  afa10004	sw	4(r29),r1
 7478  00007118  0c003064	jal	_printf
 7479  0000711c  54000000	nop; not filled.
 7480  00007120  23bd0008	addi	r29,r29,#8
 7481  00007124          	L362_LF3:
 7482  00007124  0c002de4	jal	_intrreturn
 7483  00007128  54000000	nop; not filled.
 7484  0000712c  0c003038	jal	_exitsim
 7485  00007130  54000000	nop; not filled.
 7486  00007134  0c00303c	jal	_exit
 7487  00007138  54000000	nop
 7488  0000713c          	.endproc _main
 7489  0000713c          	.data
 7490  0000fc26          	.global _debugstr
 7491  0000fc26          	_debugstr:
 7492  0000fc26          	.space 200
 7493  0000fcee          	.align 2
 7494  0000fcf0          	.global _currentPCB
 7495  0000fcf0          	_currentPCB:
 7496  0000fcf0          	.space 4
 7497  0000fcf4          	.align 2
 7498  0000fcf4          	_freepcbs_LF3:
 7499  0000fcf4          	.space 12
 7500  0000fd00          	.align 2
 7501  0000fd00          	_runQueue_LF3:
 7502  0000fd00          	.space 12
 7503  0000fd0c          	.align 2
 7504  0000fd0c          	_waitQueue_LF3:
 7505  0000fd0c          	.space 12
 7506  0000fd18          	.align 2
 7507  0000fd18          	_zombieQueue_LF3:
 7508  0000fd18          	.space 12
 7509  0000fd24          	.align 2
 7510  0000fd24          	_pcbs_LF3:
 7511  0000fd24          	.space 5760
 7512  000113a4          	.text
 7513  0000713c          	.align 2
 7514  0000713c          	.proc _ProcessExit_LF3
 7515  0000713c          	_ProcessExit_LF3:
 7516                      ;  Function 'ProcessExit'; 0 bytes of locals, 0 regs to save.
 7517  0000713c  afbefffc	sw	-4(r29),r30; push fp
 7518  00007140  001df020	add	r30,r0,r29; fp = sp
 7519  00007144  afbffff8	sw	-8(r29),r31; push ret addr
 7520  00007148  2fbd0008	subui	r29,r29,#8; alloc local storage
 7521  0000714c  0c003024	jal	_exit
 7522  00007150  54000000	nop; not filled.
 7523  00007154  8fdffff8	lw	r31,-8(r30)
 7524  00007158  001ee820	add	r29,r0,r30
 7525  0000715c  8fdefffc	lw	r30,-4(r30)
 7526  00007160  4be00000	jr	r31
 7527  00007164  54000000	nop
 7528  00007168          	.endproc _ProcessExit_LF3
 7529                      ; Compiled by GCC
 7531  00007168          	.align 2
 7532  00007168          	.proc _isspace
 7533  00007168          	.global _isspace
 7534  00007168          	_isspace:
 7535                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 7536  00007168  afbefffc	sw	-4(r29),r30; push fp
 7537  0000716c  001df020	add	r30,r0,r29; fp = sp
 7538  00007170  afbffff8	sw	-8(r29),r31; push ret addr
 7539  00007174  2fbd0010	subui	r29,r29,#16; alloc local storage
 7540  00007178  afa20000	sw	0(r29),r2
 7541  0000717c  83c20003	lb	r2,3(r30)
 7542  00007180  201f0000	addi	r31,r0,#0
 7543  00007184  304100ff	andi	r1,r2,#0x00ff
 7544  00007188  60210020	seqi	r1,r1,#32
 7545  0000718c  14200018	bnez	r1,L6_LF4
 7546  00007190  54000000	nop; not filled.
 7547  00007194  2041fff7	addi	r1,r2,#-9
 7548  00007198  302100ff	andi	r1,r1,#0x00ff
 7549  0000719c  70210001	sleui	r1,r1,#1
 7550  000071a0  10200008	beqz	r1,L5_LF4
 7551  000071a4  54000000	nop; not filled.
 7552  000071a8          	L6_LF4:
 7553  000071a8  201f0001	addi	r31,r0,#1
 7554  000071ac          	L5_LF4:
 7555  000071ac  001f0820	add	r1,r0,r31
 7556  000071b0  8fa20000	lw	r2,0(r29)
 7557  000071b4  8fdffff8	lw	r31,-8(r30)
 7558  000071b8  001ee820	add	r29,r0,r30
 7559  000071bc  8fdefffc	lw	r30,-4(r30)
 7560  000071c0  4be00000	jr	r31
 7561  000071c4  54000000	nop
 7562  000071c8          	.endproc _isspace
 7563  000071c8          	.align 2
 7564  000071c8          	.proc _isxdigit
 7565  000071c8          	.global _isxdigit
 7566  000071c8          	_isxdigit:
 7567                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 7568  000071c8  afbefffc	sw	-4(r29),r30; push fp
 7569  000071cc  001df020	add	r30,r0,r29; fp = sp
 7570  000071d0  afbffff8	sw	-8(r29),r31; push ret addr
 7571  000071d4  2fbd0010	subui	r29,r29,#16; alloc local storage
 7572  000071d8  afa20000	sw	0(r29),r2
 7573  000071dc  83df0003	lb	r31,3(r30)
 7574  000071e0  20020000	addi	r2,r0,#0
 7575  000071e4  23e1ffd0	addi	r1,r31,#-48
 7576  000071e8  302100ff	andi	r1,r1,#0x00ff
 7577  000071ec  70210009	sleui	r1,r1,#9
 7578  000071f0  14200028	bnez	r1,L12_LF4
 7579  000071f4  54000000	nop; not filled.
 7580  000071f8  23e1ff9f	addi	r1,r31,#-97
 7581  000071fc  302100ff	andi	r1,r1,#0x00ff
 7582  00007200  70210005	sleui	r1,r1,#5
 7583  00007204  14200014	bnez	r1,L12_LF4
 7584  00007208  54000000	nop; not filled.
 7585  0000720c  33e100ff	andi	r1,r31,#0x00ff
 7586  00007210  64210041	snei	r1,r1,#65
 7587  00007214  14200008	bnez	r1,L11_LF4
 7588  00007218  54000000	nop; not filled.
 7589  0000721c          	L12_LF4:
 7590  0000721c  20020001	addi	r2,r0,#1
 7591  00007220          	L11_LF4:
 7592  00007220  00020820	add	r1,r0,r2
 7593  00007224  8fa20000	lw	r2,0(r29)
 7594  00007228  8fdffff8	lw	r31,-8(r30)
 7595  0000722c  001ee820	add	r29,r0,r30
 7596  00007230  8fdefffc	lw	r30,-4(r30)
 7597  00007234  4be00000	jr	r31
 7598  00007238  54000000	nop
 7599  0000723c          	.endproc _isxdigit
 7600  0000723c          	.align 2
 7601  0000723c          	.proc _DisableIntrs
 7602  0000723c          	.global _DisableIntrs
 7603  0000723c          	_DisableIntrs:
 7604                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 7605  0000723c  afbefffc	sw	-4(r29),r30; push fp
 7606  00007240  001df020	add	r30,r0,r29; fp = sp
 7607  00007244  afbffff8	sw	-8(r29),r31; push ret addr
 7608  00007248  2fbd0010	subui	r29,r29,#16; alloc local storage
 7609  0000724c  afa20000	sw	0(r29),r2
 7610  00007250  23bdfff8	addi	r29,r29,#-8
 7611  00007254  2002000f	addi	r2,r0,#15
 7612  00007258  afa20000	sw	(r29),r2
 7613  0000725c  0c002dcc	jal	_SetIntrs
 7614  00007260  54000000	nop; not filled.
 7615  00007264  23bd0008	addi	r29,r29,#8
 7616  00007268  8fa20000	lw	r2,0(r29)
 7617  0000726c  8fdffff8	lw	r31,-8(r30)
 7618  00007270  001ee820	add	r29,r0,r30
 7619  00007274  8fdefffc	lw	r30,-4(r30)
 7620  00007278  4be00000	jr	r31
 7621  0000727c  54000000	nop
 7622  00007280          	.endproc _DisableIntrs
 7623  00007280          	.align 2
 7624  00007280          	.proc _EnableIntrs
 7625  00007280          	.global _EnableIntrs
 7626  00007280          	_EnableIntrs:
 7627                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 7628  00007280  afbefffc	sw	-4(r29),r30; push fp
 7629  00007284  001df020	add	r30,r0,r29; fp = sp
 7630  00007288  afbffff8	sw	-8(r29),r31; push ret addr
 7631  0000728c  2fbd0010	subui	r29,r29,#16; alloc local storage
 7632  00007290  afa20000	sw	0(r29),r2
 7633  00007294  23bdfff8	addi	r29,r29,#-8
 7634  00007298  20020000	addi	r2,r0,#0
 7635  0000729c  afa20000	sw	(r29),r2
 7636  000072a0  0c002d88	jal	_SetIntrs
 7637  000072a4  54000000	nop; not filled.
 7638  000072a8  23bd0008	addi	r29,r29,#8
 7639  000072ac  8fa20000	lw	r2,0(r29)
 7640  000072b0  8fdffff8	lw	r31,-8(r30)
 7641  000072b4  001ee820	add	r29,r0,r30
 7642  000072b8  8fdefffc	lw	r30,-4(r30)
 7643  000072bc  4be00000	jr	r31
 7644  000072c0  54000000	nop
 7645  000072c4          	.endproc _EnableIntrs
 7646  000072c4          	.align 2
 7647  000072c4          	.proc _RestoreIntrs
 7648  000072c4          	.global _RestoreIntrs
 7649  000072c4          	_RestoreIntrs:
 7650                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 7651  000072c4  afbefffc	sw	-4(r29),r30; push fp
 7652  000072c8  001df020	add	r30,r0,r29; fp = sp
 7653  000072cc  afbffff8	sw	-8(r29),r31; push ret addr
 7654  000072d0  2fbd0010	subui	r29,r29,#16; alloc local storage
 7655  000072d4  afa20000	sw	0(r29),r2
 7656  000072d8  23bdfff8	addi	r29,r29,#-8
 7657  000072dc  8fc20000	lw	r2,(r30)
 7658  000072e0  afa20000	sw	(r29),r2
 7659  000072e4  0c002d44	jal	_SetIntrs
 7660  000072e8  54000000	nop; not filled.
 7661  000072ec  23bd0008	addi	r29,r29,#8
 7662  000072f0  8fa20000	lw	r2,0(r29)
 7663  000072f4  8fdffff8	lw	r31,-8(r30)
 7664  000072f8  001ee820	add	r29,r0,r30
 7665  000072fc  8fdefffc	lw	r30,-4(r30)
 7666  00007300  4be00000	jr	r31
 7667  00007304  54000000	nop
 7668  00007308          	.endproc _RestoreIntrs
 7669  00007308          	.align 2
 7670  00007308          	.proc _QueueLinkInit
 7671  00007308          	.global _QueueLinkInit
 7672  00007308          	_QueueLinkInit:
 7673                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 7674  00007308  afbefffc	sw	-4(r29),r30; push fp
 7675  0000730c  001df020	add	r30,r0,r29; fp = sp
 7676  00007310  afbffff8	sw	-8(r29),r31; push ret addr
 7677  00007314  2fbd0010	subui	r29,r29,#16; alloc local storage
 7678  00007318  afa20000	sw	0(r29),r2
 7679  0000731c  8fc10000	lw	r1,(r30)
 7680  00007320  8fc20004	lw	r2,4(r30)
 7681  00007324  201f0000	addi	r31,r0,#0
 7682  00007328  ac3f0000	sw	(r1),r31
 7683  0000732c  ac22000c	sw	12(r1),r2
 7684  00007330  8fa20000	lw	r2,0(r29)
 7685  00007334  8fdffff8	lw	r31,-8(r30)
 7686  00007338  001ee820	add	r29,r0,r30
 7687  0000733c  8fdefffc	lw	r30,-4(r30)
 7688  00007340  4be00000	jr	r31
 7689  00007344  54000000	nop
 7690  00007348          	.endproc _QueueLinkInit
 7691  00007348          	.align 2
 7692  00007348          	.proc _QueueNext
 7693  00007348          	.global _QueueNext
 7694  00007348          	_QueueNext:
 7695                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 7696  00007348  afbefffc	sw	-4(r29),r30; push fp
 7697  0000734c  001df020	add	r30,r0,r29; fp = sp
 7698  00007350  afbffff8	sw	-8(r29),r31; push ret addr
 7699  00007354  2fbd0008	subui	r29,r29,#8; alloc local storage
 7700  00007358  8fc10000	lw	r1,(r30)
 7701  0000735c  8c210000	lw	r1,(r1)
 7702  00007360  8fdffff8	lw	r31,-8(r30)
 7703  00007364  001ee820	add	r29,r0,r30
 7704  00007368  8fdefffc	lw	r30,-4(r30)
 7705  0000736c  4be00000	jr	r31
 7706  00007370  54000000	nop
 7707  00007374          	.endproc _QueueNext
 7708  00007374          	.align 2
 7709  00007374          	.proc _QueuePrev
 7710  00007374          	.global _QueuePrev
 7711  00007374          	_QueuePrev:
 7712                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 7713  00007374  afbefffc	sw	-4(r29),r30; push fp
 7714  00007378  001df020	add	r30,r0,r29; fp = sp
 7715  0000737c  afbffff8	sw	-8(r29),r31; push ret addr
 7716  00007380  2fbd0008	subui	r29,r29,#8; alloc local storage
 7717  00007384  8fc10000	lw	r1,(r30)
 7718  00007388  8c210004	lw	r1,4(r1)
 7719  0000738c  8fdffff8	lw	r31,-8(r30)
 7720  00007390  001ee820	add	r29,r0,r30
 7721  00007394  8fdefffc	lw	r30,-4(r30)
 7722  00007398  4be00000	jr	r31
 7723  0000739c  54000000	nop
 7724  000073a0          	.endproc _QueuePrev
 7725  000073a0          	.align 2
 7726  000073a0          	.proc _QueueFirst
 7727  000073a0          	.global _QueueFirst
 7728  000073a0          	_QueueFirst:
 7729                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 7730  000073a0  afbefffc	sw	-4(r29),r30; push fp
 7731  000073a4  001df020	add	r30,r0,r29; fp = sp
 7732  000073a8  afbffff8	sw	-8(r29),r31; push ret addr
 7733  000073ac  2fbd0008	subui	r29,r29,#8; alloc local storage
 7734  000073b0  8fc10000	lw	r1,(r30)
 7735  000073b4  8c210000	lw	r1,(r1)
 7736  000073b8  8fdffff8	lw	r31,-8(r30)
 7737  000073bc  001ee820	add	r29,r0,r30
 7738  000073c0  8fdefffc	lw	r30,-4(r30)
 7739  000073c4  4be00000	jr	r31
 7740  000073c8  54000000	nop
 7741  000073cc          	.endproc _QueueFirst
 7742  000073cc          	.align 2
 7743  000073cc          	.proc _QueueLast
 7744  000073cc          	.global _QueueLast
 7745  000073cc          	_QueueLast:
 7746                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 7747  000073cc  afbefffc	sw	-4(r29),r30; push fp
 7748  000073d0  001df020	add	r30,r0,r29; fp = sp
 7749  000073d4  afbffff8	sw	-8(r29),r31; push ret addr
 7750  000073d8  2fbd0008	subui	r29,r29,#8; alloc local storage
 7751  000073dc  8fc10000	lw	r1,(r30)
 7752  000073e0  8c210004	lw	r1,4(r1)
 7753  000073e4  8fdffff8	lw	r31,-8(r30)
 7754  000073e8  001ee820	add	r29,r0,r30
 7755  000073ec  8fdefffc	lw	r30,-4(r30)
 7756  000073f0  4be00000	jr	r31
 7757  000073f4  54000000	nop
 7758  000073f8          	.endproc _QueueLast
 7759  000073f8          	.align 2
 7760  000073f8          	.proc _QueueInsertAfter
 7761  000073f8          	.global _QueueInsertAfter
 7762  000073f8          	_QueueInsertAfter:
 7763                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 7764  000073f8  afbefffc	sw	-4(r29),r30; push fp
 7765  000073fc  001df020	add	r30,r0,r29; fp = sp
 7766  00007400  afbffff8	sw	-8(r29),r31; push ret addr
 7767  00007404  2fbd0010	subui	r29,r29,#16; alloc local storage
 7768  00007408  afa20000	sw	0(r29),r2
 7769  0000740c  afa30004	sw	4(r29),r3
 7770  00007410  8fc30000	lw	r3,(r30)
 7771  00007414  8fc20004	lw	r2,4(r30)
 7772  00007418  8fc10008	lw	r1,8(r30)
 7773  0000741c  ac230008	sw	8(r1),r3
 7774  00007420  ac220004	sw	4(r1),r2
 7775  00007424  8c5f0000	lw	r31,(r2)
 7776  00007428  ac3f0000	sw	(r1),r31
 7777  0000742c  ac410000	sw	(r2),r1
 7778  00007430  8c220000	lw	r2,(r1)
 7779  00007434  ac410004	sw	4(r2),r1
 7780  00007438  8c610008	lw	r1,8(r3)
 7781  0000743c  20210001	addi	r1,r1,#1
 7782  00007440  ac610008	sw	8(r3),r1
 7783  00007444  8fa20000	lw	r2,0(r29)
 7784  00007448  8fa30004	lw	r3,4(r29)
 7785  0000744c  8fdffff8	lw	r31,-8(r30)
 7786  00007450  001ee820	add	r29,r0,r30
 7787  00007454  8fdefffc	lw	r30,-4(r30)
 7788  00007458  4be00000	jr	r31
 7789  0000745c  54000000	nop
 7790  00007460          	.endproc _QueueInsertAfter
 7791  00007460          	.align 2
 7792  00007460          	.proc _QueueInsertFirst
 7793  00007460          	.global _QueueInsertFirst
 7794  00007460          	_QueueInsertFirst:
 7795                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 7796  00007460  afbefffc	sw	-4(r29),r30; push fp
 7797  00007464  001df020	add	r30,r0,r29; fp = sp
 7798  00007468  afbffff8	sw	-8(r29),r31; push ret addr
 7799  0000746c  2fbd0010	subui	r29,r29,#16; alloc local storage
 7800  00007470  afa20000	sw	0(r29),r2
 7801  00007474  afa30004	sw	4(r29),r3
 7802  00007478  8fc30000	lw	r3,(r30)
 7803  0000747c  8fc10004	lw	r1,4(r30)
 7804  00007480  ac230008	sw	8(r1),r3
 7805  00007484  ac230004	sw	4(r1),r3
 7806  00007488  8c7f0000	lw	r31,(r3)
 7807  0000748c  ac3f0000	sw	(r1),r31
 7808  00007490  ac610000	sw	(r3),r1
 7809  00007494  8c220000	lw	r2,(r1)
 7810  00007498  ac410004	sw	4(r2),r1
 7811  0000749c  8c610008	lw	r1,8(r3)
 7812  000074a0  20210001	addi	r1,r1,#1
 7813  000074a4  ac610008	sw	8(r3),r1
 7814  000074a8  8fa20000	lw	r2,0(r29)
 7815  000074ac  8fa30004	lw	r3,4(r29)
 7816  000074b0  8fdffff8	lw	r31,-8(r30)
 7817  000074b4  001ee820	add	r29,r0,r30
 7818  000074b8  8fdefffc	lw	r30,-4(r30)
 7819  000074bc  4be00000	jr	r31
 7820  000074c0  54000000	nop
 7821  000074c4          	.endproc _QueueInsertFirst
 7822  000074c4          	.align 2
 7823  000074c4          	.proc _QueueInsertLast
 7824  000074c4          	.global _QueueInsertLast
 7825  000074c4          	_QueueInsertLast:
 7826                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 7827  000074c4  afbefffc	sw	-4(r29),r30; push fp
 7828  000074c8  001df020	add	r30,r0,r29; fp = sp
 7829  000074cc  afbffff8	sw	-8(r29),r31; push ret addr
 7830  000074d0  2fbd0010	subui	r29,r29,#16; alloc local storage
 7831  000074d4  afa20000	sw	0(r29),r2
 7832  000074d8  afa30004	sw	4(r29),r3
 7833  000074dc  8fc30000	lw	r3,(r30)
 7834  000074e0  8fc10004	lw	r1,4(r30)
 7835  000074e4  8c620004	lw	r2,4(r3)
 7836  000074e8  ac230008	sw	8(r1),r3
 7837  000074ec  ac220004	sw	4(r1),r2
 7838  000074f0  8c5f0000	lw	r31,(r2)
 7839  000074f4  ac3f0000	sw	(r1),r31
 7840  000074f8  ac410000	sw	(r2),r1
 7841  000074fc  8c220000	lw	r2,(r1)
 7842  00007500  ac410004	sw	4(r2),r1
 7843  00007504  8c610008	lw	r1,8(r3)
 7844  00007508  20210001	addi	r1,r1,#1
 7845  0000750c  ac610008	sw	8(r3),r1
 7846  00007510  8fa20000	lw	r2,0(r29)
 7847  00007514  8fa30004	lw	r3,4(r29)
 7848  00007518  8fdffff8	lw	r31,-8(r30)
 7849  0000751c  001ee820	add	r29,r0,r30
 7850  00007520  8fdefffc	lw	r30,-4(r30)
 7851  00007524  4be00000	jr	r31
 7852  00007528  54000000	nop
 7853  0000752c          	.endproc _QueueInsertLast
 7854  0000752c          	.align 2
 7855  0000752c          	.proc _QueueRemove
 7856  0000752c          	.global _QueueRemove
 7857  0000752c          	_QueueRemove:
 7858                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 7859  0000752c  afbefffc	sw	-4(r29),r30; push fp
 7860  00007530  001df020	add	r30,r0,r29; fp = sp
 7861  00007534  afbffff8	sw	-8(r29),r31; push ret addr
 7862  00007538  2fbd0010	subui	r29,r29,#16; alloc local storage
 7863  0000753c  afa20000	sw	0(r29),r2
 7864  00007540  afa30004	sw	4(r29),r3
 7865  00007544  8fdf0000	lw	r31,(r30)
 7866  00007548  8fe10008	lw	r1,8(r31)
 7867  0000754c  8c210008	lw	r1,8(r1)
 7868  00007550  6c210000	sgti	r1,r1,#0
 7869  00007554  1020002c	beqz	r1,L44_LF4
 7870  00007558  54000000	nop; not filled.
 7871  0000755c  8fe10004	lw	r1,4(r31)
 7872  00007560  8fe30000	lw	r3,(r31)
 7873  00007564  ac230000	sw	(r1),r3
 7874  00007568  8fe10000	lw	r1,(r31)
 7875  0000756c  8fe30004	lw	r3,4(r31)
 7876  00007570  ac230004	sw	4(r1),r3
 7877  00007574  8fe20008	lw	r2,8(r31)
 7878  00007578  8c410008	lw	r1,8(r2)
 7879  0000757c  2021ffff	addi	r1,r1,#-1
 7880  00007580  ac410008	sw	8(r2),r1
 7881  00007584          	L44_LF4:
 7882  00007584  20030000	addi	r3,r0,#0
 7883  00007588  afe30000	sw	(r31),r3
 7884  0000758c  8fa20000	lw	r2,0(r29)
 7885  00007590  8fa30004	lw	r3,4(r29)
 7886  00007594  8fdffff8	lw	r31,-8(r30)
 7887  00007598  001ee820	add	r29,r0,r30
 7888  0000759c  8fdefffc	lw	r30,-4(r30)
 7889  000075a0  4be00000	jr	r31
 7890  000075a4  54000000	nop
 7891  000075a8          	.endproc _QueueRemove
 7892  000075a8          	.align 2
 7893  000075a8          	.proc _QueueLength
 7894  000075a8          	.global _QueueLength
 7895  000075a8          	_QueueLength:
 7896                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 7897  000075a8  afbefffc	sw	-4(r29),r30; push fp
 7898  000075ac  001df020	add	r30,r0,r29; fp = sp
 7899  000075b0  afbffff8	sw	-8(r29),r31; push ret addr
 7900  000075b4  2fbd0008	subui	r29,r29,#8; alloc local storage
 7901  000075b8  8fc10000	lw	r1,(r30)
 7902  000075bc  8c210008	lw	r1,8(r1)
 7903  000075c0  8fdffff8	lw	r31,-8(r30)
 7904  000075c4  001ee820	add	r29,r0,r30
 7905  000075c8  8fdefffc	lw	r30,-4(r30)
 7906  000075cc  4be00000	jr	r31
 7907  000075d0  54000000	nop
 7908  000075d4          	.endproc _QueueLength
 7909  000075d4          	.align 2
 7910  000075d4          	.proc _QueueEmpty
 7911  000075d4          	.global _QueueEmpty
 7912  000075d4          	_QueueEmpty:
 7913                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 7914  000075d4  afbefffc	sw	-4(r29),r30; push fp
 7915  000075d8  001df020	add	r30,r0,r29; fp = sp
 7916  000075dc  afbffff8	sw	-8(r29),r31; push ret addr
 7917  000075e0  2fbd0008	subui	r29,r29,#8; alloc local storage
 7918  000075e4  8fc10000	lw	r1,(r30)
 7919  000075e8  8c210008	lw	r1,8(r1)
 7920  000075ec  60210000	seqi	r1,r1,#0
 7921  000075f0  8fdffff8	lw	r31,-8(r30)
 7922  000075f4  001ee820	add	r29,r0,r30
 7923  000075f8  8fdefffc	lw	r30,-4(r30)
 7924  000075fc  4be00000	jr	r31
 7925  00007600  54000000	nop
 7926  00007604          	.endproc _QueueEmpty
 7927  00007604          	.data
 7928  000113a4          	.align 2
 7929  000113a4          	LC0_LF4:
 7930  000113a4  496e6974	.ascii "Initializing queue link %d.\n\000"
 7930  000113a8  69616c69	
 7930  000113ac  7a696e67	
 7930  000113b0  20717565	
 7930  000113b4  7565206c	
 7930  000113b8  696e6b20	
 7930  000113bc  25642e0a	
 7930  000113c0  00      	
 7931  000113c1          	.text
 7932  00007604          	.align 2
 7933  00007604          	.proc _QueueModuleInit
 7934  00007604          	.global _QueueModuleInit
 7935  00007604          	_QueueModuleInit:
 7936                      ;  Function 'QueueModuleInit'; 0 bytes of locals, 4 regs to save.
 7937  00007604  afbefffc	sw	-4(r29),r30; push fp
 7938  00007608  001df020	add	r30,r0,r29; fp = sp
 7939  0000760c  afbffff8	sw	-8(r29),r31; push ret addr
 7940  00007610  2fbd0018	subui	r29,r29,#24; alloc local storage
 7941  00007614  afa20000	sw	0(r29),r2
 7942  00007618  afa30004	sw	4(r29),r3
 7943  0000761c  afa40008	sw	8(r29),r4
 7944  00007620  afa5000c	sw	12(r29),r5
 7945  00007624  23bdfff8	addi	r29,r29,#-8
 7946  00007628  3c050001	lhi	r5,((_freeLinks)>>16)&0xffff
 7947  0000762c  24a51410	addui	r5,r5,(_freeLinks)&0xffff
 7948  00007630  afa50000	sw	(r29),r5
 7949  00007634  0c0000e0	jal	_QueueInit
 7950  00007638  54000000	nop; not filled.
 7951  0000763c  20030000	addi	r3,r0,#0
 7952  00007640  23bd0008	addi	r29,r29,#8
 7953  00007644  3c040000	lhi	r4,((_debugstr)>>16)&0xffff
 7954  00007648  2484fc26	addui	r4,r4,(_debugstr)&0xffff
 7955  0000764c  3c020001	lhi	r2,((_linkpool_LF4)>>16)&0xffff
 7956  00007650  2442141c	addui	r2,r2,(_linkpool_LF4)&0xffff
 7957  00007654          	L63_LF4:
 7958  00007654  23bdfff8	addi	r29,r29,#-8
 7959  00007658  afa40000	sw	(r29),r4
 7960  0000765c  20050069	addi	r5,r0,#105
 7961  00007660  afa50004	sw	4(r29),r5
 7962  00007664  0fffc4b4	jal	_dindex
 7963  00007668  54000000	nop; not filled.
 7964  0000766c  23bd0008	addi	r29,r29,#8
 7965  00007670  64210000	snei	r1,r1,#0
 7966  00007674  1420002c	bnez	r1,L65_LF4
 7967  00007678  54000000	nop; not filled.
 7968  0000767c  23bdfff8	addi	r29,r29,#-8
 7969  00007680  afa40000	sw	(r29),r4
 7970  00007684  2005002b	addi	r5,r0,#43
 7971  00007688  afa50004	sw	4(r29),r5
 7972  0000768c  0fffc48c	jal	_dindex
 7973  00007690  54000000	nop; not filled.
 7974  00007694  23bd0008	addi	r29,r29,#8
 7975  00007698  64210000	snei	r1,r1,#0
 7976  0000769c  10200024	beqz	r1,L64_LF4
 7977  000076a0  54000000	nop; not filled.
 7978  000076a4          	L65_LF4:
 7979  000076a4  23bdfff8	addi	r29,r29,#-8
 7980  000076a8  3c050001	lhi	r5,((LC0_LF4)>>16)&0xffff
 7981  000076ac  24a513a4	addui	r5,r5,(LC0_LF4)&0xffff
 7982  000076b0  afa50000	sw	(r29),r5
 7983  000076b4  afa30004	sw	4(r29),r3
 7984  000076b8  0c002ac4	jal	_printf
 7985  000076bc  54000000	nop; not filled.
 7986  000076c0  23bd0008	addi	r29,r29,#8
 7987  000076c4          	L64_LF4:
 7988  000076c4  20050000	addi	r5,r0,#0
 7989  000076c8  ac450000	sw	(r2),r5
 7990  000076cc  23bdfff8	addi	r29,r29,#-8
 7991  000076d0  afa20000	sw	(r29),r2
 7992  000076d4  0c000078	jal	_QueueFreeLink
 7993  000076d8  54000000	nop; not filled.
 7994  000076dc  23bd0008	addi	r29,r29,#8
 7995  000076e0  20420010	addi	r2,r2,#16
 7996  000076e4  20630001	addi	r3,r3,#1
 7997  000076e8  7061018f	slei	r1,r3,#399
 7998  000076ec  1420ff64	bnez	r1,L63_LF4
 7999  000076f0  54000000	nop; not filled.
 8000  000076f4  8fa20000	lw	r2,0(r29)
 8001  000076f8  8fa30004	lw	r3,4(r29)
 8002  000076fc  8fa40008	lw	r4,8(r29)
 8003  00007700  8fa5000c	lw	r5,12(r29)
 8004  00007704  8fdffff8	lw	r31,-8(r30)
 8005  00007708  001ee820	add	r29,r0,r30
 8006  0000770c  8fdefffc	lw	r30,-4(r30)
 8007  00007710  4be00000	jr	r31
 8008  00007714  54000000	nop
 8009  00007718          	.endproc _QueueModuleInit
 8010  00007718          	.align 2
 8011  00007718          	.proc _QueueInit
 8012  00007718          	.global _QueueInit
 8013  00007718          	_QueueInit:
 8014                      ;  Function 'QueueInit'; 0 bytes of locals, 0 regs to save.
 8015  00007718  afbefffc	sw	-4(r29),r30; push fp
 8016  0000771c  001df020	add	r30,r0,r29; fp = sp
 8017  00007720  afbffff8	sw	-8(r29),r31; push ret addr
 8018  00007724  2fbd0008	subui	r29,r29,#8; alloc local storage
 8019  00007728  8fc10000	lw	r1,(r30)
 8020  0000772c  ac210000	sw	(r1),r1
 8021  00007730  ac210004	sw	4(r1),r1
 8022  00007734  201f0000	addi	r31,r0,#0
 8023  00007738  ac3f0008	sw	8(r1),r31
 8024  0000773c  8fdffff8	lw	r31,-8(r30)
 8025  00007740  001ee820	add	r29,r0,r30
 8026  00007744  8fdefffc	lw	r30,-4(r30)
 8027  00007748  4be00000	jr	r31
 8028  0000774c  54000000	nop
 8029  00007750          	.endproc _QueueInit
 8030  00007750          	.data
 8031  000113c1          	.align 2
 8032  000113c4          	LC1_LF4:
 8033  000113c4  25733a20	.ascii "%s: %s\n\000"
 8033  000113c8  25730a00	
 8034  000113cc          	.align 2
 8035  000113cc          	LC2_LF4:
 8036  000113cc  51756575	.ascii "QueueFreeLink\000"
 8036  000113d0  65467265	
 8036  000113d4  654c696e	
 8036  000113d8  6b00    	
 8037  000113da          	.align 2
 8038  000113dc          	LC3_LF4:
 8039  000113dc  4c696e6b	.ascii "Link not empty\000"
 8039  000113e0  206e6f74	
 8039  000113e4  20656d70	
 8039  000113e8  747900  	
 8040  000113eb          	.text
 8041  00007750          	.align 2
 8042  00007750          	.proc _QueueFreeLink
 8043  00007750          	.global _QueueFreeLink
 8044  00007750          	_QueueFreeLink:
 8045                      ;  Function 'QueueFreeLink'; 0 bytes of locals, 3 regs to save.
 8046  00007750  afbefffc	sw	-4(r29),r30; push fp
 8047  00007754  001df020	add	r30,r0,r29; fp = sp
 8048  00007758  afbffff8	sw	-8(r29),r31; push ret addr
 8049  0000775c  2fbd0018	subui	r29,r29,#24; alloc local storage
 8050  00007760  afa20000	sw	0(r29),r2
 8051  00007764  afa30004	sw	4(r29),r3
 8052  00007768  afa40008	sw	8(r29),r4
 8053  0000776c  8fc30000	lw	r3,(r30)
 8054  00007770  8c610000	lw	r1,(r3)
 8055  00007774  64210000	snei	r1,r1,#0
 8056  00007778  10200038	beqz	r1,L77_LF4
 8057  0000777c  54000000	nop; not filled.
 8058  00007780  23bdfff0	addi	r29,r29,#-16
 8059  00007784  3c040001	lhi	r4,((LC1_LF4)>>16)&0xffff
 8060  00007788  248413c4	addui	r4,r4,(LC1_LF4)&0xffff
 8061  0000778c  afa40000	sw	(r29),r4
 8062  00007790  3c010001	lhi	r1,((LC2_LF4)>>16)&0xffff
 8063  00007794  242113cc	addui	r1,r1,(LC2_LF4)&0xffff
 8064  00007798  afa10004	sw	4(r29),r1
 8065  0000779c  3c040001	lhi	r4,((LC3_LF4)>>16)&0xffff
 8066  000077a0  248413dc	addui	r4,r4,(LC3_LF4)&0xffff
 8067  000077a4  afa40008	sw	8(r29),r4
 8068  000077a8  0c0029d4	jal	_printf
 8069  000077ac  54000000	nop; not filled.
 8070  000077b0  23bd0010	addi	r29,r29,#16
 8071  000077b4          	L77_LF4:
 8072  000077b4  3c020001	lhi	r2,((_freeLinks)>>16)&0xffff
 8073  000077b8  24421410	addui	r2,r2,(_freeLinks)&0xffff
 8074  000077bc  8c410004	lw	r1,4(r2)
 8075  000077c0  ac620008	sw	8(r3),r2
 8076  000077c4  ac610004	sw	4(r3),r1
 8077  000077c8  8c240000	lw	r4,(r1)
 8078  000077cc  ac640000	sw	(r3),r4
 8079  000077d0  ac230000	sw	(r1),r3
 8080  000077d4  8c610000	lw	r1,(r3)
 8081  000077d8  ac230004	sw	4(r1),r3
 8082  000077dc  8c410008	lw	r1,8(r2)
 8083  000077e0  20210001	addi	r1,r1,#1
 8084  000077e4  ac410008	sw	8(r2),r1
 8085  000077e8  8fa20000	lw	r2,0(r29)
 8086  000077ec  8fa30004	lw	r3,4(r29)
 8087  000077f0  8fa40008	lw	r4,8(r29)
 8088  000077f4  8fdffff8	lw	r31,-8(r30)
 8089  000077f8  001ee820	add	r29,r0,r30
 8090  000077fc  8fdefffc	lw	r30,-4(r30)
 8091  00007800  4be00000	jr	r31
 8092  00007804  54000000	nop
 8093  00007808          	.endproc _QueueFreeLink
 8094  00007808          	.data
 8095  000113eb          	.align 2
 8096  000113ec          	LC4_LF4:
 8097  000113ec  51756575	.ascii "QueueAllocLink\000"
 8097  000113f0  65416c6c	
 8097  000113f4  6f634c69	
 8097  000113f8  6e6b00  	
 8098  000113fb          	.align 2
 8099  000113fc          	LC5_LF4:
 8100  000113fc  4c696e6b	.ascii "Link not allocated!\000"
 8100  00011400  206e6f74	
 8100  00011404  20616c6c	
 8100  00011408  6f636174	
 8100  0001140c  65642100	
 8101  00011410          	.text
 8102  00007808          	.align 2
 8103  00007808          	.proc _QueueAllocLink
 8104  00007808          	.global _QueueAllocLink
 8105  00007808          	_QueueAllocLink:
 8106                      ;  Function 'QueueAllocLink'; 0 bytes of locals, 3 regs to save.
 8107  00007808  afbefffc	sw	-4(r29),r30; push fp
 8108  0000780c  001df020	add	r30,r0,r29; fp = sp
 8109  00007810  afbffff8	sw	-8(r29),r31; push ret addr
 8110  00007814  2fbd0018	subui	r29,r29,#24; alloc local storage
 8111  00007818  afa20000	sw	0(r29),r2
 8112  0000781c  afa30004	sw	4(r29),r3
 8113  00007820  afa40008	sw	8(r29),r4
 8114  00007824  3c020001	lhi	r2,((_freeLinks)>>16)&0xffff
 8115  00007828  24421410	addui	r2,r2,(_freeLinks)&0xffff
 8116  0000782c  8c410008	lw	r1,8(r2)
 8117  00007830  60210000	seqi	r1,r1,#0
 8118  00007834  14200054	bnez	r1,L92_LF4
 8119  00007838  54000000	nop; not filled.
 8120  0000783c  8c430000	lw	r3,(r2)
 8121  00007840  8c610008	lw	r1,8(r3)
 8122  00007844  8c210008	lw	r1,8(r1)
 8123  00007848  6c210000	sgti	r1,r1,#0
 8124  0000784c  1020002c	beqz	r1,L97_LF4
 8125  00007850  54000000	nop; not filled.
 8126  00007854  8c610004	lw	r1,4(r3)
 8127  00007858  8c640000	lw	r4,(r3)
 8128  0000785c  ac240000	sw	(r1),r4
 8129  00007860  8c610000	lw	r1,(r3)
 8130  00007864  8c640004	lw	r4,4(r3)
 8131  00007868  ac240004	sw	4(r1),r4
 8132  0000786c  8c620008	lw	r2,8(r3)
 8133  00007870  8c410008	lw	r1,8(r2)
 8134  00007874  2021ffff	addi	r1,r1,#-1
 8135  00007878  ac410008	sw	8(r2),r1
 8136  0000787c          	L97_LF4:
 8137  0000787c  20040000	addi	r4,r0,#0
 8138  00007880  ac640000	sw	(r3),r4
 8139  00007884  08000008	j	L98_LF4
 8140  00007888  54000000	nop; not filled.
 8141  0000788c          	L92_LF4:
 8142  0000788c  20030000	addi	r3,r0,#0
 8143  00007890          	L98_LF4:
 8144  00007890  64610000	snei	r1,r3,#0
 8145  00007894  14200038	bnez	r1,L100_LF4
 8146  00007898  54000000	nop; not filled.
 8147  0000789c  23bdfff0	addi	r29,r29,#-16
 8148  000078a0  3c040001	lhi	r4,((LC1_LF4)>>16)&0xffff
 8149  000078a4  248413c4	addui	r4,r4,(LC1_LF4)&0xffff
 8150  000078a8  afa40000	sw	(r29),r4
 8151  000078ac  3c010001	lhi	r1,((LC4_LF4)>>16)&0xffff
 8152  000078b0  242113ec	addui	r1,r1,(LC4_LF4)&0xffff
 8153  000078b4  afa10004	sw	4(r29),r1
 8154  000078b8  3c040001	lhi	r4,((LC5_LF4)>>16)&0xffff
 8155  000078bc  248413fc	addui	r4,r4,(LC5_LF4)&0xffff
 8156  000078c0  afa40008	sw	8(r29),r4
 8157  000078c4  0c0028b8	jal	_printf
 8158  000078c8  54000000	nop; not filled.
 8159  000078cc  23bd0010	addi	r29,r29,#16
 8160  000078d0          	L100_LF4:
 8161  000078d0  00030820	add	r1,r0,r3
 8162  000078d4  8fa20000	lw	r2,0(r29)
 8163  000078d8  8fa30004	lw	r3,4(r29)
 8164  000078dc  8fa40008	lw	r4,8(r29)
 8165  000078e0  8fdffff8	lw	r31,-8(r30)
 8166  000078e4  001ee820	add	r29,r0,r30
 8167  000078e8  8fdefffc	lw	r30,-4(r30)
 8168  000078ec  4be00000	jr	r31
 8169  000078f0  54000000	nop
 8170  000078f4          	.endproc _QueueAllocLink
 8171  000078f4          	.data
 8172  00011410          	.align 2
 8173  00011410          	.global _freeLinks
 8174  00011410          	_freeLinks:
 8175  00011410          	.space 12
 8176  0001141c          	.align 2
 8177  0001141c          	_linkpool_LF4:
 8178  0001141c          	.space 6400
 8179                      ; Compiled by GCC
 8180  00012d1c          	.text
 8181  000078f4          	.align 2
 8182  000078f4          	.proc _isspace
 8183  000078f4          	.global _isspace
 8184  000078f4          	_isspace:
 8185                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 8186  000078f4  afbefffc	sw	-4(r29),r30; push fp
 8187  000078f8  001df020	add	r30,r0,r29; fp = sp
 8188  000078fc  afbffff8	sw	-8(r29),r31; push ret addr
 8189  00007900  2fbd0010	subui	r29,r29,#16; alloc local storage
 8190  00007904  afa20000	sw	0(r29),r2
 8191  00007908  83c20003	lb	r2,3(r30)
 8192  0000790c  201f0000	addi	r31,r0,#0
 8193  00007910  304100ff	andi	r1,r2,#0x00ff
 8194  00007914  60210020	seqi	r1,r1,#32
 8195  00007918  14200018	bnez	r1,L6_LF5
 8196  0000791c  54000000	nop; not filled.
 8197  00007920  2041fff7	addi	r1,r2,#-9
 8198  00007924  302100ff	andi	r1,r1,#0x00ff
 8199  00007928  70210001	sleui	r1,r1,#1
 8200  0000792c  10200008	beqz	r1,L5_LF5
 8201  00007930  54000000	nop; not filled.
 8202  00007934          	L6_LF5:
 8203  00007934  201f0001	addi	r31,r0,#1
 8204  00007938          	L5_LF5:
 8205  00007938  001f0820	add	r1,r0,r31
 8206  0000793c  8fa20000	lw	r2,0(r29)
 8207  00007940  8fdffff8	lw	r31,-8(r30)
 8208  00007944  001ee820	add	r29,r0,r30
 8209  00007948  8fdefffc	lw	r30,-4(r30)
 8210  0000794c  4be00000	jr	r31
 8211  00007950  54000000	nop
 8212  00007954          	.endproc _isspace
 8213  00007954          	.align 2
 8214  00007954          	.proc _isxdigit
 8215  00007954          	.global _isxdigit
 8216  00007954          	_isxdigit:
 8217                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 8218  00007954  afbefffc	sw	-4(r29),r30; push fp
 8219  00007958  001df020	add	r30,r0,r29; fp = sp
 8220  0000795c  afbffff8	sw	-8(r29),r31; push ret addr
 8221  00007960  2fbd0010	subui	r29,r29,#16; alloc local storage
 8222  00007964  afa20000	sw	0(r29),r2
 8223  00007968  83df0003	lb	r31,3(r30)
 8224  0000796c  20020000	addi	r2,r0,#0
 8225  00007970  23e1ffd0	addi	r1,r31,#-48
 8226  00007974  302100ff	andi	r1,r1,#0x00ff
 8227  00007978  70210009	sleui	r1,r1,#9
 8228  0000797c  14200028	bnez	r1,L12_LF5
 8229  00007980  54000000	nop; not filled.
 8230  00007984  23e1ff9f	addi	r1,r31,#-97
 8231  00007988  302100ff	andi	r1,r1,#0x00ff
 8232  0000798c  70210005	sleui	r1,r1,#5
 8233  00007990  14200014	bnez	r1,L12_LF5
 8234  00007994  54000000	nop; not filled.
 8235  00007998  33e100ff	andi	r1,r31,#0x00ff
 8236  0000799c  64210041	snei	r1,r1,#65
 8237  000079a0  14200008	bnez	r1,L11_LF5
 8238  000079a4  54000000	nop; not filled.
 8239  000079a8          	L12_LF5:
 8240  000079a8  20020001	addi	r2,r0,#1
 8241  000079ac          	L11_LF5:
 8242  000079ac  00020820	add	r1,r0,r2
 8243  000079b0  8fa20000	lw	r2,0(r29)
 8244  000079b4  8fdffff8	lw	r31,-8(r30)
 8245  000079b8  001ee820	add	r29,r0,r30
 8246  000079bc  8fdefffc	lw	r30,-4(r30)
 8247  000079c0  4be00000	jr	r31
 8248  000079c4  54000000	nop
 8249  000079c8          	.endproc _isxdigit
 8250  000079c8          	.align 2
 8251  000079c8          	.proc _DisableIntrs
 8252  000079c8          	.global _DisableIntrs
 8253  000079c8          	_DisableIntrs:
 8254                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 8255  000079c8  afbefffc	sw	-4(r29),r30; push fp
 8256  000079cc  001df020	add	r30,r0,r29; fp = sp
 8257  000079d0  afbffff8	sw	-8(r29),r31; push ret addr
 8258  000079d4  2fbd0010	subui	r29,r29,#16; alloc local storage
 8259  000079d8  afa20000	sw	0(r29),r2
 8260  000079dc  23bdfff8	addi	r29,r29,#-8
 8261  000079e0  2002000f	addi	r2,r0,#15
 8262  000079e4  afa20000	sw	(r29),r2
 8263  000079e8  0c002640	jal	_SetIntrs
 8264  000079ec  54000000	nop; not filled.
 8265  000079f0  23bd0008	addi	r29,r29,#8
 8266  000079f4  8fa20000	lw	r2,0(r29)
 8267  000079f8  8fdffff8	lw	r31,-8(r30)
 8268  000079fc  001ee820	add	r29,r0,r30
 8269  00007a00  8fdefffc	lw	r30,-4(r30)
 8270  00007a04  4be00000	jr	r31
 8271  00007a08  54000000	nop
 8272  00007a0c          	.endproc _DisableIntrs
 8273  00007a0c          	.align 2
 8274  00007a0c          	.proc _EnableIntrs
 8275  00007a0c          	.global _EnableIntrs
 8276  00007a0c          	_EnableIntrs:
 8277                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 8278  00007a0c  afbefffc	sw	-4(r29),r30; push fp
 8279  00007a10  001df020	add	r30,r0,r29; fp = sp
 8280  00007a14  afbffff8	sw	-8(r29),r31; push ret addr
 8281  00007a18  2fbd0010	subui	r29,r29,#16; alloc local storage
 8282  00007a1c  afa20000	sw	0(r29),r2
 8283  00007a20  23bdfff8	addi	r29,r29,#-8
 8284  00007a24  20020000	addi	r2,r0,#0
 8285  00007a28  afa20000	sw	(r29),r2
 8286  00007a2c  0c0025fc	jal	_SetIntrs
 8287  00007a30  54000000	nop; not filled.
 8288  00007a34  23bd0008	addi	r29,r29,#8
 8289  00007a38  8fa20000	lw	r2,0(r29)
 8290  00007a3c  8fdffff8	lw	r31,-8(r30)
 8291  00007a40  001ee820	add	r29,r0,r30
 8292  00007a44  8fdefffc	lw	r30,-4(r30)
 8293  00007a48  4be00000	jr	r31
 8294  00007a4c  54000000	nop
 8295  00007a50          	.endproc _EnableIntrs
 8296  00007a50          	.align 2
 8297  00007a50          	.proc _RestoreIntrs
 8298  00007a50          	.global _RestoreIntrs
 8299  00007a50          	_RestoreIntrs:
 8300                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 8301  00007a50  afbefffc	sw	-4(r29),r30; push fp
 8302  00007a54  001df020	add	r30,r0,r29; fp = sp
 8303  00007a58  afbffff8	sw	-8(r29),r31; push ret addr
 8304  00007a5c  2fbd0010	subui	r29,r29,#16; alloc local storage
 8305  00007a60  afa20000	sw	0(r29),r2
 8306  00007a64  23bdfff8	addi	r29,r29,#-8
 8307  00007a68  8fc20000	lw	r2,(r30)
 8308  00007a6c  afa20000	sw	(r29),r2
 8309  00007a70  0c0025b8	jal	_SetIntrs
 8310  00007a74  54000000	nop; not filled.
 8311  00007a78  23bd0008	addi	r29,r29,#8
 8312  00007a7c  8fa20000	lw	r2,0(r29)
 8313  00007a80  8fdffff8	lw	r31,-8(r30)
 8314  00007a84  001ee820	add	r29,r0,r30
 8315  00007a88  8fdefffc	lw	r30,-4(r30)
 8316  00007a8c  4be00000	jr	r31
 8317  00007a90  54000000	nop
 8318  00007a94          	.endproc _RestoreIntrs
 8319  00007a94          	.align 2
 8320  00007a94          	.proc _QueueLinkInit
 8321  00007a94          	.global _QueueLinkInit
 8322  00007a94          	_QueueLinkInit:
 8323                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 8324  00007a94  afbefffc	sw	-4(r29),r30; push fp
 8325  00007a98  001df020	add	r30,r0,r29; fp = sp
 8326  00007a9c  afbffff8	sw	-8(r29),r31; push ret addr
 8327  00007aa0  2fbd0010	subui	r29,r29,#16; alloc local storage
 8328  00007aa4  afa20000	sw	0(r29),r2
 8329  00007aa8  8fc10000	lw	r1,(r30)
 8330  00007aac  8fc20004	lw	r2,4(r30)
 8331  00007ab0  201f0000	addi	r31,r0,#0
 8332  00007ab4  ac3f0000	sw	(r1),r31
 8333  00007ab8  ac22000c	sw	12(r1),r2
 8334  00007abc  8fa20000	lw	r2,0(r29)
 8335  00007ac0  8fdffff8	lw	r31,-8(r30)
 8336  00007ac4  001ee820	add	r29,r0,r30
 8337  00007ac8  8fdefffc	lw	r30,-4(r30)
 8338  00007acc  4be00000	jr	r31
 8339  00007ad0  54000000	nop
 8340  00007ad4          	.endproc _QueueLinkInit
 8341  00007ad4          	.align 2
 8342  00007ad4          	.proc _QueueNext
 8343  00007ad4          	.global _QueueNext
 8344  00007ad4          	_QueueNext:
 8345                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 8346  00007ad4  afbefffc	sw	-4(r29),r30; push fp
 8347  00007ad8  001df020	add	r30,r0,r29; fp = sp
 8348  00007adc  afbffff8	sw	-8(r29),r31; push ret addr
 8349  00007ae0  2fbd0008	subui	r29,r29,#8; alloc local storage
 8350  00007ae4  8fc10000	lw	r1,(r30)
 8351  00007ae8  8c210000	lw	r1,(r1)
 8352  00007aec  8fdffff8	lw	r31,-8(r30)
 8353  00007af0  001ee820	add	r29,r0,r30
 8354  00007af4  8fdefffc	lw	r30,-4(r30)
 8355  00007af8  4be00000	jr	r31
 8356  00007afc  54000000	nop
 8357  00007b00          	.endproc _QueueNext
 8358  00007b00          	.align 2
 8359  00007b00          	.proc _QueuePrev
 8360  00007b00          	.global _QueuePrev
 8361  00007b00          	_QueuePrev:
 8362                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 8363  00007b00  afbefffc	sw	-4(r29),r30; push fp
 8364  00007b04  001df020	add	r30,r0,r29; fp = sp
 8365  00007b08  afbffff8	sw	-8(r29),r31; push ret addr
 8366  00007b0c  2fbd0008	subui	r29,r29,#8; alloc local storage
 8367  00007b10  8fc10000	lw	r1,(r30)
 8368  00007b14  8c210004	lw	r1,4(r1)
 8369  00007b18  8fdffff8	lw	r31,-8(r30)
 8370  00007b1c  001ee820	add	r29,r0,r30
 8371  00007b20  8fdefffc	lw	r30,-4(r30)
 8372  00007b24  4be00000	jr	r31
 8373  00007b28  54000000	nop
 8374  00007b2c          	.endproc _QueuePrev
 8375  00007b2c          	.align 2
 8376  00007b2c          	.proc _QueueFirst
 8377  00007b2c          	.global _QueueFirst
 8378  00007b2c          	_QueueFirst:
 8379                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 8380  00007b2c  afbefffc	sw	-4(r29),r30; push fp
 8381  00007b30  001df020	add	r30,r0,r29; fp = sp
 8382  00007b34  afbffff8	sw	-8(r29),r31; push ret addr
 8383  00007b38  2fbd0008	subui	r29,r29,#8; alloc local storage
 8384  00007b3c  8fc10000	lw	r1,(r30)
 8385  00007b40  8c210000	lw	r1,(r1)
 8386  00007b44  8fdffff8	lw	r31,-8(r30)
 8387  00007b48  001ee820	add	r29,r0,r30
 8388  00007b4c  8fdefffc	lw	r30,-4(r30)
 8389  00007b50  4be00000	jr	r31
 8390  00007b54  54000000	nop
 8391  00007b58          	.endproc _QueueFirst
 8392  00007b58          	.align 2
 8393  00007b58          	.proc _QueueLast
 8394  00007b58          	.global _QueueLast
 8395  00007b58          	_QueueLast:
 8396                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 8397  00007b58  afbefffc	sw	-4(r29),r30; push fp
 8398  00007b5c  001df020	add	r30,r0,r29; fp = sp
 8399  00007b60  afbffff8	sw	-8(r29),r31; push ret addr
 8400  00007b64  2fbd0008	subui	r29,r29,#8; alloc local storage
 8401  00007b68  8fc10000	lw	r1,(r30)
 8402  00007b6c  8c210004	lw	r1,4(r1)
 8403  00007b70  8fdffff8	lw	r31,-8(r30)
 8404  00007b74  001ee820	add	r29,r0,r30
 8405  00007b78  8fdefffc	lw	r30,-4(r30)
 8406  00007b7c  4be00000	jr	r31
 8407  00007b80  54000000	nop
 8408  00007b84          	.endproc _QueueLast
 8409  00007b84          	.align 2
 8410  00007b84          	.proc _QueueInsertAfter
 8411  00007b84          	.global _QueueInsertAfter
 8412  00007b84          	_QueueInsertAfter:
 8413                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 8414  00007b84  afbefffc	sw	-4(r29),r30; push fp
 8415  00007b88  001df020	add	r30,r0,r29; fp = sp
 8416  00007b8c  afbffff8	sw	-8(r29),r31; push ret addr
 8417  00007b90  2fbd0010	subui	r29,r29,#16; alloc local storage
 8418  00007b94  afa20000	sw	0(r29),r2
 8419  00007b98  afa30004	sw	4(r29),r3
 8420  00007b9c  8fc30000	lw	r3,(r30)
 8421  00007ba0  8fc20004	lw	r2,4(r30)
 8422  00007ba4  8fc10008	lw	r1,8(r30)
 8423  00007ba8  ac230008	sw	8(r1),r3
 8424  00007bac  ac220004	sw	4(r1),r2
 8425  00007bb0  8c5f0000	lw	r31,(r2)
 8426  00007bb4  ac3f0000	sw	(r1),r31
 8427  00007bb8  ac410000	sw	(r2),r1
 8428  00007bbc  8c220000	lw	r2,(r1)
 8429  00007bc0  ac410004	sw	4(r2),r1
 8430  00007bc4  8c610008	lw	r1,8(r3)
 8431  00007bc8  20210001	addi	r1,r1,#1
 8432  00007bcc  ac610008	sw	8(r3),r1
 8433  00007bd0  8fa20000	lw	r2,0(r29)
 8434  00007bd4  8fa30004	lw	r3,4(r29)
 8435  00007bd8  8fdffff8	lw	r31,-8(r30)
 8436  00007bdc  001ee820	add	r29,r0,r30
 8437  00007be0  8fdefffc	lw	r30,-4(r30)
 8438  00007be4  4be00000	jr	r31
 8439  00007be8  54000000	nop
 8440  00007bec          	.endproc _QueueInsertAfter
 8441  00007bec          	.align 2
 8442  00007bec          	.proc _QueueInsertFirst
 8443  00007bec          	.global _QueueInsertFirst
 8444  00007bec          	_QueueInsertFirst:
 8445                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 8446  00007bec  afbefffc	sw	-4(r29),r30; push fp
 8447  00007bf0  001df020	add	r30,r0,r29; fp = sp
 8448  00007bf4  afbffff8	sw	-8(r29),r31; push ret addr
 8449  00007bf8  2fbd0010	subui	r29,r29,#16; alloc local storage
 8450  00007bfc  afa20000	sw	0(r29),r2
 8451  00007c00  afa30004	sw	4(r29),r3
 8452  00007c04  8fc30000	lw	r3,(r30)
 8453  00007c08  8fc10004	lw	r1,4(r30)
 8454  00007c0c  ac230008	sw	8(r1),r3
 8455  00007c10  ac230004	sw	4(r1),r3
 8456  00007c14  8c7f0000	lw	r31,(r3)
 8457  00007c18  ac3f0000	sw	(r1),r31
 8458  00007c1c  ac610000	sw	(r3),r1
 8459  00007c20  8c220000	lw	r2,(r1)
 8460  00007c24  ac410004	sw	4(r2),r1
 8461  00007c28  8c610008	lw	r1,8(r3)
 8462  00007c2c  20210001	addi	r1,r1,#1
 8463  00007c30  ac610008	sw	8(r3),r1
 8464  00007c34  8fa20000	lw	r2,0(r29)
 8465  00007c38  8fa30004	lw	r3,4(r29)
 8466  00007c3c  8fdffff8	lw	r31,-8(r30)
 8467  00007c40  001ee820	add	r29,r0,r30
 8468  00007c44  8fdefffc	lw	r30,-4(r30)
 8469  00007c48  4be00000	jr	r31
 8470  00007c4c  54000000	nop
 8471  00007c50          	.endproc _QueueInsertFirst
 8472  00007c50          	.align 2
 8473  00007c50          	.proc _QueueInsertLast
 8474  00007c50          	.global _QueueInsertLast
 8475  00007c50          	_QueueInsertLast:
 8476                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 8477  00007c50  afbefffc	sw	-4(r29),r30; push fp
 8478  00007c54  001df020	add	r30,r0,r29; fp = sp
 8479  00007c58  afbffff8	sw	-8(r29),r31; push ret addr
 8480  00007c5c  2fbd0010	subui	r29,r29,#16; alloc local storage
 8481  00007c60  afa20000	sw	0(r29),r2
 8482  00007c64  afa30004	sw	4(r29),r3
 8483  00007c68  8fc30000	lw	r3,(r30)
 8484  00007c6c  8fc10004	lw	r1,4(r30)
 8485  00007c70  8c620004	lw	r2,4(r3)
 8486  00007c74  ac230008	sw	8(r1),r3
 8487  00007c78  ac220004	sw	4(r1),r2
 8488  00007c7c  8c5f0000	lw	r31,(r2)
 8489  00007c80  ac3f0000	sw	(r1),r31
 8490  00007c84  ac410000	sw	(r2),r1
 8491  00007c88  8c220000	lw	r2,(r1)
 8492  00007c8c  ac410004	sw	4(r2),r1
 8493  00007c90  8c610008	lw	r1,8(r3)
 8494  00007c94  20210001	addi	r1,r1,#1
 8495  00007c98  ac610008	sw	8(r3),r1
 8496  00007c9c  8fa20000	lw	r2,0(r29)
 8497  00007ca0  8fa30004	lw	r3,4(r29)
 8498  00007ca4  8fdffff8	lw	r31,-8(r30)
 8499  00007ca8  001ee820	add	r29,r0,r30
 8500  00007cac  8fdefffc	lw	r30,-4(r30)
 8501  00007cb0  4be00000	jr	r31
 8502  00007cb4  54000000	nop
 8503  00007cb8          	.endproc _QueueInsertLast
 8504  00007cb8          	.align 2
 8505  00007cb8          	.proc _QueueRemove
 8506  00007cb8          	.global _QueueRemove
 8507  00007cb8          	_QueueRemove:
 8508                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 8509  00007cb8  afbefffc	sw	-4(r29),r30; push fp
 8510  00007cbc  001df020	add	r30,r0,r29; fp = sp
 8511  00007cc0  afbffff8	sw	-8(r29),r31; push ret addr
 8512  00007cc4  2fbd0010	subui	r29,r29,#16; alloc local storage
 8513  00007cc8  afa20000	sw	0(r29),r2
 8514  00007ccc  afa30004	sw	4(r29),r3
 8515  00007cd0  8fdf0000	lw	r31,(r30)
 8516  00007cd4  8fe10008	lw	r1,8(r31)
 8517  00007cd8  8c210008	lw	r1,8(r1)
 8518  00007cdc  6c210000	sgti	r1,r1,#0
 8519  00007ce0  1020002c	beqz	r1,L44_LF5
 8520  00007ce4  54000000	nop; not filled.
 8521  00007ce8  8fe10004	lw	r1,4(r31)
 8522  00007cec  8fe30000	lw	r3,(r31)
 8523  00007cf0  ac230000	sw	(r1),r3
 8524  00007cf4  8fe10000	lw	r1,(r31)
 8525  00007cf8  8fe30004	lw	r3,4(r31)
 8526  00007cfc  ac230004	sw	4(r1),r3
 8527  00007d00  8fe20008	lw	r2,8(r31)
 8528  00007d04  8c410008	lw	r1,8(r2)
 8529  00007d08  2021ffff	addi	r1,r1,#-1
 8530  00007d0c  ac410008	sw	8(r2),r1
 8531  00007d10          	L44_LF5:
 8532  00007d10  20030000	addi	r3,r0,#0
 8533  00007d14  afe30000	sw	(r31),r3
 8534  00007d18  8fa20000	lw	r2,0(r29)
 8535  00007d1c  8fa30004	lw	r3,4(r29)
 8536  00007d20  8fdffff8	lw	r31,-8(r30)
 8537  00007d24  001ee820	add	r29,r0,r30
 8538  00007d28  8fdefffc	lw	r30,-4(r30)
 8539  00007d2c  4be00000	jr	r31
 8540  00007d30  54000000	nop
 8541  00007d34          	.endproc _QueueRemove
 8542  00007d34          	.align 2
 8543  00007d34          	.proc _QueueLength
 8544  00007d34          	.global _QueueLength
 8545  00007d34          	_QueueLength:
 8546                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 8547  00007d34  afbefffc	sw	-4(r29),r30; push fp
 8548  00007d38  001df020	add	r30,r0,r29; fp = sp
 8549  00007d3c  afbffff8	sw	-8(r29),r31; push ret addr
 8550  00007d40  2fbd0008	subui	r29,r29,#8; alloc local storage
 8551  00007d44  8fc10000	lw	r1,(r30)
 8552  00007d48  8c210008	lw	r1,8(r1)
 8553  00007d4c  8fdffff8	lw	r31,-8(r30)
 8554  00007d50  001ee820	add	r29,r0,r30
 8555  00007d54  8fdefffc	lw	r30,-4(r30)
 8556  00007d58  4be00000	jr	r31
 8557  00007d5c  54000000	nop
 8558  00007d60          	.endproc _QueueLength
 8559  00007d60          	.align 2
 8560  00007d60          	.proc _QueueEmpty
 8561  00007d60          	.global _QueueEmpty
 8562  00007d60          	_QueueEmpty:
 8563                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 8564  00007d60  afbefffc	sw	-4(r29),r30; push fp
 8565  00007d64  001df020	add	r30,r0,r29; fp = sp
 8566  00007d68  afbffff8	sw	-8(r29),r31; push ret addr
 8567  00007d6c  2fbd0008	subui	r29,r29,#8; alloc local storage
 8568  00007d70  8fc10000	lw	r1,(r30)
 8569  00007d74  8c210008	lw	r1,8(r1)
 8570  00007d78  60210000	seqi	r1,r1,#0
 8571  00007d7c  8fdffff8	lw	r31,-8(r30)
 8572  00007d80  001ee820	add	r29,r0,r30
 8573  00007d84  8fdefffc	lw	r30,-4(r30)
 8574  00007d88  4be00000	jr	r31
 8575  00007d8c  54000000	nop
 8576  00007d90          	.endproc _QueueEmpty
 8577  00007d90          	.align 2
 8578  00007d90          	.proc _SemInit
 8579  00007d90          	.global _SemInit
 8580  00007d90          	_SemInit:
 8581                      ;  Function 'SemInit'; 0 bytes of locals, 2 regs to save.
 8582  00007d90  afbefffc	sw	-4(r29),r30; push fp
 8583  00007d94  001df020	add	r30,r0,r29; fp = sp
 8584  00007d98  afbffff8	sw	-8(r29),r31; push ret addr
 8585  00007d9c  2fbd0010	subui	r29,r29,#16; alloc local storage
 8586  00007da0  afa20000	sw	0(r29),r2
 8587  00007da4  afa30004	sw	4(r29),r3
 8588  00007da8  8fc20000	lw	r2,(r30)
 8589  00007dac  8fc30004	lw	r3,4(r30)
 8590  00007db0  23bdfff8	addi	r29,r29,#-8
 8591  00007db4  afa20000	sw	(r29),r2
 8592  00007db8  0ffff95c	jal	_QueueInit
 8593  00007dbc  54000000	nop; not filled.
 8594  00007dc0  ac43000c	sw	12(r2),r3
 8595  00007dc4  23bd0008	addi	r29,r29,#8
 8596  00007dc8  8fa20000	lw	r2,0(r29)
 8597  00007dcc  8fa30004	lw	r3,4(r29)
 8598  00007dd0  8fdffff8	lw	r31,-8(r30)
 8599  00007dd4  001ee820	add	r29,r0,r30
 8600  00007dd8  8fdefffc	lw	r30,-4(r30)
 8601  00007ddc  4be00000	jr	r31
 8602  00007de0  54000000	nop
 8603  00007de4          	.endproc _SemInit
 8604  00007de4          	.data
 8605  00012d1c          	.align 2
 8606  00012d1c          	LC0_LF5:
 8607  00012d1c  4f6c6420	.ascii "Old interrupt value was 0x%x.\n\000"
 8607  00012d20  696e7465	
 8607  00012d24  72727570	
 8607  00012d28  74207661	
 8607  00012d2c  6c756520	
 8607  00012d30  77617320	
 8607  00012d34  30782578	
 8607  00012d38  2e0a00  	
 8608  00012d3b          	.align 2
 8609  00012d3c          	LC1_LF5:
 8610  00012d3c  50726f63	.ascii "Proc 0x%x waiting on sem 0x%x, count=%d.\n\000"
 8610  00012d40  20307825	
 8610  00012d44  78207761	
 8610  00012d48  6974696e	
 8610  00012d4c  67206f6e	
 8610  00012d50  2073656d	
 8610  00012d54  20307825	
 8610  00012d58  782c2063	
 8610  00012d5c  6f756e74	
 8610  00012d60  3d25642e	
 8610  00012d64  0a00    	
 8611  00012d66          	.align 2
 8612  00012d68          	LC2_LF5:
 8613  00012d68  53757370	.ascii "Suspending current proc (0x%x).\n\000"
 8613  00012d6c  656e6469	
 8613  00012d70  6e672063	
 8613  00012d74  75727265	
 8613  00012d78  6e742070	
 8613  00012d7c  726f6320	
 8613  00012d80  28307825	
 8613  00012d84  78292e0a	
 8613  00012d88  00      	
 8614  00012d89          	.text
 8615  00007de4          	.align 2
 8616  00007de4          	.proc _SemWait
 8617  00007de4          	.global _SemWait
 8618  00007de4          	_SemWait:
 8619                      ;  Function 'SemWait'; 0 bytes of locals, 6 regs to save.
 8620  00007de4  afbefffc	sw	-4(r29),r30; push fp
 8621  00007de8  001df020	add	r30,r0,r29; fp = sp
 8622  00007dec  afbffff8	sw	-8(r29),r31; push ret addr
 8623  00007df0  2fbd0020	subui	r29,r29,#32; alloc local storage
 8624  00007df4  afa20000	sw	0(r29),r2
 8625  00007df8  afa30004	sw	4(r29),r3
 8626  00007dfc  afa40008	sw	8(r29),r4
 8627  00007e00  afa5000c	sw	12(r29),r5
 8628  00007e04  afa60010	sw	16(r29),r6
 8629  00007e08  afa70014	sw	20(r29),r7
 8630  00007e0c  8fc40000	lw	r4,(r30)
 8631  00007e10  23bdfff8	addi	r29,r29,#-8
 8632  00007e14  2007000f	addi	r7,r0,#15
 8633  00007e18  afa70000	sw	(r29),r7
 8634  00007e1c  0c00220c	jal	_SetIntrs
 8635  00007e20  54000000	nop; not filled.
 8636  00007e24  00013020	add	r6,r0,r1
 8637  00007e28  23bd0008	addi	r29,r29,#8
 8638  00007e2c  23bdfff8	addi	r29,r29,#-8
 8639  00007e30  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 8640  00007e34  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 8641  00007e38  afa20000	sw	(r29),r2
 8642  00007e3c  20070049	addi	r7,r0,#73
 8643  00007e40  afa70004	sw	4(r29),r7
 8644  00007e44  0fffbcd4	jal	_dindex
 8645  00007e48  54000000	nop; not filled.
 8646  00007e4c  23bd0008	addi	r29,r29,#8
 8647  00007e50  64210000	snei	r1,r1,#0
 8648  00007e54  1420002c	bnez	r1,L56_LF5
 8649  00007e58  54000000	nop; not filled.
 8650  00007e5c  23bdfff8	addi	r29,r29,#-8
 8651  00007e60  afa20000	sw	(r29),r2
 8652  00007e64  2007002b	addi	r7,r0,#43
 8653  00007e68  afa70004	sw	4(r29),r7
 8654  00007e6c  0fffbcac	jal	_dindex
 8655  00007e70  54000000	nop; not filled.
 8656  00007e74  23bd0008	addi	r29,r29,#8
 8657  00007e78  64210000	snei	r1,r1,#0
 8658  00007e7c  10200024	beqz	r1,L55_LF5
 8659  00007e80  54000000	nop; not filled.
 8660  00007e84          	L56_LF5:
 8661  00007e84  23bdfff8	addi	r29,r29,#-8
 8662  00007e88  3c070001	lhi	r7,((LC0_LF5)>>16)&0xffff
 8663  00007e8c  24e72d1c	addui	r7,r7,(LC0_LF5)&0xffff
 8664  00007e90  afa70000	sw	(r29),r7
 8665  00007e94  afa60004	sw	4(r29),r6
 8666  00007e98  0c0022e4	jal	_printf
 8667  00007e9c  54000000	nop; not filled.
 8668  00007ea0  23bd0008	addi	r29,r29,#8
 8669  00007ea4          	L55_LF5:
 8670  00007ea4  23bdfff8	addi	r29,r29,#-8
 8671  00007ea8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 8672  00007eac  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 8673  00007eb0  afa20000	sw	(r29),r2
 8674  00007eb4  20070073	addi	r7,r0,#115
 8675  00007eb8  afa70004	sw	4(r29),r7
 8676  00007ebc  0fffbc5c	jal	_dindex
 8677  00007ec0  54000000	nop; not filled.
 8678  00007ec4  23bd0008	addi	r29,r29,#8
 8679  00007ec8  64210000	snei	r1,r1,#0
 8680  00007ecc  1420002c	bnez	r1,L58_LF5
 8681  00007ed0  54000000	nop; not filled.
 8682  00007ed4  23bdfff8	addi	r29,r29,#-8
 8683  00007ed8  afa20000	sw	(r29),r2
 8684  00007edc  2007002b	addi	r7,r0,#43
 8685  00007ee0  afa70004	sw	4(r29),r7
 8686  00007ee4  0fffbc34	jal	_dindex
 8687  00007ee8  54000000	nop; not filled.
 8688  00007eec  23bd0008	addi	r29,r29,#8
 8689  00007ef0  64210000	snei	r1,r1,#0
 8690  00007ef4  1020003c	beqz	r1,L57_LF5
 8691  00007ef8  54000000	nop; not filled.
 8692  00007efc          	L58_LF5:
 8693  00007efc  23bdfff0	addi	r29,r29,#-16
 8694  00007f00  3c070001	lhi	r7,((LC1_LF5)>>16)&0xffff
 8695  00007f04  24e72d3c	addui	r7,r7,(LC1_LF5)&0xffff
 8696  00007f08  afa70000	sw	(r29),r7
 8697  00007f0c  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 8698  00007f10  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 8699  00007f14  8c210000	lw	r1,(r1)
 8700  00007f18  afa10004	sw	4(r29),r1
 8701  00007f1c  afa40008	sw	8(r29),r4
 8702  00007f20  8c87000c	lw	r7,12(r4)
 8703  00007f24  afa7000c	sw	12(r29),r7
 8704  00007f28  0c002254	jal	_printf
 8705  00007f2c  54000000	nop; not filled.
 8706  00007f30  23bd0010	addi	r29,r29,#16
 8707  00007f34          	L57_LF5:
 8708  00007f34  8c81000c	lw	r1,12(r4)
 8709  00007f38  2021ffff	addi	r1,r1,#-1
 8710  00007f3c  ac81000c	sw	12(r4),r1
 8711  00007f40  68210000	slti	r1,r1,#0
 8712  00007f44  102000d8	beqz	r1,L59_LF5
 8713  00007f48  54000000	nop; not filled.
 8714  00007f4c  0ffff8b8	jal	_QueueAllocLink
 8715  00007f50  54000000	nop; not filled.
 8716  00007f54  00011020	add	r2,r0,r1
 8717  00007f58  3c050000	lhi	r5,((_currentPCB)>>16)&0xffff
 8718  00007f5c  24a5fcf0	addui	r5,r5,(_currentPCB)&0xffff
 8719  00007f60  8ca10000	lw	r1,(r5)
 8720  00007f64  20070000	addi	r7,r0,#0
 8721  00007f68  ac470000	sw	(r2),r7
 8722  00007f6c  ac41000c	sw	12(r2),r1
 8723  00007f70  23bdfff8	addi	r29,r29,#-8
 8724  00007f74  3c030000	lhi	r3,((_debugstr)>>16)&0xffff
 8725  00007f78  2463fc26	addui	r3,r3,(_debugstr)&0xffff
 8726  00007f7c  afa30000	sw	(r29),r3
 8727  00007f80  20070073	addi	r7,r0,#115
 8728  00007f84  afa70004	sw	4(r29),r7
 8729  00007f88  0fffbb90	jal	_dindex
 8730  00007f8c  54000000	nop; not filled.
 8731  00007f90  23bd0008	addi	r29,r29,#8
 8732  00007f94  64210000	snei	r1,r1,#0
 8733  00007f98  1420002c	bnez	r1,L62_LF5
 8734  00007f9c  54000000	nop; not filled.
 8735  00007fa0  23bdfff8	addi	r29,r29,#-8
 8736  00007fa4  afa30000	sw	(r29),r3
 8737  00007fa8  2007002b	addi	r7,r0,#43
 8738  00007fac  afa70004	sw	4(r29),r7
 8739  00007fb0  0fffbb68	jal	_dindex
 8740  00007fb4  54000000	nop; not filled.
 8741  00007fb8  23bd0008	addi	r29,r29,#8
 8742  00007fbc  64210000	snei	r1,r1,#0
 8743  00007fc0  10200028	beqz	r1,L61_LF5
 8744  00007fc4  54000000	nop; not filled.
 8745  00007fc8          	L62_LF5:
 8746  00007fc8  23bdfff8	addi	r29,r29,#-8
 8747  00007fcc  3c070001	lhi	r7,((LC2_LF5)>>16)&0xffff
 8748  00007fd0  24e72d68	addui	r7,r7,(LC2_LF5)&0xffff
 8749  00007fd4  afa70000	sw	(r29),r7
 8750  00007fd8  8ca10000	lw	r1,(r5)
 8751  00007fdc  afa10004	sw	4(r29),r1
 8752  00007fe0  0c00219c	jal	_printf
 8753  00007fe4  54000000	nop; not filled.
 8754  00007fe8  23bd0008	addi	r29,r29,#8
 8755  00007fec          	L61_LF5:
 8756  00007fec  8c810004	lw	r1,4(r4)
 8757  00007ff0  ac440008	sw	8(r2),r4
 8758  00007ff4  ac410004	sw	4(r2),r1
 8759  00007ff8  8c270000	lw	r7,(r1)
 8760  00007ffc  ac470000	sw	(r2),r7
 8761  00008000  ac220000	sw	(r1),r2
 8762  00008004  8c410000	lw	r1,(r2)
 8763  00008008  ac220004	sw	4(r1),r2
 8764  0000800c  8c810008	lw	r1,8(r4)
 8765  00008010  20210001	addi	r1,r1,#1
 8766  00008014  ac810008	sw	8(r4),r1
 8767  00008018  0c00205c	jal	_ProcessSleep
 8768  0000801c  54000000	nop; not filled.
 8769  00008020          	L59_LF5:
 8770  00008020  23bdfff8	addi	r29,r29,#-8
 8771  00008024  afa60000	sw	(r29),r6
 8772  00008028  0c002000	jal	_SetIntrs
 8773  0000802c  54000000	nop; not filled.
 8774  00008030  23bd0008	addi	r29,r29,#8
 8775  00008034  8fa20000	lw	r2,0(r29)
 8776  00008038  8fa30004	lw	r3,4(r29)
 8777  0000803c  8fa40008	lw	r4,8(r29)
 8778  00008040  8fa5000c	lw	r5,12(r29)
 8779  00008044  8fa60010	lw	r6,16(r29)
 8780  00008048  8fa70014	lw	r7,20(r29)
 8781  0000804c  8fdffff8	lw	r31,-8(r30)
 8782  00008050  001ee820	add	r29,r0,r30
 8783  00008054  8fdefffc	lw	r30,-4(r30)
 8784  00008058  4be00000	jr	r31
 8785  0000805c  54000000	nop
 8786  00008060          	.endproc _SemWait
 8787  00008060          	.data
 8788  00012d89          	.align 2
 8789  00012d8c          	LC3_LF5:
 8790  00012d8c  5369676e	.ascii "Signalling on sem 0x%x, count=%d.\n\000"
 8790  00012d90  616c6c69	
 8790  00012d94  6e67206f	
 8790  00012d98  6e207365	
 8790  00012d9c  6d203078	
 8790  00012da0  25782c20	
 8790  00012da4  636f756e	
 8790  00012da8  743d2564	
 8790  00012dac  2e0a00  	
 8791  00012daf          	.align 2
 8792  00012db0          	LC4_LF5:
 8793  00012db0  57616b69	.ascii "Waking up PCB 0x%x.\n\000"
 8793  00012db4  6e672075	
 8793  00012db8  70205043	
 8793  00012dbc  42203078	
 8793  00012dc0  25782e0a	
 8793  00012dc4  00      	
 8794  00012dc5          	.text
 8795  00008060          	.align 2
 8796  00008060          	.proc _SemSignal
 8797  00008060          	.global _SemSignal
 8798  00008060          	_SemSignal:
 8799                      ;  Function 'SemSignal'; 0 bytes of locals, 4 regs to save.
 8800  00008060  afbefffc	sw	-4(r29),r30; push fp
 8801  00008064  001df020	add	r30,r0,r29; fp = sp
 8802  00008068  afbffff8	sw	-8(r29),r31; push ret addr
 8803  0000806c  2fbd0018	subui	r29,r29,#24; alloc local storage
 8804  00008070  afa20000	sw	0(r29),r2
 8805  00008074  afa30004	sw	4(r29),r3
 8806  00008078  afa40008	sw	8(r29),r4
 8807  0000807c  afa5000c	sw	12(r29),r5
 8808  00008080  8fc20000	lw	r2,(r30)
 8809  00008084  23bdfff8	addi	r29,r29,#-8
 8810  00008088  2005000f	addi	r5,r0,#15
 8811  0000808c  afa50000	sw	(r29),r5
 8812  00008090  0c001f98	jal	_SetIntrs
 8813  00008094  54000000	nop; not filled.
 8814  00008098  00012020	add	r4,r0,r1
 8815  0000809c  23bd0008	addi	r29,r29,#8
 8816  000080a0  23bdfff8	addi	r29,r29,#-8
 8817  000080a4  3c030000	lhi	r3,((_debugstr)>>16)&0xffff
 8818  000080a8  2463fc26	addui	r3,r3,(_debugstr)&0xffff
 8819  000080ac  afa30000	sw	(r29),r3
 8820  000080b0  20050073	addi	r5,r0,#115
 8821  000080b4  afa50004	sw	4(r29),r5
 8822  000080b8  0fffba60	jal	_dindex
 8823  000080bc  54000000	nop; not filled.
 8824  000080c0  23bd0008	addi	r29,r29,#8
 8825  000080c4  64210000	snei	r1,r1,#0
 8826  000080c8  1420002c	bnez	r1,L70_LF5
 8827  000080cc  54000000	nop; not filled.
 8828  000080d0  23bdfff8	addi	r29,r29,#-8
 8829  000080d4  afa30000	sw	(r29),r3
 8830  000080d8  2005002b	addi	r5,r0,#43
 8831  000080dc  afa50004	sw	4(r29),r5
 8832  000080e0  0fffba38	jal	_dindex
 8833  000080e4  54000000	nop; not filled.
 8834  000080e8  23bd0008	addi	r29,r29,#8
 8835  000080ec  64210000	snei	r1,r1,#0
 8836  000080f0  1020002c	beqz	r1,L69_LF5
 8837  000080f4  54000000	nop; not filled.
 8838  000080f8          	L70_LF5:
 8839  000080f8  23bdfff0	addi	r29,r29,#-16
 8840  000080fc  3c050001	lhi	r5,((LC3_LF5)>>16)&0xffff
 8841  00008100  24a52d8c	addui	r5,r5,(LC3_LF5)&0xffff
 8842  00008104  afa50000	sw	(r29),r5
 8843  00008108  afa20004	sw	4(r29),r2
 8844  0000810c  8c45000c	lw	r5,12(r2)
 8845  00008110  afa50008	sw	8(r29),r5
 8846  00008114  0c002068	jal	_printf
 8847  00008118  54000000	nop; not filled.
 8848  0000811c  23bd0010	addi	r29,r29,#16
 8849  00008120          	L69_LF5:
 8850  00008120  8c41000c	lw	r1,12(r2)
 8851  00008124  20210001	addi	r1,r1,#1
 8852  00008128  ac41000c	sw	12(r2),r1
 8853  0000812c  70210000	slei	r1,r1,#0
 8854  00008130  102000ec	beqz	r1,L71_LF5
 8855  00008134  54000000	nop; not filled.
 8856  00008138  8c430000	lw	r3,(r2)
 8857  0000813c  8c610008	lw	r1,8(r3)
 8858  00008140  8c210008	lw	r1,8(r1)
 8859  00008144  6c210000	sgti	r1,r1,#0
 8860  00008148  1020002c	beqz	r1,L74_LF5
 8861  0000814c  54000000	nop; not filled.
 8862  00008150  8c610004	lw	r1,4(r3)
 8863  00008154  8c650000	lw	r5,(r3)
 8864  00008158  ac250000	sw	(r1),r5
 8865  0000815c  8c610000	lw	r1,(r3)
 8866  00008160  8c650004	lw	r5,4(r3)
 8867  00008164  ac250004	sw	4(r1),r5
 8868  00008168  8c620008	lw	r2,8(r3)
 8869  0000816c  8c410008	lw	r1,8(r2)
 8870  00008170  2021ffff	addi	r1,r1,#-1
 8871  00008174  ac410008	sw	8(r2),r1
 8872  00008178          	L74_LF5:
 8873  00008178  20050000	addi	r5,r0,#0
 8874  0000817c  ac650000	sw	(r3),r5
 8875  00008180  23bdfff8	addi	r29,r29,#-8
 8876  00008184  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 8877  00008188  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 8878  0000818c  afa20000	sw	(r29),r2
 8879  00008190  20050073	addi	r5,r0,#115
 8880  00008194  afa50004	sw	4(r29),r5
 8881  00008198  0fffb980	jal	_dindex
 8882  0000819c  54000000	nop; not filled.
 8883  000081a0  23bd0008	addi	r29,r29,#8
 8884  000081a4  64210000	snei	r1,r1,#0
 8885  000081a8  1420002c	bnez	r1,L76_LF5
 8886  000081ac  54000000	nop; not filled.
 8887  000081b0  23bdfff8	addi	r29,r29,#-8
 8888  000081b4  afa20000	sw	(r29),r2
 8889  000081b8  2005002b	addi	r5,r0,#43
 8890  000081bc  afa50004	sw	4(r29),r5
 8891  000081c0  0fffb958	jal	_dindex
 8892  000081c4  54000000	nop; not filled.
 8893  000081c8  23bd0008	addi	r29,r29,#8
 8894  000081cc  64210000	snei	r1,r1,#0
 8895  000081d0  10200028	beqz	r1,L75_LF5
 8896  000081d4  54000000	nop; not filled.
 8897  000081d8          	L76_LF5:
 8898  000081d8  23bdfff8	addi	r29,r29,#-8
 8899  000081dc  3c050001	lhi	r5,((LC4_LF5)>>16)&0xffff
 8900  000081e0  24a52db0	addui	r5,r5,(LC4_LF5)&0xffff
 8901  000081e4  afa50000	sw	(r29),r5
 8902  000081e8  8c61000c	lw	r1,12(r3)
 8903  000081ec  afa10004	sw	4(r29),r1
 8904  000081f0  0c001f8c	jal	_printf
 8905  000081f4  54000000	nop; not filled.
 8906  000081f8  23bd0008	addi	r29,r29,#8
 8907  000081fc          	L75_LF5:
 8908  000081fc  23bdfff8	addi	r29,r29,#-8
 8909  00008200  8c65000c	lw	r5,12(r3)
 8910  00008204  afa50000	sw	(r29),r5
 8911  00008208  0fffcc64	jal	_ProcessWakeup
 8912  0000820c  54000000	nop; not filled.
 8913  00008210  afa30000	sw	(r29),r3
 8914  00008214  0ffff538	jal	_QueueFreeLink
 8915  00008218  54000000	nop; not filled.
 8916  0000821c  23bd0008	addi	r29,r29,#8
 8917  00008220          	L71_LF5:
 8918  00008220  23bdfff8	addi	r29,r29,#-8
 8919  00008224  afa40000	sw	(r29),r4
 8920  00008228  0c001e00	jal	_SetIntrs
 8921  0000822c  54000000	nop; not filled.
 8922  00008230  23bd0008	addi	r29,r29,#8
 8923  00008234  8fa20000	lw	r2,0(r29)
 8924  00008238  8fa30004	lw	r3,4(r29)
 8925  0000823c  8fa40008	lw	r4,8(r29)
 8926  00008240  8fa5000c	lw	r5,12(r29)
 8927  00008244  8fdffff8	lw	r31,-8(r30)
 8928  00008248  001ee820	add	r29,r0,r30
 8929  0000824c  8fdefffc	lw	r30,-4(r30)
 8930  00008250  4be00000	jr	r31
 8931  00008254  54000000	nop
 8932  00008258          	.endproc _SemSignal
 8933  00008258          	.align 2
 8934  00008258          	.proc _LockInit
 8935  00008258          	.global _LockInit
 8936  00008258          	_LockInit:
 8937                      ;  Function 'LockInit'; 0 bytes of locals, 0 regs to save.
 8938  00008258  afbefffc	sw	-4(r29),r30; push fp
 8939  0000825c  001df020	add	r30,r0,r29; fp = sp
 8940  00008260  afbffff8	sw	-8(r29),r31; push ret addr
 8941  00008264  2fbd0008	subui	r29,r29,#8; alloc local storage
 8942  00008268  8fdffff8	lw	r31,-8(r30)
 8943  0000826c  001ee820	add	r29,r0,r30
 8944  00008270  8fdefffc	lw	r30,-4(r30)
 8945  00008274  4be00000	jr	r31
 8946  00008278  54000000	nop
 8947  0000827c          	.endproc _LockInit
 8948  0000827c          	.align 2
 8949  0000827c          	.proc _LockAcquire
 8950  0000827c          	.global _LockAcquire
 8951  0000827c          	_LockAcquire:
 8952                      ;  Function 'LockAcquire'; 0 bytes of locals, 0 regs to save.
 8953  0000827c  afbefffc	sw	-4(r29),r30; push fp
 8954  00008280  001df020	add	r30,r0,r29; fp = sp
 8955  00008284  afbffff8	sw	-8(r29),r31; push ret addr
 8956  00008288  2fbd0008	subui	r29,r29,#8; alloc local storage
 8957  0000828c  8fdffff8	lw	r31,-8(r30)
 8958  00008290  001ee820	add	r29,r0,r30
 8959  00008294  8fdefffc	lw	r30,-4(r30)
 8960  00008298  4be00000	jr	r31
 8961  0000829c  54000000	nop
 8962  000082a0          	.endproc _LockAcquire
 8963  000082a0          	.align 2
 8964  000082a0          	.proc _LockRelease
 8965  000082a0          	.global _LockRelease
 8966  000082a0          	_LockRelease:
 8967                      ;  Function 'LockRelease'; 0 bytes of locals, 0 regs to save.
 8968  000082a0  afbefffc	sw	-4(r29),r30; push fp
 8969  000082a4  001df020	add	r30,r0,r29; fp = sp
 8970  000082a8  afbffff8	sw	-8(r29),r31; push ret addr
 8971  000082ac  2fbd0008	subui	r29,r29,#8; alloc local storage
 8972  000082b0  8fdffff8	lw	r31,-8(r30)
 8973  000082b4  001ee820	add	r29,r0,r30
 8974  000082b8  8fdefffc	lw	r30,-4(r30)
 8975  000082bc  4be00000	jr	r31
 8976  000082c0  54000000	nop
 8977  000082c4          	.endproc _LockRelease
 8978  000082c4          	.align 2
 8979  000082c4          	.proc _CondInit
 8980  000082c4          	.global _CondInit
 8981  000082c4          	_CondInit:
 8982                      ;  Function 'CondInit'; 0 bytes of locals, 0 regs to save.
 8983  000082c4  afbefffc	sw	-4(r29),r30; push fp
 8984  000082c8  001df020	add	r30,r0,r29; fp = sp
 8985  000082cc  afbffff8	sw	-8(r29),r31; push ret addr
 8986  000082d0  2fbd0008	subui	r29,r29,#8; alloc local storage
 8987  000082d4  8fdffff8	lw	r31,-8(r30)
 8988  000082d8  001ee820	add	r29,r0,r30
 8989  000082dc  8fdefffc	lw	r30,-4(r30)
 8990  000082e0  4be00000	jr	r31
 8991  000082e4  54000000	nop
 8992  000082e8          	.endproc _CondInit
 8993  000082e8          	.align 2
 8994  000082e8          	.proc _CondWait
 8995  000082e8          	.global _CondWait
 8996  000082e8          	_CondWait:
 8997                      ;  Function 'CondWait'; 0 bytes of locals, 0 regs to save.
 8998  000082e8  afbefffc	sw	-4(r29),r30; push fp
 8999  000082ec  001df020	add	r30,r0,r29; fp = sp
 9000  000082f0  afbffff8	sw	-8(r29),r31; push ret addr
 9001  000082f4  2fbd0008	subui	r29,r29,#8; alloc local storage
 9002  000082f8  8fdffff8	lw	r31,-8(r30)
 9003  000082fc  001ee820	add	r29,r0,r30
 9004  00008300  8fdefffc	lw	r30,-4(r30)
 9005  00008304  4be00000	jr	r31
 9006  00008308  54000000	nop
 9007  0000830c          	.endproc _CondWait
 9008  0000830c          	.align 2
 9009  0000830c          	.proc _CondSignal
 9010  0000830c          	.global _CondSignal
 9011  0000830c          	_CondSignal:
 9012                      ;  Function 'CondSignal'; 0 bytes of locals, 0 regs to save.
 9013  0000830c  afbefffc	sw	-4(r29),r30; push fp
 9014  00008310  001df020	add	r30,r0,r29; fp = sp
 9015  00008314  afbffff8	sw	-8(r29),r31; push ret addr
 9016  00008318  2fbd0008	subui	r29,r29,#8; alloc local storage
 9017  0000831c  8fdffff8	lw	r31,-8(r30)
 9018  00008320  001ee820	add	r29,r0,r30
 9019  00008324  8fdefffc	lw	r30,-4(r30)
 9020  00008328  4be00000	jr	r31
 9021  0000832c  54000000	nop
 9022  00008330          	.endproc _CondSignal
 9023  00008330          	.align 2
 9024  00008330          	.proc _CondBroadcast
 9025  00008330          	.global _CondBroadcast
 9026  00008330          	_CondBroadcast:
 9027                      ;  Function 'CondBroadcast'; 0 bytes of locals, 0 regs to save.
 9028  00008330  afbefffc	sw	-4(r29),r30; push fp
 9029  00008334  001df020	add	r30,r0,r29; fp = sp
 9030  00008338  afbffff8	sw	-8(r29),r31; push ret addr
 9031  0000833c  2fbd0008	subui	r29,r29,#8; alloc local storage
 9032  00008340  8fdffff8	lw	r31,-8(r30)
 9033  00008344  001ee820	add	r29,r0,r30
 9034  00008348  8fdefffc	lw	r30,-4(r30)
 9035  0000834c  4be00000	jr	r31
 9036  00008350  54000000	nop
 9037  00008354          	.endproc _CondBroadcast
 9038                      ; Compiled by GCC
 9040  00008354          	.align 2
 9041  00008354          	.proc _isspace
 9042  00008354          	.global _isspace
 9043  00008354          	_isspace:
 9044                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
 9045  00008354  afbefffc	sw	-4(r29),r30; push fp
 9046  00008358  001df020	add	r30,r0,r29; fp = sp
 9047  0000835c  afbffff8	sw	-8(r29),r31; push ret addr
 9048  00008360  2fbd0010	subui	r29,r29,#16; alloc local storage
 9049  00008364  afa20000	sw	0(r29),r2
 9050  00008368  83c20003	lb	r2,3(r30)
 9051  0000836c  201f0000	addi	r31,r0,#0
 9052  00008370  304100ff	andi	r1,r2,#0x00ff
 9053  00008374  60210020	seqi	r1,r1,#32
 9054  00008378  14200018	bnez	r1,L6_LF6
 9055  0000837c  54000000	nop; not filled.
 9056  00008380  2041fff7	addi	r1,r2,#-9
 9057  00008384  302100ff	andi	r1,r1,#0x00ff
 9058  00008388  70210001	sleui	r1,r1,#1
 9059  0000838c  10200008	beqz	r1,L5_LF6
 9060  00008390  54000000	nop; not filled.
 9061  00008394          	L6_LF6:
 9062  00008394  201f0001	addi	r31,r0,#1
 9063  00008398          	L5_LF6:
 9064  00008398  001f0820	add	r1,r0,r31
 9065  0000839c  8fa20000	lw	r2,0(r29)
 9066  000083a0  8fdffff8	lw	r31,-8(r30)
 9067  000083a4  001ee820	add	r29,r0,r30
 9068  000083a8  8fdefffc	lw	r30,-4(r30)
 9069  000083ac  4be00000	jr	r31
 9070  000083b0  54000000	nop
 9071  000083b4          	.endproc _isspace
 9072  000083b4          	.align 2
 9073  000083b4          	.proc _isxdigit
 9074  000083b4          	.global _isxdigit
 9075  000083b4          	_isxdigit:
 9076                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
 9077  000083b4  afbefffc	sw	-4(r29),r30; push fp
 9078  000083b8  001df020	add	r30,r0,r29; fp = sp
 9079  000083bc  afbffff8	sw	-8(r29),r31; push ret addr
 9080  000083c0  2fbd0010	subui	r29,r29,#16; alloc local storage
 9081  000083c4  afa20000	sw	0(r29),r2
 9082  000083c8  83df0003	lb	r31,3(r30)
 9083  000083cc  20020000	addi	r2,r0,#0
 9084  000083d0  23e1ffd0	addi	r1,r31,#-48
 9085  000083d4  302100ff	andi	r1,r1,#0x00ff
 9086  000083d8  70210009	sleui	r1,r1,#9
 9087  000083dc  14200028	bnez	r1,L12_LF6
 9088  000083e0  54000000	nop; not filled.
 9089  000083e4  23e1ff9f	addi	r1,r31,#-97
 9090  000083e8  302100ff	andi	r1,r1,#0x00ff
 9091  000083ec  70210005	sleui	r1,r1,#5
 9092  000083f0  14200014	bnez	r1,L12_LF6
 9093  000083f4  54000000	nop; not filled.
 9094  000083f8  33e100ff	andi	r1,r31,#0x00ff
 9095  000083fc  64210041	snei	r1,r1,#65
 9096  00008400  14200008	bnez	r1,L11_LF6
 9097  00008404  54000000	nop; not filled.
 9098  00008408          	L12_LF6:
 9099  00008408  20020001	addi	r2,r0,#1
 9100  0000840c          	L11_LF6:
 9101  0000840c  00020820	add	r1,r0,r2
 9102  00008410  8fa20000	lw	r2,0(r29)
 9103  00008414  8fdffff8	lw	r31,-8(r30)
 9104  00008418  001ee820	add	r29,r0,r30
 9105  0000841c  8fdefffc	lw	r30,-4(r30)
 9106  00008420  4be00000	jr	r31
 9107  00008424  54000000	nop
 9108  00008428          	.endproc _isxdigit
 9109  00008428          	.align 2
 9110  00008428          	.proc _DisableIntrs
 9111  00008428          	.global _DisableIntrs
 9112  00008428          	_DisableIntrs:
 9113                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
 9114  00008428  afbefffc	sw	-4(r29),r30; push fp
 9115  0000842c  001df020	add	r30,r0,r29; fp = sp
 9116  00008430  afbffff8	sw	-8(r29),r31; push ret addr
 9117  00008434  2fbd0010	subui	r29,r29,#16; alloc local storage
 9118  00008438  afa20000	sw	0(r29),r2
 9119  0000843c  23bdfff8	addi	r29,r29,#-8
 9120  00008440  2002000f	addi	r2,r0,#15
 9121  00008444  afa20000	sw	(r29),r2
 9122  00008448  0c001be0	jal	_SetIntrs
 9123  0000844c  54000000	nop; not filled.
 9124  00008450  23bd0008	addi	r29,r29,#8
 9125  00008454  8fa20000	lw	r2,0(r29)
 9126  00008458  8fdffff8	lw	r31,-8(r30)
 9127  0000845c  001ee820	add	r29,r0,r30
 9128  00008460  8fdefffc	lw	r30,-4(r30)
 9129  00008464  4be00000	jr	r31
 9130  00008468  54000000	nop
 9131  0000846c          	.endproc _DisableIntrs
 9132  0000846c          	.align 2
 9133  0000846c          	.proc _EnableIntrs
 9134  0000846c          	.global _EnableIntrs
 9135  0000846c          	_EnableIntrs:
 9136                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
 9137  0000846c  afbefffc	sw	-4(r29),r30; push fp
 9138  00008470  001df020	add	r30,r0,r29; fp = sp
 9139  00008474  afbffff8	sw	-8(r29),r31; push ret addr
 9140  00008478  2fbd0010	subui	r29,r29,#16; alloc local storage
 9141  0000847c  afa20000	sw	0(r29),r2
 9142  00008480  23bdfff8	addi	r29,r29,#-8
 9143  00008484  20020000	addi	r2,r0,#0
 9144  00008488  afa20000	sw	(r29),r2
 9145  0000848c  0c001b9c	jal	_SetIntrs
 9146  00008490  54000000	nop; not filled.
 9147  00008494  23bd0008	addi	r29,r29,#8
 9148  00008498  8fa20000	lw	r2,0(r29)
 9149  0000849c  8fdffff8	lw	r31,-8(r30)
 9150  000084a0  001ee820	add	r29,r0,r30
 9151  000084a4  8fdefffc	lw	r30,-4(r30)
 9152  000084a8  4be00000	jr	r31
 9153  000084ac  54000000	nop
 9154  000084b0          	.endproc _EnableIntrs
 9155  000084b0          	.align 2
 9156  000084b0          	.proc _RestoreIntrs
 9157  000084b0          	.global _RestoreIntrs
 9158  000084b0          	_RestoreIntrs:
 9159                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
 9160  000084b0  afbefffc	sw	-4(r29),r30; push fp
 9161  000084b4  001df020	add	r30,r0,r29; fp = sp
 9162  000084b8  afbffff8	sw	-8(r29),r31; push ret addr
 9163  000084bc  2fbd0010	subui	r29,r29,#16; alloc local storage
 9164  000084c0  afa20000	sw	0(r29),r2
 9165  000084c4  23bdfff8	addi	r29,r29,#-8
 9166  000084c8  8fc20000	lw	r2,(r30)
 9167  000084cc  afa20000	sw	(r29),r2
 9168  000084d0  0c001b58	jal	_SetIntrs
 9169  000084d4  54000000	nop; not filled.
 9170  000084d8  23bd0008	addi	r29,r29,#8
 9171  000084dc  8fa20000	lw	r2,0(r29)
 9172  000084e0  8fdffff8	lw	r31,-8(r30)
 9173  000084e4  001ee820	add	r29,r0,r30
 9174  000084e8  8fdefffc	lw	r30,-4(r30)
 9175  000084ec  4be00000	jr	r31
 9176  000084f0  54000000	nop
 9177  000084f4          	.endproc _RestoreIntrs
 9178  000084f4          	.align 2
 9179  000084f4          	.proc _QueueLinkInit
 9180  000084f4          	.global _QueueLinkInit
 9181  000084f4          	_QueueLinkInit:
 9182                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
 9183  000084f4  afbefffc	sw	-4(r29),r30; push fp
 9184  000084f8  001df020	add	r30,r0,r29; fp = sp
 9185  000084fc  afbffff8	sw	-8(r29),r31; push ret addr
 9186  00008500  2fbd0010	subui	r29,r29,#16; alloc local storage
 9187  00008504  afa20000	sw	0(r29),r2
 9188  00008508  8fc10000	lw	r1,(r30)
 9189  0000850c  8fc20004	lw	r2,4(r30)
 9190  00008510  201f0000	addi	r31,r0,#0
 9191  00008514  ac3f0000	sw	(r1),r31
 9192  00008518  ac22000c	sw	12(r1),r2
 9193  0000851c  8fa20000	lw	r2,0(r29)
 9194  00008520  8fdffff8	lw	r31,-8(r30)
 9195  00008524  001ee820	add	r29,r0,r30
 9196  00008528  8fdefffc	lw	r30,-4(r30)
 9197  0000852c  4be00000	jr	r31
 9198  00008530  54000000	nop
 9199  00008534          	.endproc _QueueLinkInit
 9200  00008534          	.align 2
 9201  00008534          	.proc _QueueNext
 9202  00008534          	.global _QueueNext
 9203  00008534          	_QueueNext:
 9204                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
 9205  00008534  afbefffc	sw	-4(r29),r30; push fp
 9206  00008538  001df020	add	r30,r0,r29; fp = sp
 9207  0000853c  afbffff8	sw	-8(r29),r31; push ret addr
 9208  00008540  2fbd0008	subui	r29,r29,#8; alloc local storage
 9209  00008544  8fc10000	lw	r1,(r30)
 9210  00008548  8c210000	lw	r1,(r1)
 9211  0000854c  8fdffff8	lw	r31,-8(r30)
 9212  00008550  001ee820	add	r29,r0,r30
 9213  00008554  8fdefffc	lw	r30,-4(r30)
 9214  00008558  4be00000	jr	r31
 9215  0000855c  54000000	nop
 9216  00008560          	.endproc _QueueNext
 9217  00008560          	.align 2
 9218  00008560          	.proc _QueuePrev
 9219  00008560          	.global _QueuePrev
 9220  00008560          	_QueuePrev:
 9221                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
 9222  00008560  afbefffc	sw	-4(r29),r30; push fp
 9223  00008564  001df020	add	r30,r0,r29; fp = sp
 9224  00008568  afbffff8	sw	-8(r29),r31; push ret addr
 9225  0000856c  2fbd0008	subui	r29,r29,#8; alloc local storage
 9226  00008570  8fc10000	lw	r1,(r30)
 9227  00008574  8c210004	lw	r1,4(r1)
 9228  00008578  8fdffff8	lw	r31,-8(r30)
 9229  0000857c  001ee820	add	r29,r0,r30
 9230  00008580  8fdefffc	lw	r30,-4(r30)
 9231  00008584  4be00000	jr	r31
 9232  00008588  54000000	nop
 9233  0000858c          	.endproc _QueuePrev
 9234  0000858c          	.align 2
 9235  0000858c          	.proc _QueueFirst
 9236  0000858c          	.global _QueueFirst
 9237  0000858c          	_QueueFirst:
 9238                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
 9239  0000858c  afbefffc	sw	-4(r29),r30; push fp
 9240  00008590  001df020	add	r30,r0,r29; fp = sp
 9241  00008594  afbffff8	sw	-8(r29),r31; push ret addr
 9242  00008598  2fbd0008	subui	r29,r29,#8; alloc local storage
 9243  0000859c  8fc10000	lw	r1,(r30)
 9244  000085a0  8c210000	lw	r1,(r1)
 9245  000085a4  8fdffff8	lw	r31,-8(r30)
 9246  000085a8  001ee820	add	r29,r0,r30
 9247  000085ac  8fdefffc	lw	r30,-4(r30)
 9248  000085b0  4be00000	jr	r31
 9249  000085b4  54000000	nop
 9250  000085b8          	.endproc _QueueFirst
 9251  000085b8          	.align 2
 9252  000085b8          	.proc _QueueLast
 9253  000085b8          	.global _QueueLast
 9254  000085b8          	_QueueLast:
 9255                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
 9256  000085b8  afbefffc	sw	-4(r29),r30; push fp
 9257  000085bc  001df020	add	r30,r0,r29; fp = sp
 9258  000085c0  afbffff8	sw	-8(r29),r31; push ret addr
 9259  000085c4  2fbd0008	subui	r29,r29,#8; alloc local storage
 9260  000085c8  8fc10000	lw	r1,(r30)
 9261  000085cc  8c210004	lw	r1,4(r1)
 9262  000085d0  8fdffff8	lw	r31,-8(r30)
 9263  000085d4  001ee820	add	r29,r0,r30
 9264  000085d8  8fdefffc	lw	r30,-4(r30)
 9265  000085dc  4be00000	jr	r31
 9266  000085e0  54000000	nop
 9267  000085e4          	.endproc _QueueLast
 9268  000085e4          	.align 2
 9269  000085e4          	.proc _QueueInsertAfter
 9270  000085e4          	.global _QueueInsertAfter
 9271  000085e4          	_QueueInsertAfter:
 9272                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
 9273  000085e4  afbefffc	sw	-4(r29),r30; push fp
 9274  000085e8  001df020	add	r30,r0,r29; fp = sp
 9275  000085ec  afbffff8	sw	-8(r29),r31; push ret addr
 9276  000085f0  2fbd0010	subui	r29,r29,#16; alloc local storage
 9277  000085f4  afa20000	sw	0(r29),r2
 9278  000085f8  afa30004	sw	4(r29),r3
 9279  000085fc  8fc30000	lw	r3,(r30)
 9280  00008600  8fc20004	lw	r2,4(r30)
 9281  00008604  8fc10008	lw	r1,8(r30)
 9282  00008608  ac230008	sw	8(r1),r3
 9283  0000860c  ac220004	sw	4(r1),r2
 9284  00008610  8c5f0000	lw	r31,(r2)
 9285  00008614  ac3f0000	sw	(r1),r31
 9286  00008618  ac410000	sw	(r2),r1
 9287  0000861c  8c220000	lw	r2,(r1)
 9288  00008620  ac410004	sw	4(r2),r1
 9289  00008624  8c610008	lw	r1,8(r3)
 9290  00008628  20210001	addi	r1,r1,#1
 9291  0000862c  ac610008	sw	8(r3),r1
 9292  00008630  8fa20000	lw	r2,0(r29)
 9293  00008634  8fa30004	lw	r3,4(r29)
 9294  00008638  8fdffff8	lw	r31,-8(r30)
 9295  0000863c  001ee820	add	r29,r0,r30
 9296  00008640  8fdefffc	lw	r30,-4(r30)
 9297  00008644  4be00000	jr	r31
 9298  00008648  54000000	nop
 9299  0000864c          	.endproc _QueueInsertAfter
 9300  0000864c          	.align 2
 9301  0000864c          	.proc _QueueInsertFirst
 9302  0000864c          	.global _QueueInsertFirst
 9303  0000864c          	_QueueInsertFirst:
 9304                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
 9305  0000864c  afbefffc	sw	-4(r29),r30; push fp
 9306  00008650  001df020	add	r30,r0,r29; fp = sp
 9307  00008654  afbffff8	sw	-8(r29),r31; push ret addr
 9308  00008658  2fbd0010	subui	r29,r29,#16; alloc local storage
 9309  0000865c  afa20000	sw	0(r29),r2
 9310  00008660  afa30004	sw	4(r29),r3
 9311  00008664  8fc30000	lw	r3,(r30)
 9312  00008668  8fc10004	lw	r1,4(r30)
 9313  0000866c  ac230008	sw	8(r1),r3
 9314  00008670  ac230004	sw	4(r1),r3
 9315  00008674  8c7f0000	lw	r31,(r3)
 9316  00008678  ac3f0000	sw	(r1),r31
 9317  0000867c  ac610000	sw	(r3),r1
 9318  00008680  8c220000	lw	r2,(r1)
 9319  00008684  ac410004	sw	4(r2),r1
 9320  00008688  8c610008	lw	r1,8(r3)
 9321  0000868c  20210001	addi	r1,r1,#1
 9322  00008690  ac610008	sw	8(r3),r1
 9323  00008694  8fa20000	lw	r2,0(r29)
 9324  00008698  8fa30004	lw	r3,4(r29)
 9325  0000869c  8fdffff8	lw	r31,-8(r30)
 9326  000086a0  001ee820	add	r29,r0,r30
 9327  000086a4  8fdefffc	lw	r30,-4(r30)
 9328  000086a8  4be00000	jr	r31
 9329  000086ac  54000000	nop
 9330  000086b0          	.endproc _QueueInsertFirst
 9331  000086b0          	.align 2
 9332  000086b0          	.proc _QueueInsertLast
 9333  000086b0          	.global _QueueInsertLast
 9334  000086b0          	_QueueInsertLast:
 9335                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
 9336  000086b0  afbefffc	sw	-4(r29),r30; push fp
 9337  000086b4  001df020	add	r30,r0,r29; fp = sp
 9338  000086b8  afbffff8	sw	-8(r29),r31; push ret addr
 9339  000086bc  2fbd0010	subui	r29,r29,#16; alloc local storage
 9340  000086c0  afa20000	sw	0(r29),r2
 9341  000086c4  afa30004	sw	4(r29),r3
 9342  000086c8  8fc30000	lw	r3,(r30)
 9343  000086cc  8fc10004	lw	r1,4(r30)
 9344  000086d0  8c620004	lw	r2,4(r3)
 9345  000086d4  ac230008	sw	8(r1),r3
 9346  000086d8  ac220004	sw	4(r1),r2
 9347  000086dc  8c5f0000	lw	r31,(r2)
 9348  000086e0  ac3f0000	sw	(r1),r31
 9349  000086e4  ac410000	sw	(r2),r1
 9350  000086e8  8c220000	lw	r2,(r1)
 9351  000086ec  ac410004	sw	4(r2),r1
 9352  000086f0  8c610008	lw	r1,8(r3)
 9353  000086f4  20210001	addi	r1,r1,#1
 9354  000086f8  ac610008	sw	8(r3),r1
 9355  000086fc  8fa20000	lw	r2,0(r29)
 9356  00008700  8fa30004	lw	r3,4(r29)
 9357  00008704  8fdffff8	lw	r31,-8(r30)
 9358  00008708  001ee820	add	r29,r0,r30
 9359  0000870c  8fdefffc	lw	r30,-4(r30)
 9360  00008710  4be00000	jr	r31
 9361  00008714  54000000	nop
 9362  00008718          	.endproc _QueueInsertLast
 9363  00008718          	.align 2
 9364  00008718          	.proc _QueueRemove
 9365  00008718          	.global _QueueRemove
 9366  00008718          	_QueueRemove:
 9367                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
 9368  00008718  afbefffc	sw	-4(r29),r30; push fp
 9369  0000871c  001df020	add	r30,r0,r29; fp = sp
 9370  00008720  afbffff8	sw	-8(r29),r31; push ret addr
 9371  00008724  2fbd0010	subui	r29,r29,#16; alloc local storage
 9372  00008728  afa20000	sw	0(r29),r2
 9373  0000872c  afa30004	sw	4(r29),r3
 9374  00008730  8fdf0000	lw	r31,(r30)
 9375  00008734  8fe10008	lw	r1,8(r31)
 9376  00008738  8c210008	lw	r1,8(r1)
 9377  0000873c  6c210000	sgti	r1,r1,#0
 9378  00008740  1020002c	beqz	r1,L44_LF6
 9379  00008744  54000000	nop; not filled.
 9380  00008748  8fe10004	lw	r1,4(r31)
 9381  0000874c  8fe30000	lw	r3,(r31)
 9382  00008750  ac230000	sw	(r1),r3
 9383  00008754  8fe10000	lw	r1,(r31)
 9384  00008758  8fe30004	lw	r3,4(r31)
 9385  0000875c  ac230004	sw	4(r1),r3
 9386  00008760  8fe20008	lw	r2,8(r31)
 9387  00008764  8c410008	lw	r1,8(r2)
 9388  00008768  2021ffff	addi	r1,r1,#-1
 9389  0000876c  ac410008	sw	8(r2),r1
 9390  00008770          	L44_LF6:
 9391  00008770  20030000	addi	r3,r0,#0
 9392  00008774  afe30000	sw	(r31),r3
 9393  00008778  8fa20000	lw	r2,0(r29)
 9394  0000877c  8fa30004	lw	r3,4(r29)
 9395  00008780  8fdffff8	lw	r31,-8(r30)
 9396  00008784  001ee820	add	r29,r0,r30
 9397  00008788  8fdefffc	lw	r30,-4(r30)
 9398  0000878c  4be00000	jr	r31
 9399  00008790  54000000	nop
 9400  00008794          	.endproc _QueueRemove
 9401  00008794          	.align 2
 9402  00008794          	.proc _QueueLength
 9403  00008794          	.global _QueueLength
 9404  00008794          	_QueueLength:
 9405                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
 9406  00008794  afbefffc	sw	-4(r29),r30; push fp
 9407  00008798  001df020	add	r30,r0,r29; fp = sp
 9408  0000879c  afbffff8	sw	-8(r29),r31; push ret addr
 9409  000087a0  2fbd0008	subui	r29,r29,#8; alloc local storage
 9410  000087a4  8fc10000	lw	r1,(r30)
 9411  000087a8  8c210008	lw	r1,8(r1)
 9412  000087ac  8fdffff8	lw	r31,-8(r30)
 9413  000087b0  001ee820	add	r29,r0,r30
 9414  000087b4  8fdefffc	lw	r30,-4(r30)
 9415  000087b8  4be00000	jr	r31
 9416  000087bc  54000000	nop
 9417  000087c0          	.endproc _QueueLength
 9418  000087c0          	.align 2
 9419  000087c0          	.proc _QueueEmpty
 9420  000087c0          	.global _QueueEmpty
 9421  000087c0          	_QueueEmpty:
 9422                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
 9423  000087c0  afbefffc	sw	-4(r29),r30; push fp
 9424  000087c4  001df020	add	r30,r0,r29; fp = sp
 9425  000087c8  afbffff8	sw	-8(r29),r31; push ret addr
 9426  000087cc  2fbd0008	subui	r29,r29,#8; alloc local storage
 9427  000087d0  8fc10000	lw	r1,(r30)
 9428  000087d4  8c210008	lw	r1,8(r1)
 9429  000087d8  60210000	seqi	r1,r1,#0
 9430  000087dc  8fdffff8	lw	r31,-8(r30)
 9431  000087e0  001ee820	add	r29,r0,r30
 9432  000087e4  8fdefffc	lw	r30,-4(r30)
 9433  000087e8  4be00000	jr	r31
 9434  000087ec  54000000	nop
 9435  000087f0          	.endproc _QueueEmpty
 9436  000087f0          	.align 2
 9437  000087f0          	.proc _TimerSet
 9438  000087f0          	.global _TimerSet
 9439  000087f0          	_TimerSet:
 9440                      ;  Function 'TimerSet'; 0 bytes of locals, 0 regs to save.
 9441  000087f0  afbefffc	sw	-4(r29),r30; push fp
 9442  000087f4  001df020	add	r30,r0,r29; fp = sp
 9443  000087f8  afbffff8	sw	-8(r29),r31; push ret addr
 9444  000087fc  2fbd0008	subui	r29,r29,#8; alloc local storage
 9445  00008800  3c01fff0	lhi	r1,#-16
 9446  00008804  24210010	addui	r1,r1,#16
 9447  00008808  8fdf0000	lw	r31,(r30)
 9448  0000880c  ac3f0000	sw	(r1),r31
 9449  00008810  8fdffff8	lw	r31,-8(r30)
 9450  00008814  001ee820	add	r29,r0,r30
 9451  00008818  8fdefffc	lw	r30,-4(r30)
 9452  0000881c  4be00000	jr	r31
 9453  00008820  54000000	nop
 9454  00008824          	.endproc _TimerSet
 9455  00008824          	.align 2
 9456  00008824          	.proc _KbdModuleInit
 9457  00008824          	.global _KbdModuleInit
 9458  00008824          	_KbdModuleInit:
 9459                      ;  Function 'KbdModuleInit'; 0 bytes of locals, 0 regs to save.
 9460  00008824  afbefffc	sw	-4(r29),r30; push fp
 9461  00008828  001df020	add	r30,r0,r29; fp = sp
 9462  0000882c  afbffff8	sw	-8(r29),r31; push ret addr
 9463  00008830  2fbd0008	subui	r29,r29,#8; alloc local storage
 9464  00008834  3c01fff0	lhi	r1,#-16
 9465  00008838  242101c0	addui	r1,r1,#448
 9466  0000883c  201f0001	addi	r31,r0,#1
 9467  00008840  ac3f0000	sw	(r1),r31
 9468  00008844  8fdffff8	lw	r31,-8(r30)
 9469  00008848  001ee820	add	r29,r0,r30
 9470  0000884c  8fdefffc	lw	r30,-4(r30)
 9471  00008850  4be00000	jr	r31
 9472  00008854  54000000	nop
 9473  00008858          	.endproc _KbdModuleInit
 9474  00008858          	.align 2
 9475  00008858          	.proc _TrapPrintfHandler_LF6
 9476  00008858          	_TrapPrintfHandler_LF6:
 9477                      ;  Function 'TrapPrintfHandler'; 160 bytes of locals, 10 regs to save.
 9478  00008858  afbefffc	sw	-4(r29),r30; push fp
 9479  0000885c  001df020	add	r30,r0,r29; fp = sp
 9480  00008860  afbffff8	sw	-8(r29),r31; push ret addr
 9481  00008864  2fbd00d0	subui	r29,r29,#208; alloc local storage
 9482  00008868  afa20000	sw	0(r29),r2
 9483  0000886c  afa30004	sw	4(r29),r3
 9484  00008870  afa40008	sw	8(r29),r4
 9485  00008874  afa5000c	sw	12(r29),r5
 9486  00008878  afa60010	sw	16(r29),r6
 9487  0000887c  afa70014	sw	20(r29),r7
 9488  00008880  afa80018	sw	24(r29),r8
 9489  00008884  afa9001c	sw	28(r29),r9
 9490  00008888  afaa0020	sw	32(r29),r10
 9491  0000888c  afab0024	sw	36(r29),r11
 9492  00008890  8fc40000	lw	r4,(r30)
 9493  00008894  8fc10004	lw	r1,4(r30)
 9494  00008898  20080000	addi	r8,r0,#0
 9495  0000889c  00081820	add	r3,r0,r8
 9496  000088a0  64210000	snei	r1,r1,#0
 9497  000088a4  142000a0	bnez	r1,L56_LF6
 9498  000088a8  54000000	nop; not filled.
 9499  000088ac  23bdfff0	addi	r29,r29,#-16
 9500  000088b0  3c020000	lhi	r2,((_currentPCB)>>16)&0xffff
 9501  000088b4  2442fcf0	addui	r2,r2,(_currentPCB)&0xffff
 9502  000088b8  8c4b0000	lw	r11,(r2)
 9503  000088bc  afab0000	sw	(r29),r11
 9504  000088c0  afa40004	sw	4(r29),r4
 9505  000088c4  23c1ff58	addi	r1,r30,#-168
 9506  000088c8  afa10008	sw	8(r29),r1
 9507  000088cc  200b0028	addi	r11,r0,#40
 9508  000088d0  afab000c	sw	12(r29),r11
 9509  000088d4  0fffa994	jal	_MemoryCopyUserToSystem
 9510  000088d8  54000000	nop; not filled.
 9511  000088dc  23bd0010	addi	r29,r29,#16
 9512  000088e0  23c5ffa7	addi	r5,r30,#-89
 9513  000088e4  23c4ffa8	addi	r4,r30,#-88
 9514  000088e8          	L57_LF6:
 9515  000088e8  23bdfff0	addi	r29,r29,#-16
 9516  000088ec  8c4b0000	lw	r11,(r2)
 9517  000088f0  afab0000	sw	(r29),r11
 9518  000088f4  8fc1ff58	lw	r1,-168(r30)
 9519  000088f8  00230820	add	r1,r1,r3
 9520  000088fc  afa10004	sw	4(r29),r1
 9521  00008900  afa40008	sw	8(r29),r4
 9522  00008904  200b0001	addi	r11,r0,#1
 9523  00008908  afab000c	sw	12(r29),r11
 9524  0000890c  0fffa95c	jal	_MemoryCopyUserToSystem
 9525  00008910  54000000	nop; not filled.
 9526  00008914  20a50001	addi	r5,r5,#1
 9527  00008918  20840001	addi	r4,r4,#1
 9528  0000891c  20630001	addi	r3,r3,#1
 9529  00008920  23bd0010	addi	r29,r29,#16
 9530  00008924  7061004f	sleui	r1,r3,#79
 9531  00008928  10200060	beqz	r1,L62_LF6
 9532  0000892c  54000000	nop; not filled.
 9533  00008930  90a10000	lbu	r1,(r5)
 9534  00008934  64210000	snei	r1,r1,#0
 9535  00008938  10200050	beqz	r1,L62_LF6
 9536  0000893c  54000000	nop; not filled.
 9537  00008940  0bffffa4	j	L57_LF6
 9538  00008944  54000000	nop; not filled.
 9539  00008948          	L56_LF6:
 9540  00008948  23bdfff0	addi	r29,r29,#-16
 9541  0000894c  afa40000	sw	(r29),r4
 9542  00008950  23c1ff58	addi	r1,r30,#-168
 9543  00008954  afa10004	sw	4(r29),r1
 9544  00008958  200b0028	addi	r11,r0,#40
 9545  0000895c  afab0008	sw	8(r29),r11
 9546  00008960  0fffb548	jal	_bcopy
 9547  00008964  54000000	nop; not filled.
 9548  00008968  8fcbff58	lw	r11,-168(r30)
 9549  0000896c  afab0000	sw	(r29),r11
 9550  00008970  23c1ffa8	addi	r1,r30,#-88
 9551  00008974  afa10004	sw	4(r29),r1
 9552  00008978  200b0050	addi	r11,r0,#80
 9553  0000897c  afab0008	sw	8(r29),r11
 9554  00008980  0fffad3c	jal	_dstrncpy
 9555  00008984  54000000	nop; not filled.
 9556  00008988  23bd0010	addi	r29,r29,#16
 9557  0000898c          	L62_LF6:
 9558  0000898c  200b0000	addi	r11,r0,(#0x0)&0xff
 9559  00008990  a3cbfff7	sb	-9(r30),r11
 9560  00008994  23c3ffa8	addi	r3,r30,#-88
 9561  00008998  80620000	lb	r2,(r3)
 9562  0000899c  304100ff	andi	r1,r2,#0x00ff
 9563  000089a0  64210000	snei	r1,r1,#0
 9564  000089a4  102000f0	beqz	r1,L64_LF6
 9565  000089a8  54000000	nop; not filled.
 9566  000089ac  23cafff8	addi	r10,r30,#-8
 9567  000089b0  23c9ff5c	addi	r9,r30,#-164
 9568  000089b4  51010002	slli	r1,r8,#0x2
 9569  000089b8  00293820	add	r7,r1,r9
 9570  000089bc  002a3020	add	r6,r1,r10
 9571  000089c0          	L66_LF6:
 9572  000089c0  304100ff	andi	r1,r2,#0x00ff
 9573  000089c4  60210025	seqi	r1,r1,#37
 9574  000089c8  102000b4	beqz	r1,L65_LF6
 9575  000089cc  54000000	nop; not filled.
 9576  000089d0  90610001	lbu	r1,1(r3)
 9577  000089d4  60210025	seqi	r1,r1,#37
 9578  000089d8  10200010	beqz	r1,L68_LF6
 9579  000089dc  54000000	nop; not filled.
 9580  000089e0  20630001	addi	r3,r3,#1
 9581  000089e4  08000098	j	L65_LF6
 9582  000089e8  54000000	nop; not filled.
 9583  000089ec          	L68_LF6:
 9584  000089ec  8ceb0000	lw	r11,(r7)
 9585  000089f0  accbff88	sw	-120(r6),r11
 9586  000089f4  51010002	slli	r1,r8,#0x2
 9587  000089f8  00292820	add	r5,r1,r9
 9588  000089fc  002a2020	add	r4,r1,r10
 9589  00008a00          	L71_LF6:
 9590  00008a00  20630001	addi	r3,r3,#1
 9591  00008a04  807f0000	lb	r31,(r3)
 9592  00008a08  33e200ff	andi	r2,r31,#0x00ff
 9593  00008a0c  60410073	seqi	r1,r2,#115
 9594  00008a10  14200060	bnez	r1,L70_LF6
 9595  00008a14  54000000	nop; not filled.
 9596  00008a18  6041006c	seqi	r1,r2,#108
 9597  00008a1c  1420ffe0	bnez	r1,L71_LF6
 9598  00008a20  54000000	nop; not filled.
 9599  00008a24  23e1ff9a	addi	r1,r31,#-102
 9600  00008a28  302100ff	andi	r1,r1,#0x00ff
 9601  00008a2c  70210001	sleui	r1,r1,#1
 9602  00008a30  14200010	bnez	r1,L77_LF6
 9603  00008a34  54000000	nop; not filled.
 9604  00008a38  60410065	seqi	r1,r2,#101
 9605  00008a3c  10200020	beqz	r1,L76_LF6
 9606  00008a40  54000000	nop; not filled.
 9607  00008a44          	L77_LF6:
 9608  00008a44  20e70004	addi	r7,r7,#4
 9609  00008a48  20c60004	addi	r6,r6,#4
 9610  00008a4c  21080001	addi	r8,r8,#1
 9611  00008a50  8ca50004	lw	r5,4(r5)
 9612  00008a54  ac85ff8c	sw	-116(r4),r5
 9613  00008a58  08000018	j	L70_LF6
 9614  00008a5c  54000000	nop; not filled.
 9615  00008a60          	L76_LF6:
 9616  00008a60  23e1ff9f	addi	r1,r31,#-97
 9617  00008a64  302100ff	andi	r1,r1,#0x00ff
 9618  00008a68  70210019	sleui	r1,r1,#25
 9619  00008a6c  1020ff90	beqz	r1,L71_LF6
 9620  00008a70  54000000	nop; not filled.
 9621  00008a74          	L70_LF6:
 9622  00008a74  20e70004	addi	r7,r7,#4
 9623  00008a78  20c60004	addi	r6,r6,#4
 9624  00008a7c  21080001	addi	r8,r8,#1
 9625  00008a80          	L65_LF6:
 9626  00008a80  20630001	addi	r3,r3,#1
 9627  00008a84  80620000	lb	r2,(r3)
 9628  00008a88  304100ff	andi	r1,r2,#0x00ff
 9629  00008a8c  64210000	snei	r1,r1,#0
 9630  00008a90  1420ff2c	bnez	r1,L66_LF6
 9631  00008a94  54000000	nop; not filled.
 9632  00008a98          	L64_LF6:
 9633  00008a98  23bdffd8	addi	r29,r29,#-40
 9634  00008a9c  23c1ffa8	addi	r1,r30,#-88
 9635  00008aa0  afa10000	sw	(r29),r1
 9636  00008aa4  8fc1ff80	lw	r1,-128(r30)
 9637  00008aa8  afa10004	sw	4(r29),r1
 9638  00008aac  8fcbff84	lw	r11,-124(r30)
 9639  00008ab0  afab0008	sw	8(r29),r11
 9640  00008ab4  8fcbff88	lw	r11,-120(r30)
 9641  00008ab8  afab000c	sw	12(r29),r11
 9642  00008abc  8fcbff8c	lw	r11,-116(r30)
 9643  00008ac0  afab0010	sw	16(r29),r11
 9644  00008ac4  8fcbff90	lw	r11,-112(r30)
 9645  00008ac8  afab0014	sw	20(r29),r11
 9646  00008acc  8fcbff94	lw	r11,-108(r30)
 9647  00008ad0  afab0018	sw	24(r29),r11
 9648  00008ad4  8fcbff98	lw	r11,-104(r30)
 9649  00008ad8  afab001c	sw	28(r29),r11
 9650  00008adc  8fcbff9c	lw	r11,-100(r30)
 9651  00008ae0  afab0020	sw	32(r29),r11
 9652  00008ae4  0c001698	jal	_printf
 9653  00008ae8  54000000	nop; not filled.
 9654  00008aec  23bd0028	addi	r29,r29,#40
 9655  00008af0  8fa20000	lw	r2,0(r29)
 9656  00008af4  8fa30004	lw	r3,4(r29)
 9657  00008af8  8fa40008	lw	r4,8(r29)
 9658  00008afc  8fa5000c	lw	r5,12(r29)
 9659  00008b00  8fa60010	lw	r6,16(r29)
 9660  00008b04  8fa70014	lw	r7,20(r29)
 9661  00008b08  8fa80018	lw	r8,24(r29)
 9662  00008b0c  8fa9001c	lw	r9,28(r29)
 9663  00008b10  8faa0020	lw	r10,32(r29)
 9664  00008b14  8fab0024	lw	r11,36(r29)
 9665  00008b18  8fdffff8	lw	r31,-8(r30)
 9666  00008b1c  001ee820	add	r29,r0,r30
 9667  00008b20  8fdefffc	lw	r30,-4(r30)
 9668  00008b24  4be00000	jr	r31
 9669  00008b28  54000000	nop
 9670  00008b2c          	.endproc _TrapPrintfHandler_LF6
 9671  00008b2c          	.data
 9672  00012dc5          	.align 2
 9673  00012dc8          	LC0_LF6:
 9674  00012dc8  496e7465	.ascii "Interrupt cause=0x%x iar=0x%x isr=0x%x args=0x%08x.\n\000"
 9674  00012dcc  72727570	
 9674  00012dd0  74206361	
 9674  00012dd4  7573653d	
 9674  00012dd8  30782578	
 9674  00012ddc  20696172	
 9674  00012de0  3d307825	
 9674  00012de4  78206973	
 9674  00012de8  723d3078	
 9674  00012dec  25782061	
 9674  00012df0  7267733d	
 9674  00012df4  30782530	
 9674  00012df8  38782e0a	
 9674  00012dfc  00      	
 9675  00012dfd          	.align 2
 9676  00012e00          	LC1_LF6:
 9677  00012e00  476f7420	.ascii "Got a context switch trap!\n\000"
 9677  00012e04  6120636f	
 9677  00012e08  6e746578	
 9677  00012e0c  74207377	
 9677  00012e10  69746368	
 9677  00012e14  20747261	
 9677  00012e18  70210a00	
 9678  00012e1c          	.align 2
 9679  00012e1c          	LC2_LF6:
 9680  00012e1c  476f7420	.ascii "Got an exit trap!\n\000"
 9680  00012e20  616e2065	
 9680  00012e24  78697420	
 9680  00012e28  74726170	
 9680  00012e2c  210a00  	
 9681  00012e2f          	.align 2
 9682  00012e30          	LC3_LF6:
 9683  00012e30  476f7420	.ascii "Got a fork trap!\n\000"
 9683  00012e34  6120666f	
 9683  00012e38  726b2074	
 9683  00012e3c  72617021	
 9683  00012e40  0a00    	
 9684  00012e42          	.align 2
 9685  00012e44          	LC4_LF6:
 9686  00012e44  476f7420	.ascii "Got a process sleep trap!\n\000"
 9686  00012e48  61207072	
 9686  00012e4c  6f636573	
 9686  00012e50  7320736c	
 9686  00012e54  65657020	
 9686  00012e58  74726170	
 9686  00012e5c  210a00  	
 9687  00012e5f          	.align 2
 9688  00012e60          	LC5_LF6:
 9689  00012e60  476f7420	.ascii "Got a printf trap!\n\000"
 9689  00012e64  61207072	
 9689  00012e68  696e7466	
 9689  00012e6c  20747261	
 9689  00012e70  70210a00	
 9690  00012e74          	.align 2
 9691  00012e74          	LC6_LF6:
 9692  00012e74  5049443a	.ascii "PID: %d\n\000"
 9692  00012e78  2025640a	
 9692  00012e7c  00      	
 9693  00012e7d          	.align 2
 9694  00012e80          	LC7_LF6:
 9695  00012e80  476f7420	.ascii "Got an open with parameters (\'%s\',0x%x)\n\000"
 9695  00012e84  616e206f	
 9695  00012e88  70656e20	
 9695  00012e8c  77697468	
 9695  00012e90  20706172	
 9695  00012e94  616d6574	
 9695  00012e98  65727320	
 9695  00012e9c  28272573	
 9695  00012ea0  272c3078	
 9695  00012ea4  2578290a	
 9695  00012ea8  00      	
 9696  00012ea9          	.align 2
 9697  00012eac          	LC8_LF6:
 9698  00012eac  476f7420	.ascii "Got an unrecognized trap (0x%x) - exiting!\n\000"
 9698  00012eb0  616e2075	
 9698  00012eb4  6e726563	
 9698  00012eb8  6f676e69	
 9698  00012ebc  7a656420	
 9698  00012ec0  74726170	
 9698  00012ec4  20283078	
 9698  00012ec8  25782920	
 9698  00012ecc  2d206578	
 9698  00012ed0  6974696e	
 9698  00012ed4  67210a00	
 9699  00012ed8          	.align 2
 9700  00012ed8          	LC9_LF6:
 9701  00012ed8  476f7420	.ascii "Got a timer interrupt!\n\000"
 9701  00012edc  61207469	
 9701  00012ee0  6d657220	
 9701  00012ee4  696e7465	
 9701  00012ee8  72727570	
 9701  00012eec  74210a00	
 9702  00012ef0          	.align 2
 9703  00012ef0          	LC10_LF6:
 9704  00012ef0  476f7420	.ascii "Got a keyboard interrupt (char=0x%x(%c), nleft=%d)!\n\000"
 9704  00012ef4  61206b65	
 9704  00012ef8  79626f61	
 9704  00012efc  72642069	
 9704  00012f00  6e746572	
 9704  00012f04  72757074	
 9704  00012f08  20286368	
 9704  00012f0c  61723d30	
 9704  00012f10  78257828	
 9704  00012f14  2563292c	
 9704  00012f18  206e6c65	
 9704  00012f1c  66743d25	
 9704  00012f20  6429210a	
 9704  00012f24  00      	
 9705  00012f25          	.align 2
 9706  00012f28          	LC11_LF6:
 9707  00012f28  45786974	.ascii "Exiting after illegal access at iar=0x%x, isr=0x%x\n\000"
 9707  00012f2c  696e6720	
 9707  00012f30  61667465	
 9707  00012f34  7220696c	
 9707  00012f38  6c656761	
 9707  00012f3c  6c206163	
 9707  00012f40  63657373	
 9707  00012f44  20617420	
 9707  00012f48  6961723d	
 9707  00012f4c  30782578	
 9707  00012f50  2c206973	
 9707  00012f54  723d3078	
 9707  00012f58  25780a00	
 9708  00012f5c          	.align 2
 9709  00012f5c          	LC12_LF6:
 9710  00012f5c  45786974	.ascii "Exiting after illegal address at iar=0x%x, isr=0x%x\n\000"
 9710  00012f60  696e6720	
 9710  00012f64  61667465	
 9710  00012f68  7220696c	
 9710  00012f6c  6c656761	
 9710  00012f70  6c206164	
 9710  00012f74  64726573	
 9710  00012f78  73206174	
 9710  00012f7c  20696172	
 9710  00012f80  3d307825	
 9710  00012f84  782c2069	
 9710  00012f88  73723d30	
 9710  00012f8c  7825780a	
 9710  00012f90  00      	
 9711  00012f91          	.align 2
 9712  00012f94          	LC13_LF6:
 9713  00012f94  45786974	.ascii "Exiting after illegal instruction at iar=0x%x, isr=0x%x\n\000"
 9713  00012f98  696e6720	
 9713  00012f9c  61667465	
 9713  00012fa0  7220696c	
 9713  00012fa4  6c656761	
 9713  00012fa8  6c20696e	
 9713  00012fac  73747275	
 9713  00012fb0  6374696f	
 9713  00012fb4  6e206174	
 9713  00012fb8  20696172	
 9713  00012fbc  3d307825	
 9713  00012fc0  782c2069	
 9713  00012fc4  73723d30	
 9713  00012fc8  7825780a	
 9713  00012fcc  00      	
 9714  00012fcd          	.align 2
 9715  00012fd0          	LC14_LF6:
 9716  00012fd0  45786974	.ascii "Exiting after page fault at iar=0x%x, isr=0x%x\n\000"
 9716  00012fd4  696e6720	
 9716  00012fd8  61667465	
 9716  00012fdc  72207061	
 9716  00012fe0  67652066	
 9716  00012fe4  61756c74	
 9716  00012fe8  20617420	
 9716  00012fec  6961723d	
 9716  00012ff0  30782578	
 9716  00012ff4  2c206973	
 9716  00012ff8  723d3078	
 9716  00012ffc  25780a00	
 9717  00013000          	.align 2
 9718  00013000          	LC15_LF6:
 9719  00013000  476f7420	.ascii "Got an unrecognized system interrupt (0x%x) - exiting!\n\000"
 9719  00013004  616e2075	
 9719  00013008  6e726563	
 9719  0001300c  6f676e69	
 9719  00013010  7a656420	
 9719  00013014  73797374	
 9719  00013018  656d2069	
 9719  0001301c  6e746572	
 9719  00013020  72757074	
 9719  00013024  20283078	
 9719  00013028  25782920	
 9719  0001302c  2d206578	
 9719  00013030  6974696e	
 9719  00013034  67210a00	
 9720  00013038          	.align 2
 9721  00013038          	LC16_LF6:
 9722  00013038  41626f75	.ascii "About to return from dointerrupt.\n\000"
 9722  0001303c  7420746f	
 9722  00013040  20726574	
 9722  00013044  75726e20	
 9722  00013048  66726f6d	
 9722  0001304c  20646f69	
 9722  00013050  6e746572	
 9722  00013054  72757074	
 9722  00013058  2e0a00  	
 9723  0001305b          	.text
 9724  00008b2c          	.align 2
 9725  00008b2c          	.proc _dointerrupt
 9726  00008b2c          	.global _dointerrupt
 9727  00008b2c          	_dointerrupt:
 9728                      ;  Function 'dointerrupt'; 48 bytes of locals, 6 regs to save.
 9729  00008b2c  afbefffc	sw	-4(r29),r30; push fp
 9730  00008b30  001df020	add	r30,r0,r29; fp = sp
 9731  00008b34  afbffff8	sw	-8(r29),r31; push ret addr
 9732  00008b38  2fbd0050	subui	r29,r29,#80; alloc local storage
 9733  00008b3c  afa20000	sw	0(r29),r2
 9734  00008b40  afa30004	sw	4(r29),r3
 9735  00008b44  afa40008	sw	8(r29),r4
 9736  00008b48  afa5000c	sw	12(r29),r5
 9737  00008b4c  afa60010	sw	16(r29),r6
 9738  00008b50  afa70014	sw	20(r29),r7
 9739  00008b54  8fc20000	lw	r2,(r30)
 9740  00008b58  8fc50004	lw	r5,4(r30)
 9741  00008b5c  8fc40008	lw	r4,8(r30)
 9742  00008b60  8fc6000c	lw	r6,12(r30)
 9743  00008b64  23bdfff8	addi	r29,r29,#-8
 9744  00008b68  3c030000	lhi	r3,((_debugstr)>>16)&0xffff
 9745  00008b6c  2463fc26	addui	r3,r3,(_debugstr)&0xffff
 9746  00008b70  afa30000	sw	(r29),r3
 9747  00008b74  20070074	addi	r7,r0,#116
 9748  00008b78  afa70004	sw	4(r29),r7
 9749  00008b7c  0fffaf9c	jal	_dindex
 9750  00008b80  54000000	nop; not filled.
 9751  00008b84  23bd0008	addi	r29,r29,#8
 9752  00008b88  64210000	snei	r1,r1,#0
 9753  00008b8c  1420002c	bnez	r1,L84_LF6
 9754  00008b90  54000000	nop; not filled.
 9755  00008b94  23bdfff8	addi	r29,r29,#-8
 9756  00008b98  afa30000	sw	(r29),r3
 9757  00008b9c  2007002b	addi	r7,r0,#43
 9758  00008ba0  afa70004	sw	4(r29),r7
 9759  00008ba4  0fffaf74	jal	_dindex
 9760  00008ba8  54000000	nop; not filled.
 9761  00008bac  23bd0008	addi	r29,r29,#8
 9762  00008bb0  64210000	snei	r1,r1,#0
 9763  00008bb4  10200030	beqz	r1,L83_LF6
 9764  00008bb8  54000000	nop; not filled.
 9765  00008bbc          	L84_LF6:
 9766  00008bbc  23bdffe8	addi	r29,r29,#-24
 9767  00008bc0  3c070001	lhi	r7,((LC0_LF6)>>16)&0xffff
 9768  00008bc4  24e72dc8	addui	r7,r7,(LC0_LF6)&0xffff
 9769  00008bc8  afa70000	sw	(r29),r7
 9770  00008bcc  afa20004	sw	4(r29),r2
 9771  00008bd0  afa50008	sw	8(r29),r5
 9772  00008bd4  afa4000c	sw	12(r29),r4
 9773  00008bd8  afa60010	sw	16(r29),r6
 9774  00008bdc  0c0015a0	jal	_printf
 9775  00008be0  54000000	nop; not filled.
 9776  00008be4  23bd0018	addi	r29,r29,#24
 9777  00008be8          	L83_LF6:
 9778  00008be8  3c070800	lhi	r7,#2048
 9779  00008bec  24e70000	addui	r7,r7,#0
 9780  00008bf0  00470824	and	r1,r2,r7
 9781  00008bf4  64210000	snei	r1,r1,#0
 9782  00008bf8  102006dc	beqz	r1,L85_LF6
 9783  00008bfc  54000000	nop; not filled.
 9784  00008c00  3c07f7ff	lhi	r7,#-2049
 9785  00008c04  24e7ffff	addui	r7,r7,#65535
 9786  00008c08  00471024	and	r2,r2,r7
 9787  00008c0c  60410214	seqi	r1,r2,#532
 9788  00008c10  142004e4	bnez	r1,L108_LF6
 9789  00008c14  54000000	nop; not filled.
 9790  00008c18  6c410214	sgtui	r1,r2,#532
 9791  00008c1c  1420005c	bnez	r1,L125_LF6
 9792  00008c20  54000000	nop; not filled.
 9793  00008c24  60410211	seqi	r1,r2,#529
 9794  00008c28  14200584	bnez	r1,L114_LF6
 9795  00008c2c  54000000	nop; not filled.
 9796  00008c30  6c410211	sgtui	r1,r2,#529
 9797  00008c34  14200024	bnez	r1,L126_LF6
 9798  00008c38  54000000	nop; not filled.
 9799  00008c3c  60410201	seqi	r1,r2,#513
 9800  00008c40  142002d4	bnez	r1,L99_LF6
 9801  00008c44  54000000	nop; not filled.
 9802  00008c48  60410210	seqi	r1,r2,#528
 9803  00008c4c  10200674	beqz	r1,L123_LF6
 9804  00008c50  54000000	nop; not filled.
 9805  00008c54  080004fc	j	L111_LF6
 9806  00008c58  54000000	nop; not filled.
 9807  00008c5c          	L126_LF6:
 9808  00008c5c  60410212	seqi	r1,r2,#530
 9809  00008c60  14200604	bnez	r1,L120_LF6
 9810  00008c64  54000000	nop; not filled.
 9811  00008c68  60410213	seqi	r1,r2,#531
 9812  00008c6c  10200654	beqz	r1,L123_LF6
 9813  00008c70  54000000	nop; not filled.
 9814  00008c74  08000360	j	L103_LF6
 9815  00008c78  54000000	nop; not filled.
 9816  00008c7c          	L125_LF6:
 9817  00008c7c  60410410	seqi	r1,r2,#1040
 9818  00008c80  142001f4	bnez	r1,L96_LF6
 9819  00008c84  54000000	nop; not filled.
 9820  00008c88  6c410410	sgtui	r1,r2,#1040
 9821  00008c8c  14200024	bnez	r1,L127_LF6
 9822  00008c90  54000000	nop; not filled.
 9823  00008c94  60410300	seqi	r1,r2,#768
 9824  00008c98  142000c4	bnez	r1,L90_LF6
 9825  00008c9c  54000000	nop; not filled.
 9826  00008ca0  60410400	seqi	r1,r2,#1024
 9827  00008ca4  1020061c	beqz	r1,L123_LF6
 9828  00008ca8  54000000	nop; not filled.
 9829  00008cac  08000044	j	L87_LF6
 9830  00008cb0  54000000	nop; not filled.
 9831  00008cb4          	L127_LF6:
 9832  00008cb4  60410440	seqi	r1,r2,#1088
 9833  00008cb8  142002f0	bnez	r1,L102_LF6
 9834  00008cbc  54000000	nop; not filled.
 9835  00008cc0  6c410440	sgtui	r1,r2,#1088
 9836  00008cc4  14200018	bnez	r1,L128_LF6
 9837  00008cc8  54000000	nop; not filled.
 9838  00008ccc  60410430	seqi	r1,r2,#1072
 9839  00008cd0  102005f0	beqz	r1,L123_LF6
 9840  00008cd4  54000000	nop; not filled.
 9841  00008cd8  08000124	j	L93_LF6
 9842  00008cdc  54000000	nop; not filled.
 9843  00008ce0          	L128_LF6:
 9844  00008ce0  60410580	seqi	r1,r2,#1408
 9845  00008ce4  102005dc	beqz	r1,L123_LF6
 9846  00008ce8  54000000	nop; not filled.
 9847  00008cec  0800051c	j	L117_LF6
 9848  00008cf0  54000000	nop; not filled.
 9849  00008cf4          	L87_LF6:
 9850  00008cf4  23bdfff8	addi	r29,r29,#-8
 9851  00008cf8  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 9852  00008cfc  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 9853  00008d00  afa20000	sw	(r29),r2
 9854  00008d04  20070074	addi	r7,r0,#116
 9855  00008d08  afa70004	sw	4(r29),r7
 9856  00008d0c  0fffae0c	jal	_dindex
 9857  00008d10  54000000	nop; not filled.
 9858  00008d14  23bd0008	addi	r29,r29,#8
 9859  00008d18  64210000	snei	r1,r1,#0
 9860  00008d1c  1420002c	bnez	r1,L89_LF6
 9861  00008d20  54000000	nop; not filled.
 9862  00008d24  23bdfff8	addi	r29,r29,#-8
 9863  00008d28  afa20000	sw	(r29),r2
 9864  00008d2c  2007002b	addi	r7,r0,#43
 9865  00008d30  afa70004	sw	4(r29),r7
 9866  00008d34  0fffade4	jal	_dindex
 9867  00008d38  54000000	nop; not filled.
 9868  00008d3c  23bd0008	addi	r29,r29,#8
 9869  00008d40  64210000	snei	r1,r1,#0
 9870  00008d44  1020067c	beqz	r1,L132_LF6
 9871  00008d48  54000000	nop; not filled.
 9872  00008d4c          	L89_LF6:
 9873  00008d4c  23bdfff8	addi	r29,r29,#-8
 9874  00008d50  3c070001	lhi	r7,((LC1_LF6)>>16)&0xffff
 9875  00008d54  24e72e00	addui	r7,r7,(LC1_LF6)&0xffff
 9876  00008d58  08000658	j	L152_LF6
 9877  00008d5c  54000000	nop; not filled.
 9878  00008d60          	L90_LF6:
 9879  00008d60  23bdfff8	addi	r29,r29,#-8
 9880  00008d64  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 9881  00008d68  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 9882  00008d6c  afa20000	sw	(r29),r2
 9883  00008d70  20070074	addi	r7,r0,#116
 9884  00008d74  afa70004	sw	4(r29),r7
 9885  00008d78  0fffada0	jal	_dindex
 9886  00008d7c  54000000	nop; not filled.
 9887  00008d80  23bd0008	addi	r29,r29,#8
 9888  00008d84  64210000	snei	r1,r1,#0
 9889  00008d88  1420002c	bnez	r1,L92_LF6
 9890  00008d8c  54000000	nop; not filled.
 9891  00008d90  23bdfff8	addi	r29,r29,#-8
 9892  00008d94  afa20000	sw	(r29),r2
 9893  00008d98  2007002b	addi	r7,r0,#43
 9894  00008d9c  afa70004	sw	4(r29),r7
 9895  00008da0  0fffad78	jal	_dindex
 9896  00008da4  54000000	nop; not filled.
 9897  00008da8  23bd0008	addi	r29,r29,#8
 9898  00008dac  64210000	snei	r1,r1,#0
 9899  00008db0  10200020	beqz	r1,L91_LF6
 9900  00008db4  54000000	nop; not filled.
 9901  00008db8          	L92_LF6:
 9902  00008db8  23bdfff8	addi	r29,r29,#-8
 9903  00008dbc  3c070001	lhi	r7,((LC2_LF6)>>16)&0xffff
 9904  00008dc0  24e72e1c	addui	r7,r7,(LC2_LF6)&0xffff
 9905  00008dc4  afa70000	sw	(r29),r7
 9906  00008dc8  0c0013b4	jal	_printf
 9907  00008dcc  54000000	nop; not filled.
 9908  00008dd0  23bd0008	addi	r29,r29,#8
 9909  00008dd4          	L91_LF6:
 9910  00008dd4  23bdfff8	addi	r29,r29,#-8
 9911  00008dd8  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 9912  00008ddc  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 9913  00008de0  8c210000	lw	r1,(r1)
 9914  00008de4  afa10000	sw	(r29),r1
 9915  00008de8  0fffc214	jal	_ProcessDestroy
 9916  00008dec  54000000	nop; not filled.
 9917  00008df0  0fffba70	jal	_ProcessSchedule
 9918  00008df4  54000000	nop; not filled.
 9919  00008df8  080006c0	j	L149_LF6
 9920  00008dfc  54000000	nop; not filled.
 9921  00008e00          	L93_LF6:
 9922  00008e00  23bdfff8	addi	r29,r29,#-8
 9923  00008e04  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 9924  00008e08  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 9925  00008e0c  afa20000	sw	(r29),r2
 9926  00008e10  20070074	addi	r7,r0,#116
 9927  00008e14  afa70004	sw	4(r29),r7
 9928  00008e18  0fffad00	jal	_dindex
 9929  00008e1c  54000000	nop; not filled.
 9930  00008e20  23bd0008	addi	r29,r29,#8
 9931  00008e24  64210000	snei	r1,r1,#0
 9932  00008e28  1420002c	bnez	r1,L95_LF6
 9933  00008e2c  54000000	nop; not filled.
 9934  00008e30  23bdfff8	addi	r29,r29,#-8
 9935  00008e34  afa20000	sw	(r29),r2
 9936  00008e38  2007002b	addi	r7,r0,#43
 9937  00008e3c  afa70004	sw	4(r29),r7
 9938  00008e40  0fffacd8	jal	_dindex
 9939  00008e44  54000000	nop; not filled.
 9940  00008e48  23bd0008	addi	r29,r29,#8
 9941  00008e4c  64210000	snei	r1,r1,#0
 9942  00008e50  1020066c	beqz	r1,L129_LF6
 9943  00008e54  54000000	nop; not filled.
 9944  00008e58          	L95_LF6:
 9945  00008e58  23bdfff8	addi	r29,r29,#-8
 9946  00008e5c  3c070001	lhi	r7,((LC3_LF6)>>16)&0xffff
 9947  00008e60  24e72e30	addui	r7,r7,(LC3_LF6)&0xffff
 9948  00008e64  afa70000	sw	(r29),r7
 9949  00008e68  0c001314	jal	_printf
 9950  00008e6c  54000000	nop; not filled.
 9951  00008e70  08000648	j	L149_LF6
 9952  00008e74  54000000	nop; not filled.
 9953  00008e78          	L96_LF6:
 9954  00008e78  23bdfff8	addi	r29,r29,#-8
 9955  00008e7c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 9956  00008e80  2442fc26	addui	r2,r2,(_debugstr)&0xffff
 9957  00008e84  afa20000	sw	(r29),r2
 9958  00008e88  20070074	addi	r7,r0,#116
 9959  00008e8c  afa70004	sw	4(r29),r7
 9960  00008e90  0fffac88	jal	_dindex
 9961  00008e94  54000000	nop; not filled.
 9962  00008e98  23bd0008	addi	r29,r29,#8
 9963  00008e9c  64210000	snei	r1,r1,#0
 9964  00008ea0  1420002c	bnez	r1,L98_LF6
 9965  00008ea4  54000000	nop; not filled.
 9966  00008ea8  23bdfff8	addi	r29,r29,#-8
 9967  00008eac  afa20000	sw	(r29),r2
 9968  00008eb0  2007002b	addi	r7,r0,#43
 9969  00008eb4  afa70004	sw	4(r29),r7
 9970  00008eb8  0fffac60	jal	_dindex
 9971  00008ebc  54000000	nop; not filled.
 9972  00008ec0  23bd0008	addi	r29,r29,#8
 9973  00008ec4  64210000	snei	r1,r1,#0
 9974  00008ec8  10200020	beqz	r1,L97_LF6
 9975  00008ecc  54000000	nop; not filled.
 9976  00008ed0          	L98_LF6:
 9977  00008ed0  23bdfff8	addi	r29,r29,#-8
 9978  00008ed4  3c070001	lhi	r7,((LC4_LF6)>>16)&0xffff
 9979  00008ed8  24e72e44	addui	r7,r7,(LC4_LF6)&0xffff
 9980  00008edc  afa70000	sw	(r29),r7
 9981  00008ee0  0c00129c	jal	_printf
 9982  00008ee4  54000000	nop; not filled.
 9983  00008ee8  23bd0008	addi	r29,r29,#8
 9984  00008eec          	L97_LF6:
 9985  00008eec  23bdfff8	addi	r29,r29,#-8
 9986  00008ef0  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
 9987  00008ef4  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
 9988  00008ef8  8c210000	lw	r1,(r1)
 9989  00008efc  afa10000	sw	(r29),r1
 9990  00008f00  0fffbdd4	jal	_ProcessSuspend
 9991  00008f04  54000000	nop; not filled.
 9992  00008f08  0fffb958	jal	_ProcessSchedule
 9993  00008f0c  54000000	nop; not filled.
 9994  00008f10  080005a8	j	L149_LF6
 9995  00008f14  54000000	nop; not filled.
 9996  00008f18          	L99_LF6:
 9997  00008f18  23bdfff8	addi	r29,r29,#-8
 9998  00008f1c  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
 9999  00008f20  2442fc26	addui	r2,r2,(_debugstr)&0xffff
10000  00008f24  afa20000	sw	(r29),r2
10001  00008f28  20070074	addi	r7,r0,#116
10002  00008f2c  afa70004	sw	4(r29),r7
10003  00008f30  0fffabe8	jal	_dindex
10004  00008f34  54000000	nop; not filled.
10005  00008f38  23bd0008	addi	r29,r29,#8
10006  00008f3c  64210000	snei	r1,r1,#0
10007  00008f40  1420002c	bnez	r1,L101_LF6
10008  00008f44  54000000	nop; not filled.
10009  00008f48  23bdfff8	addi	r29,r29,#-8
10010  00008f4c  afa20000	sw	(r29),r2
10011  00008f50  2007002b	addi	r7,r0,#43
10012  00008f54  afa70004	sw	4(r29),r7
10013  00008f58  0fffabc0	jal	_dindex
10014  00008f5c  54000000	nop; not filled.
10015  00008f60  23bd0008	addi	r29,r29,#8
10016  00008f64  64210000	snei	r1,r1,#0
10017  00008f68  10200020	beqz	r1,L100_LF6
10018  00008f6c  54000000	nop; not filled.
10019  00008f70          	L101_LF6:
10020  00008f70  23bdfff8	addi	r29,r29,#-8
10021  00008f74  3c070001	lhi	r7,((LC5_LF6)>>16)&0xffff
10022  00008f78  24e72e60	addui	r7,r7,(LC5_LF6)&0xffff
10023  00008f7c  afa70000	sw	(r29),r7
10024  00008f80  0c0011fc	jal	_printf
10025  00008f84  54000000	nop; not filled.
10026  00008f88  23bd0008	addi	r29,r29,#8
10027  00008f8c          	L100_LF6:
10028  00008f8c  23bdfff8	addi	r29,r29,#-8
10029  00008f90  afa60000	sw	(r29),r6
10030  00008f94  30810040	andi	r1,r4,#64
10031  00008f98  afa10004	sw	4(r29),r1
10032  00008f9c  0ffff8b8	jal	_TrapPrintfHandler_LF6
10033  00008fa0  54000000	nop; not filled.
10034  00008fa4  08000514	j	L149_LF6
10035  00008fa8  54000000	nop; not filled.
10036  00008fac          	L102_LF6:
10037  00008fac  0fffb470	jal	_GetCurrentPid
10038  00008fb0  54000000	nop; not filled.
10039  00008fb4  23bdfff8	addi	r29,r29,#-8
10040  00008fb8  3c070001	lhi	r7,((LC6_LF6)>>16)&0xffff
10041  00008fbc  24e72e74	addui	r7,r7,(LC6_LF6)&0xffff
10042  00008fc0  afa70000	sw	(r29),r7
10043  00008fc4  afa10004	sw	4(r29),r1
10044  00008fc8  0c0011b4	jal	_printf
10045  00008fcc  54000000	nop; not filled.
10046  00008fd0  080004e8	j	L149_LF6
10047  00008fd4  54000000	nop; not filled.
10048  00008fd8          	L103_LF6:
10049  00008fd8  30810040	andi	r1,r4,#64
10050  00008fdc  64210000	snei	r1,r1,#0
10051  00008fe0  1020001c	beqz	r1,L104_LF6
10052  00008fe4  54000000	nop; not filled.
10053  00008fe8  8cc70000	lw	r7,(r6)
10054  00008fec  afc7ffe8	sw	-24(r30),r7
10055  00008ff0  8cc60004	lw	r6,4(r6)
10056  00008ff4  afc6ffec	sw	-20(r30),r6
10057  00008ff8  0800006c	j	L105_LF6
10058  00008ffc  54000000	nop; not filled.
10059  00009000          	L104_LF6:
10060  00009000  23bdfff0	addi	r29,r29,#-16
10061  00009004  3c020000	lhi	r2,((_currentPCB)>>16)&0xffff
10062  00009008  2442fcf0	addui	r2,r2,(_currentPCB)&0xffff
10063  0000900c  8c470000	lw	r7,(r2)
10064  00009010  afa70000	sw	(r29),r7
10065  00009014  afa60004	sw	4(r29),r6
10066  00009018  23c1ffe8	addi	r1,r30,#-24
10067  0000901c  afa10008	sw	8(r29),r1
10068  00009020  20070008	addi	r7,r0,#8
10069  00009024  afa7000c	sw	12(r29),r7
10070  00009028  0fffa240	jal	_MemoryCopyUserToSystem
10071  0000902c  54000000	nop; not filled.
10072  00009030  8c420000	lw	r2,(r2)
10073  00009034  afa20000	sw	(r29),r2
10074  00009038  8fc1ffe8	lw	r1,-24(r30)
10075  0000903c  afa10004	sw	4(r29),r1
10076  00009040  23c2ffc8	addi	r2,r30,#-56
10077  00009044  afa20008	sw	8(r29),r2
10078  00009048  2007001f	addi	r7,r0,#31
10079  0000904c  afa7000c	sw	12(r29),r7
10080  00009050  0fffa218	jal	_MemoryCopyUserToSystem
10081  00009054  54000000	nop; not filled.
10082  00009058  20070000	addi	r7,r0,(#0x0)&0xff
10083  0000905c  a3c7ffe7	sb	-25(r30),r7
10084  00009060  afc2ffe8	sw	-24(r30),r2
10085  00009064  23bd0010	addi	r29,r29,#16
10086  00009068          	L105_LF6:
10087  00009068  23bdfff8	addi	r29,r29,#-8
10088  0000906c  20070000	addi	r7,r0,#0
10089  00009070  afa70000	sw	(r29),r7
10090  00009074  0c000fb4	jal	_SetIntrs
10091  00009078  54000000	nop; not filled.
10092  0000907c  00011020	add	r2,r0,r1
10093  00009080  23bd0008	addi	r29,r29,#8
10094  00009084  23bdfff8	addi	r29,r29,#-8
10095  00009088  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10096  0000908c  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
10097  00009090  8c210000	lw	r1,(r1)
10098  00009094  afa10000	sw	(r29),r1
10099  00009098  8fc1ffec	lw	r1,-20(r30)
10100  0000909c  3c070001	lhi	r7,#1
10101  000090a0  24e70000	addui	r7,r7,#0
10102  000090a4  00270820	add	r1,r1,r7
10103  000090a8  afa10004	sw	4(r29),r1
10104  000090ac  0fffb780	jal	_ProcessSetResult
10105  000090b0  54000000	nop; not filled.
10106  000090b4  23bdfff8	addi	r29,r29,#-8
10107  000090b8  3c070001	lhi	r7,((LC7_LF6)>>16)&0xffff
10108  000090bc  24e72e80	addui	r7,r7,(LC7_LF6)&0xffff
10109  000090c0  afa70000	sw	(r29),r7
10110  000090c4  8fc1ffe8	lw	r1,-24(r30)
10111  000090c8  afa10004	sw	4(r29),r1
10112  000090cc  8fc7ffec	lw	r7,-20(r30)
10113  000090d0  afa70008	sw	8(r29),r7
10114  000090d4  0c0010a8	jal	_printf
10115  000090d8  54000000	nop; not filled.
10116  000090dc  23bd0010	addi	r29,r29,#16
10117  000090e0  23bdfff8	addi	r29,r29,#-8
10118  000090e4  afa20000	sw	(r29),r2
10119  000090e8  0c000f40	jal	_SetIntrs
10120  000090ec  54000000	nop; not filled.
10121  000090f0  080003c8	j	L149_LF6
10122  000090f4  54000000	nop; not filled.
10123  000090f8          	L108_LF6:
10124  000090f8  23bdfff8	addi	r29,r29,#-8
10125  000090fc  20070000	addi	r7,r0,#0
10126  00009100  afa70000	sw	(r29),r7
10127  00009104  0c000f24	jal	_SetIntrs
10128  00009108  54000000	nop; not filled.
10129  0000910c  00011020	add	r2,r0,r1
10130  00009110  23bd0008	addi	r29,r29,#8
10131  00009114  23bdfff8	addi	r29,r29,#-8
10132  00009118  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10133  0000911c  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
10134  00009120  8c210000	lw	r1,(r1)
10135  00009124  afa10000	sw	(r29),r1
10136  00009128  2007ffff	addi	r7,r0,#-1
10137  0000912c  afa70004	sw	4(r29),r7
10138  00009130  0fffb6fc	jal	_ProcessSetResult
10139  00009134  54000000	nop; not filled.
10140  00009138  23bd0008	addi	r29,r29,#8
10141  0000913c  23bdfff8	addi	r29,r29,#-8
10142  00009140  afa20000	sw	(r29),r2
10143  00009144  0c000ee4	jal	_SetIntrs
10144  00009148  54000000	nop; not filled.
10145  0000914c  0800036c	j	L149_LF6
10146  00009150  54000000	nop; not filled.
10147  00009154          	L111_LF6:
10148  00009154  23bdfff8	addi	r29,r29,#-8
10149  00009158  20070000	addi	r7,r0,#0
10150  0000915c  afa70000	sw	(r29),r7
10151  00009160  0c000ec8	jal	_SetIntrs
10152  00009164  54000000	nop; not filled.
10153  00009168  00011020	add	r2,r0,r1
10154  0000916c  23bd0008	addi	r29,r29,#8
10155  00009170  23bdfff8	addi	r29,r29,#-8
10156  00009174  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10157  00009178  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
10158  0000917c  8c210000	lw	r1,(r1)
10159  00009180  afa10000	sw	(r29),r1
10160  00009184  2007ffff	addi	r7,r0,#-1
10161  00009188  afa70004	sw	4(r29),r7
10162  0000918c  0fffb6a0	jal	_ProcessSetResult
10163  00009190  54000000	nop; not filled.
10164  00009194  23bd0008	addi	r29,r29,#8
10165  00009198  23bdfff8	addi	r29,r29,#-8
10166  0000919c  afa20000	sw	(r29),r2
10167  000091a0  0c000e88	jal	_SetIntrs
10168  000091a4  54000000	nop; not filled.
10169  000091a8  08000310	j	L149_LF6
10170  000091ac  54000000	nop; not filled.
10171  000091b0          	L114_LF6:
10172  000091b0  23bdfff8	addi	r29,r29,#-8
10173  000091b4  20070000	addi	r7,r0,#0
10174  000091b8  afa70000	sw	(r29),r7
10175  000091bc  0c000e6c	jal	_SetIntrs
10176  000091c0  54000000	nop; not filled.
10177  000091c4  00011020	add	r2,r0,r1
10178  000091c8  23bd0008	addi	r29,r29,#8
10179  000091cc  23bdfff8	addi	r29,r29,#-8
10180  000091d0  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10181  000091d4  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
10182  000091d8  8c210000	lw	r1,(r1)
10183  000091dc  afa10000	sw	(r29),r1
10184  000091e0  2007ffff	addi	r7,r0,#-1
10185  000091e4  afa70004	sw	4(r29),r7
10186  000091e8  0fffb644	jal	_ProcessSetResult
10187  000091ec  54000000	nop; not filled.
10188  000091f0  23bd0008	addi	r29,r29,#8
10189  000091f4  23bdfff8	addi	r29,r29,#-8
10190  000091f8  afa20000	sw	(r29),r2
10191  000091fc  0c000e2c	jal	_SetIntrs
10192  00009200  54000000	nop; not filled.
10193  00009204  080002b4	j	L149_LF6
10194  00009208  54000000	nop; not filled.
10195  0000920c          	L117_LF6:
10196  0000920c  23bdfff8	addi	r29,r29,#-8
10197  00009210  20070000	addi	r7,r0,#0
10198  00009214  afa70000	sw	(r29),r7
10199  00009218  0c000e10	jal	_SetIntrs
10200  0000921c  54000000	nop; not filled.
10201  00009220  00011020	add	r2,r0,r1
10202  00009224  23bd0008	addi	r29,r29,#8
10203  00009228  23bdfff8	addi	r29,r29,#-8
10204  0000922c  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10205  00009230  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
10206  00009234  8c210000	lw	r1,(r1)
10207  00009238  afa10000	sw	(r29),r1
10208  0000923c  2007ffff	addi	r7,r0,#-1
10209  00009240  afa70004	sw	4(r29),r7
10210  00009244  0fffb5e8	jal	_ProcessSetResult
10211  00009248  54000000	nop; not filled.
10212  0000924c  23bd0008	addi	r29,r29,#8
10213  00009250  23bdfff8	addi	r29,r29,#-8
10214  00009254  afa20000	sw	(r29),r2
10215  00009258  0c000dd0	jal	_SetIntrs
10216  0000925c  54000000	nop; not filled.
10217  00009260  08000258	j	L149_LF6
10218  00009264  54000000	nop; not filled.
10219  00009268          	L120_LF6:
10220  00009268  23bdfff8	addi	r29,r29,#-8
10221  0000926c  20070000	addi	r7,r0,#0
10222  00009270  afa70000	sw	(r29),r7
10223  00009274  0c000db4	jal	_SetIntrs
10224  00009278  54000000	nop; not filled.
10225  0000927c  00011020	add	r2,r0,r1
10226  00009280  23bd0008	addi	r29,r29,#8
10227  00009284  23bdfff8	addi	r29,r29,#-8
10228  00009288  3c010000	lhi	r1,((_currentPCB)>>16)&0xffff
10229  0000928c  2421fcf0	addui	r1,r1,(_currentPCB)&0xffff
10230  00009290  8c210000	lw	r1,(r1)
10231  00009294  afa10000	sw	(r29),r1
10232  00009298  2007ffff	addi	r7,r0,#-1
10233  0000929c  afa70004	sw	4(r29),r7
10234  000092a0  0fffb58c	jal	_ProcessSetResult
10235  000092a4  54000000	nop; not filled.
10236  000092a8  23bd0008	addi	r29,r29,#8
10237  000092ac  23bdfff8	addi	r29,r29,#-8
10238  000092b0  afa20000	sw	(r29),r2
10239  000092b4  0c000d74	jal	_SetIntrs
10240  000092b8  54000000	nop; not filled.
10241  000092bc  080001fc	j	L149_LF6
10242  000092c0  54000000	nop; not filled.
10243  000092c4          	L123_LF6:
10244  000092c4  23bdfff8	addi	r29,r29,#-8
10245  000092c8  3c070001	lhi	r7,((LC8_LF6)>>16)&0xffff
10246  000092cc  24e72eac	addui	r7,r7,(LC8_LF6)&0xffff
10247  000092d0  080001d0	j	L150_LF6
10248  000092d4  54000000	nop; not filled.
10249  000092d8          	L85_LF6:
10250  000092d8  60410003	seqi	r1,r2,#3
10251  000092dc  14200148	bnez	r1,L139_LF6
10252  000092e0  54000000	nop; not filled.
10253  000092e4  6c410003	sgtui	r1,r2,#3
10254  000092e8  14200024	bnez	r1,L145_LF6
10255  000092ec  54000000	nop; not filled.
10256  000092f0  60410001	seqi	r1,r2,#1
10257  000092f4  14200158	bnez	r1,L141_LF6
10258  000092f8  54000000	nop; not filled.
10259  000092fc  60410002	seqi	r1,r2,#2
10260  00009300  10200194	beqz	r1,L143_LF6
10261  00009304  54000000	nop; not filled.
10262  00009308  08000130	j	L140_LF6
10263  0000930c  54000000	nop; not filled.
10264  00009310          	L145_LF6:
10265  00009310  60410040	seqi	r1,r2,#64
10266  00009314  14200038	bnez	r1,L131_LF6
10267  00009318  54000000	nop; not filled.
10268  0000931c  6c410040	sgtui	r1,r2,#64
10269  00009320  14200018	bnez	r1,L146_LF6
10270  00009324  54000000	nop; not filled.
10271  00009328  60410020	seqi	r1,r2,#32
10272  0000932c  10200168	beqz	r1,L143_LF6
10273  00009330  54000000	nop; not filled.
10274  00009334  0800012c	j	L142_LF6
10275  00009338  54000000	nop; not filled.
10276  0000933c          	L146_LF6:
10277  0000933c  60410048	seqi	r1,r2,#72
10278  00009340  10200154	beqz	r1,L143_LF6
10279  00009344  54000000	nop; not filled.
10280  00009348  08000088	j	L134_LF6
10281  0000934c  54000000	nop; not filled.
10282  00009350          	L131_LF6:
10283  00009350  23bdfff8	addi	r29,r29,#-8
10284  00009354  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10285  00009358  2442fc26	addui	r2,r2,(_debugstr)&0xffff
10286  0000935c  afa20000	sw	(r29),r2
10287  00009360  20070074	addi	r7,r0,#116
10288  00009364  afa70004	sw	4(r29),r7
10289  00009368  0fffa7b0	jal	_dindex
10290  0000936c  54000000	nop; not filled.
10291  00009370  23bd0008	addi	r29,r29,#8
10292  00009374  64210000	snei	r1,r1,#0
10293  00009378  1420002c	bnez	r1,L133_LF6
10294  0000937c  54000000	nop; not filled.
10295  00009380  23bdfff8	addi	r29,r29,#-8
10296  00009384  afa20000	sw	(r29),r2
10297  00009388  2007002b	addi	r7,r0,#43
10298  0000938c  afa70004	sw	4(r29),r7
10299  00009390  0fffa788	jal	_dindex
10300  00009394  54000000	nop; not filled.
10301  00009398  23bd0008	addi	r29,r29,#8
10302  0000939c  64210000	snei	r1,r1,#0
10303  000093a0  10200020	beqz	r1,L132_LF6
10304  000093a4  54000000	nop; not filled.
10305  000093a8          	L133_LF6:
10306  000093a8  23bdfff8	addi	r29,r29,#-8
10307  000093ac  3c070001	lhi	r7,((LC9_LF6)>>16)&0xffff
10308  000093b0  24e72ed8	addui	r7,r7,(LC9_LF6)&0xffff
10309  000093b4          	L152_LF6:
10310  000093b4  afa70000	sw	(r29),r7
10311  000093b8  0c000dc4	jal	_printf
10312  000093bc  54000000	nop; not filled.
10313  000093c0  23bd0008	addi	r29,r29,#8
10314  000093c4          	L132_LF6:
10315  000093c4  0fffb49c	jal	_ProcessSchedule
10316  000093c8  54000000	nop; not filled.
10317  000093cc  080000f0	j	L129_LF6
10318  000093d0  54000000	nop; not filled.
10319  000093d4          	L134_LF6:
10320  000093d4  3c04fff0	lhi	r4,#-16
10321  000093d8  248401a0	addui	r4,r4,#416
10322  000093dc  3c03fff0	lhi	r3,#-16
10323  000093e0  24630180	addui	r3,r3,#384
10324  000093e4          	L135_LF6:
10325  000093e4  8c820000	lw	r2,(r4)
10326  000093e8  8c610000	lw	r1,(r3)
10327  000093ec  23bdfff0	addi	r29,r29,#-16
10328  000093f0  3c070001	lhi	r7,((LC10_LF6)>>16)&0xffff
10329  000093f4  24e72ef0	addui	r7,r7,(LC10_LF6)&0xffff
10330  000093f8  afa70000	sw	(r29),r7
10331  000093fc  afa10004	sw	4(r29),r1
10332  00009400  afa10008	sw	8(r29),r1
10333  00009404  afa2000c	sw	12(r29),r2
10334  00009408  0c000d74	jal	_printf
10335  0000940c  54000000	nop; not filled.
10336  00009410  23bd0010	addi	r29,r29,#16
10337  00009414  6c410001	sgti	r1,r2,#1
10338  00009418  102000a4	beqz	r1,L129_LF6
10339  0000941c  54000000	nop; not filled.
10340  00009420  0bffffc0	j	L135_LF6
10341  00009424  54000000	nop; not filled.
10342  00009428          	L139_LF6:
10343  00009428  23bdfff0	addi	r29,r29,#-16
10344  0000942c  3c070001	lhi	r7,((LC11_LF6)>>16)&0xffff
10345  00009430  24e72f28	addui	r7,r7,(LC11_LF6)&0xffff
10346  00009434  08000038	j	L151_LF6
10347  00009438  54000000	nop; not filled.
10348  0000943c          	L140_LF6:
10349  0000943c  23bdfff0	addi	r29,r29,#-16
10350  00009440  3c070001	lhi	r7,((LC12_LF6)>>16)&0xffff
10351  00009444  24e72f5c	addui	r7,r7,(LC12_LF6)&0xffff
10352  00009448  08000024	j	L151_LF6
10353  0000944c  54000000	nop; not filled.
10354  00009450          	L141_LF6:
10355  00009450  23bdfff0	addi	r29,r29,#-16
10356  00009454  3c070001	lhi	r7,((LC13_LF6)>>16)&0xffff
10357  00009458  24e72f94	addui	r7,r7,(LC13_LF6)&0xffff
10358  0000945c  08000010	j	L151_LF6
10359  00009460  54000000	nop; not filled.
10360  00009464          	L142_LF6:
10361  00009464  23bdfff0	addi	r29,r29,#-16
10362  00009468  3c070001	lhi	r7,((LC14_LF6)>>16)&0xffff
10363  0000946c  24e72fd0	addui	r7,r7,(LC14_LF6)&0xffff
10364  00009470          	L151_LF6:
10365  00009470  afa70000	sw	(r29),r7
10366  00009474  afa50004	sw	4(r29),r5
10367  00009478  afa40008	sw	8(r29),r4
10368  0000947c  0c000d00	jal	_printf
10369  00009480  54000000	nop; not filled.
10370  00009484  0c000ce0	jal	_exitsim
10371  00009488  54000000	nop; not filled.
10372  0000948c  23bd0010	addi	r29,r29,#16
10373  00009490  0800002c	j	L129_LF6
10374  00009494  54000000	nop; not filled.
10375  00009498          	L143_LF6:
10376  00009498  23bdfff8	addi	r29,r29,#-8
10377  0000949c  3c070001	lhi	r7,((LC15_LF6)>>16)&0xffff
10378  000094a0  24e73000	addui	r7,r7,(LC15_LF6)&0xffff
10379  000094a4          	L150_LF6:
10380  000094a4  afa70000	sw	(r29),r7
10381  000094a8  afa20004	sw	4(r29),r2
10382  000094ac  0c000cd0	jal	_printf
10383  000094b0  54000000	nop; not filled.
10384  000094b4  0c000cb0	jal	_exitsim
10385  000094b8  54000000	nop; not filled.
10386  000094bc          	L149_LF6:
10387  000094bc  23bd0008	addi	r29,r29,#8
10388  000094c0          	L129_LF6:
10389  000094c0  23bdfff8	addi	r29,r29,#-8
10390  000094c4  3c020000	lhi	r2,((_debugstr)>>16)&0xffff
10391  000094c8  2442fc26	addui	r2,r2,(_debugstr)&0xffff
10392  000094cc  afa20000	sw	(r29),r2
10393  000094d0  20070074	addi	r7,r0,#116
10394  000094d4  afa70004	sw	4(r29),r7
10395  000094d8  0fffa640	jal	_dindex
10396  000094dc  54000000	nop; not filled.
10397  000094e0  23bd0008	addi	r29,r29,#8
10398  000094e4  64210000	snei	r1,r1,#0
10399  000094e8  1420002c	bnez	r1,L148_LF6
10400  000094ec  54000000	nop; not filled.
10401  000094f0  23bdfff8	addi	r29,r29,#-8
10402  000094f4  afa20000	sw	(r29),r2
10403  000094f8  2007002b	addi	r7,r0,#43
10404  000094fc  afa70004	sw	4(r29),r7
10405  00009500  0fffa618	jal	_dindex
10406  00009504  54000000	nop; not filled.
10407  00009508  23bd0008	addi	r29,r29,#8
10408  0000950c  64210000	snei	r1,r1,#0
10409  00009510  10200020	beqz	r1,L147_LF6
10410  00009514  54000000	nop; not filled.
10411  00009518          	L148_LF6:
10412  00009518  23bdfff8	addi	r29,r29,#-8
10413  0000951c  3c070001	lhi	r7,((LC16_LF6)>>16)&0xffff
10414  00009520  24e73038	addui	r7,r7,(LC16_LF6)&0xffff
10415  00009524  afa70000	sw	(r29),r7
10416  00009528  0c000c54	jal	_printf
10417  0000952c  54000000	nop; not filled.
10418  00009530  23bd0008	addi	r29,r29,#8
10419  00009534          	L147_LF6:
10420  00009534  0c0009d4	jal	_intrreturn
10421  00009538  54000000	nop; not filled.
10422  0000953c  8fa20000	lw	r2,0(r29)
10423  00009540  8fa30004	lw	r3,4(r29)
10424  00009544  8fa40008	lw	r4,8(r29)
10425  00009548  8fa5000c	lw	r5,12(r29)
10426  0000954c  8fa60010	lw	r6,16(r29)
10427  00009550  8fa70014	lw	r7,20(r29)
10428  00009554  8fdffff8	lw	r31,-8(r30)
10429  00009558  001ee820	add	r29,r0,r30
10430  0000955c  8fdefffc	lw	r30,-4(r30)
10431  00009560  4be00000	jr	r31
10432  00009564  54000000	nop
10433  00009568          	.endproc _dointerrupt
10434                      ; Compiled by GCC
10436  00009568          	.align 2
10437  00009568          	.proc _isspace
10438  00009568          	.global _isspace
10439  00009568          	_isspace:
10440                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
10441  00009568  afbefffc	sw	-4(r29),r30; push fp
10442  0000956c  001df020	add	r30,r0,r29; fp = sp
10443  00009570  afbffff8	sw	-8(r29),r31; push ret addr
10444  00009574  2fbd0010	subui	r29,r29,#16; alloc local storage
10445  00009578  afa20000	sw	0(r29),r2
10446  0000957c  83c20003	lb	r2,3(r30)
10447  00009580  201f0000	addi	r31,r0,#0
10448  00009584  304100ff	andi	r1,r2,#0x00ff
10449  00009588  60210020	seqi	r1,r1,#32
10450  0000958c  14200018	bnez	r1,L6_LF7
10451  00009590  54000000	nop; not filled.
10452  00009594  2041fff7	addi	r1,r2,#-9
10453  00009598  302100ff	andi	r1,r1,#0x00ff
10454  0000959c  70210001	sleui	r1,r1,#1
10455  000095a0  10200008	beqz	r1,L5_LF7
10456  000095a4  54000000	nop; not filled.
10457  000095a8          	L6_LF7:
10458  000095a8  201f0001	addi	r31,r0,#1
10459  000095ac          	L5_LF7:
10460  000095ac  001f0820	add	r1,r0,r31
10461  000095b0  8fa20000	lw	r2,0(r29)
10462  000095b4  8fdffff8	lw	r31,-8(r30)
10463  000095b8  001ee820	add	r29,r0,r30
10464  000095bc  8fdefffc	lw	r30,-4(r30)
10465  000095c0  4be00000	jr	r31
10466  000095c4  54000000	nop
10467  000095c8          	.endproc _isspace
10468  000095c8          	.align 2
10469  000095c8          	.proc _isxdigit
10470  000095c8          	.global _isxdigit
10471  000095c8          	_isxdigit:
10472                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
10473  000095c8  afbefffc	sw	-4(r29),r30; push fp
10474  000095cc  001df020	add	r30,r0,r29; fp = sp
10475  000095d0  afbffff8	sw	-8(r29),r31; push ret addr
10476  000095d4  2fbd0010	subui	r29,r29,#16; alloc local storage
10477  000095d8  afa20000	sw	0(r29),r2
10478  000095dc  83df0003	lb	r31,3(r30)
10479  000095e0  20020000	addi	r2,r0,#0
10480  000095e4  23e1ffd0	addi	r1,r31,#-48
10481  000095e8  302100ff	andi	r1,r1,#0x00ff
10482  000095ec  70210009	sleui	r1,r1,#9
10483  000095f0  14200028	bnez	r1,L12_LF7
10484  000095f4  54000000	nop; not filled.
10485  000095f8  23e1ff9f	addi	r1,r31,#-97
10486  000095fc  302100ff	andi	r1,r1,#0x00ff
10487  00009600  70210005	sleui	r1,r1,#5
10488  00009604  14200014	bnez	r1,L12_LF7
10489  00009608  54000000	nop; not filled.
10490  0000960c  33e100ff	andi	r1,r31,#0x00ff
10491  00009610  64210041	snei	r1,r1,#65
10492  00009614  14200008	bnez	r1,L11_LF7
10493  00009618  54000000	nop; not filled.
10494  0000961c          	L12_LF7:
10495  0000961c  20020001	addi	r2,r0,#1
10496  00009620          	L11_LF7:
10497  00009620  00020820	add	r1,r0,r2
10498  00009624  8fa20000	lw	r2,0(r29)
10499  00009628  8fdffff8	lw	r31,-8(r30)
10500  0000962c  001ee820	add	r29,r0,r30
10501  00009630  8fdefffc	lw	r30,-4(r30)
10502  00009634  4be00000	jr	r31
10503  00009638  54000000	nop
10504  0000963c          	.endproc _isxdigit
10505  0000963c          	.align 2
10506  0000963c          	.proc _DisableIntrs
10507  0000963c          	.global _DisableIntrs
10508  0000963c          	_DisableIntrs:
10509                      ;  Function 'DisableIntrs'; 0 bytes of locals, 1 regs to save.
10510  0000963c  afbefffc	sw	-4(r29),r30; push fp
10511  00009640  001df020	add	r30,r0,r29; fp = sp
10512  00009644  afbffff8	sw	-8(r29),r31; push ret addr
10513  00009648  2fbd0010	subui	r29,r29,#16; alloc local storage
10514  0000964c  afa20000	sw	0(r29),r2
10515  00009650  23bdfff8	addi	r29,r29,#-8
10516  00009654  2002000f	addi	r2,r0,#15
10517  00009658  afa20000	sw	(r29),r2
10518  0000965c  0c0009cc	jal	_SetIntrs
10519  00009660  54000000	nop; not filled.
10520  00009664  23bd0008	addi	r29,r29,#8
10521  00009668  8fa20000	lw	r2,0(r29)
10522  0000966c  8fdffff8	lw	r31,-8(r30)
10523  00009670  001ee820	add	r29,r0,r30
10524  00009674  8fdefffc	lw	r30,-4(r30)
10525  00009678  4be00000	jr	r31
10526  0000967c  54000000	nop
10527  00009680          	.endproc _DisableIntrs
10528  00009680          	.align 2
10529  00009680          	.proc _EnableIntrs
10530  00009680          	.global _EnableIntrs
10531  00009680          	_EnableIntrs:
10532                      ;  Function 'EnableIntrs'; 0 bytes of locals, 1 regs to save.
10533  00009680  afbefffc	sw	-4(r29),r30; push fp
10534  00009684  001df020	add	r30,r0,r29; fp = sp
10535  00009688  afbffff8	sw	-8(r29),r31; push ret addr
10536  0000968c  2fbd0010	subui	r29,r29,#16; alloc local storage
10537  00009690  afa20000	sw	0(r29),r2
10538  00009694  23bdfff8	addi	r29,r29,#-8
10539  00009698  20020000	addi	r2,r0,#0
10540  0000969c  afa20000	sw	(r29),r2
10541  000096a0  0c000988	jal	_SetIntrs
10542  000096a4  54000000	nop; not filled.
10543  000096a8  23bd0008	addi	r29,r29,#8
10544  000096ac  8fa20000	lw	r2,0(r29)
10545  000096b0  8fdffff8	lw	r31,-8(r30)
10546  000096b4  001ee820	add	r29,r0,r30
10547  000096b8  8fdefffc	lw	r30,-4(r30)
10548  000096bc  4be00000	jr	r31
10549  000096c0  54000000	nop
10550  000096c4          	.endproc _EnableIntrs
10551  000096c4          	.align 2
10552  000096c4          	.proc _RestoreIntrs
10553  000096c4          	.global _RestoreIntrs
10554  000096c4          	_RestoreIntrs:
10555                      ;  Function 'RestoreIntrs'; 0 bytes of locals, 1 regs to save.
10556  000096c4  afbefffc	sw	-4(r29),r30; push fp
10557  000096c8  001df020	add	r30,r0,r29; fp = sp
10558  000096cc  afbffff8	sw	-8(r29),r31; push ret addr
10559  000096d0  2fbd0010	subui	r29,r29,#16; alloc local storage
10560  000096d4  afa20000	sw	0(r29),r2
10561  000096d8  23bdfff8	addi	r29,r29,#-8
10562  000096dc  8fc20000	lw	r2,(r30)
10563  000096e0  afa20000	sw	(r29),r2
10564  000096e4  0c000944	jal	_SetIntrs
10565  000096e8  54000000	nop; not filled.
10566  000096ec  23bd0008	addi	r29,r29,#8
10567  000096f0  8fa20000	lw	r2,0(r29)
10568  000096f4  8fdffff8	lw	r31,-8(r30)
10569  000096f8  001ee820	add	r29,r0,r30
10570  000096fc  8fdefffc	lw	r30,-4(r30)
10571  00009700  4be00000	jr	r31
10572  00009704  54000000	nop
10573  00009708          	.endproc _RestoreIntrs
10574  00009708          	.align 2
10575  00009708          	.proc _QueueLinkInit
10576  00009708          	.global _QueueLinkInit
10577  00009708          	_QueueLinkInit:
10578                      ;  Function 'QueueLinkInit'; 0 bytes of locals, 1 regs to save.
10579  00009708  afbefffc	sw	-4(r29),r30; push fp
10580  0000970c  001df020	add	r30,r0,r29; fp = sp
10581  00009710  afbffff8	sw	-8(r29),r31; push ret addr
10582  00009714  2fbd0010	subui	r29,r29,#16; alloc local storage
10583  00009718  afa20000	sw	0(r29),r2
10584  0000971c  8fc10000	lw	r1,(r30)
10585  00009720  8fc20004	lw	r2,4(r30)
10586  00009724  201f0000	addi	r31,r0,#0
10587  00009728  ac3f0000	sw	(r1),r31
10588  0000972c  ac22000c	sw	12(r1),r2
10589  00009730  8fa20000	lw	r2,0(r29)
10590  00009734  8fdffff8	lw	r31,-8(r30)
10591  00009738  001ee820	add	r29,r0,r30
10592  0000973c  8fdefffc	lw	r30,-4(r30)
10593  00009740  4be00000	jr	r31
10594  00009744  54000000	nop
10595  00009748          	.endproc _QueueLinkInit
10596  00009748          	.align 2
10597  00009748          	.proc _QueueNext
10598  00009748          	.global _QueueNext
10599  00009748          	_QueueNext:
10600                      ;  Function 'QueueNext'; 0 bytes of locals, 0 regs to save.
10601  00009748  afbefffc	sw	-4(r29),r30; push fp
10602  0000974c  001df020	add	r30,r0,r29; fp = sp
10603  00009750  afbffff8	sw	-8(r29),r31; push ret addr
10604  00009754  2fbd0008	subui	r29,r29,#8; alloc local storage
10605  00009758  8fc10000	lw	r1,(r30)
10606  0000975c  8c210000	lw	r1,(r1)
10607  00009760  8fdffff8	lw	r31,-8(r30)
10608  00009764  001ee820	add	r29,r0,r30
10609  00009768  8fdefffc	lw	r30,-4(r30)
10610  0000976c  4be00000	jr	r31
10611  00009770  54000000	nop
10612  00009774          	.endproc _QueueNext
10613  00009774          	.align 2
10614  00009774          	.proc _QueuePrev
10615  00009774          	.global _QueuePrev
10616  00009774          	_QueuePrev:
10617                      ;  Function 'QueuePrev'; 0 bytes of locals, 0 regs to save.
10618  00009774  afbefffc	sw	-4(r29),r30; push fp
10619  00009778  001df020	add	r30,r0,r29; fp = sp
10620  0000977c  afbffff8	sw	-8(r29),r31; push ret addr
10621  00009780  2fbd0008	subui	r29,r29,#8; alloc local storage
10622  00009784  8fc10000	lw	r1,(r30)
10623  00009788  8c210004	lw	r1,4(r1)
10624  0000978c  8fdffff8	lw	r31,-8(r30)
10625  00009790  001ee820	add	r29,r0,r30
10626  00009794  8fdefffc	lw	r30,-4(r30)
10627  00009798  4be00000	jr	r31
10628  0000979c  54000000	nop
10629  000097a0          	.endproc _QueuePrev
10630  000097a0          	.align 2
10631  000097a0          	.proc _QueueFirst
10632  000097a0          	.global _QueueFirst
10633  000097a0          	_QueueFirst:
10634                      ;  Function 'QueueFirst'; 0 bytes of locals, 0 regs to save.
10635  000097a0  afbefffc	sw	-4(r29),r30; push fp
10636  000097a4  001df020	add	r30,r0,r29; fp = sp
10637  000097a8  afbffff8	sw	-8(r29),r31; push ret addr
10638  000097ac  2fbd0008	subui	r29,r29,#8; alloc local storage
10639  000097b0  8fc10000	lw	r1,(r30)
10640  000097b4  8c210000	lw	r1,(r1)
10641  000097b8  8fdffff8	lw	r31,-8(r30)
10642  000097bc  001ee820	add	r29,r0,r30
10643  000097c0  8fdefffc	lw	r30,-4(r30)
10644  000097c4  4be00000	jr	r31
10645  000097c8  54000000	nop
10646  000097cc          	.endproc _QueueFirst
10647  000097cc          	.align 2
10648  000097cc          	.proc _QueueLast
10649  000097cc          	.global _QueueLast
10650  000097cc          	_QueueLast:
10651                      ;  Function 'QueueLast'; 0 bytes of locals, 0 regs to save.
10652  000097cc  afbefffc	sw	-4(r29),r30; push fp
10653  000097d0  001df020	add	r30,r0,r29; fp = sp
10654  000097d4  afbffff8	sw	-8(r29),r31; push ret addr
10655  000097d8  2fbd0008	subui	r29,r29,#8; alloc local storage
10656  000097dc  8fc10000	lw	r1,(r30)
10657  000097e0  8c210004	lw	r1,4(r1)
10658  000097e4  8fdffff8	lw	r31,-8(r30)
10659  000097e8  001ee820	add	r29,r0,r30
10660  000097ec  8fdefffc	lw	r30,-4(r30)
10661  000097f0  4be00000	jr	r31
10662  000097f4  54000000	nop
10663  000097f8          	.endproc _QueueLast
10664  000097f8          	.align 2
10665  000097f8          	.proc _QueueInsertAfter
10666  000097f8          	.global _QueueInsertAfter
10667  000097f8          	_QueueInsertAfter:
10668                      ;  Function 'QueueInsertAfter'; 0 bytes of locals, 2 regs to save.
10669  000097f8  afbefffc	sw	-4(r29),r30; push fp
10670  000097fc  001df020	add	r30,r0,r29; fp = sp
10671  00009800  afbffff8	sw	-8(r29),r31; push ret addr
10672  00009804  2fbd0010	subui	r29,r29,#16; alloc local storage
10673  00009808  afa20000	sw	0(r29),r2
10674  0000980c  afa30004	sw	4(r29),r3
10675  00009810  8fc30000	lw	r3,(r30)
10676  00009814  8fc20004	lw	r2,4(r30)
10677  00009818  8fc10008	lw	r1,8(r30)
10678  0000981c  ac230008	sw	8(r1),r3
10679  00009820  ac220004	sw	4(r1),r2
10680  00009824  8c5f0000	lw	r31,(r2)
10681  00009828  ac3f0000	sw	(r1),r31
10682  0000982c  ac410000	sw	(r2),r1
10683  00009830  8c220000	lw	r2,(r1)
10684  00009834  ac410004	sw	4(r2),r1
10685  00009838  8c610008	lw	r1,8(r3)
10686  0000983c  20210001	addi	r1,r1,#1
10687  00009840  ac610008	sw	8(r3),r1
10688  00009844  8fa20000	lw	r2,0(r29)
10689  00009848  8fa30004	lw	r3,4(r29)
10690  0000984c  8fdffff8	lw	r31,-8(r30)
10691  00009850  001ee820	add	r29,r0,r30
10692  00009854  8fdefffc	lw	r30,-4(r30)
10693  00009858  4be00000	jr	r31
10694  0000985c  54000000	nop
10695  00009860          	.endproc _QueueInsertAfter
10696  00009860          	.align 2
10697  00009860          	.proc _QueueInsertFirst
10698  00009860          	.global _QueueInsertFirst
10699  00009860          	_QueueInsertFirst:
10700                      ;  Function 'QueueInsertFirst'; 0 bytes of locals, 2 regs to save.
10701  00009860  afbefffc	sw	-4(r29),r30; push fp
10702  00009864  001df020	add	r30,r0,r29; fp = sp
10703  00009868  afbffff8	sw	-8(r29),r31; push ret addr
10704  0000986c  2fbd0010	subui	r29,r29,#16; alloc local storage
10705  00009870  afa20000	sw	0(r29),r2
10706  00009874  afa30004	sw	4(r29),r3
10707  00009878  8fc30000	lw	r3,(r30)
10708  0000987c  8fc10004	lw	r1,4(r30)
10709  00009880  ac230008	sw	8(r1),r3
10710  00009884  ac230004	sw	4(r1),r3
10711  00009888  8c7f0000	lw	r31,(r3)
10712  0000988c  ac3f0000	sw	(r1),r31
10713  00009890  ac610000	sw	(r3),r1
10714  00009894  8c220000	lw	r2,(r1)
10715  00009898  ac410004	sw	4(r2),r1
10716  0000989c  8c610008	lw	r1,8(r3)
10717  000098a0  20210001	addi	r1,r1,#1
10718  000098a4  ac610008	sw	8(r3),r1
10719  000098a8  8fa20000	lw	r2,0(r29)
10720  000098ac  8fa30004	lw	r3,4(r29)
10721  000098b0  8fdffff8	lw	r31,-8(r30)
10722  000098b4  001ee820	add	r29,r0,r30
10723  000098b8  8fdefffc	lw	r30,-4(r30)
10724  000098bc  4be00000	jr	r31
10725  000098c0  54000000	nop
10726  000098c4          	.endproc _QueueInsertFirst
10727  000098c4          	.align 2
10728  000098c4          	.proc _QueueInsertLast
10729  000098c4          	.global _QueueInsertLast
10730  000098c4          	_QueueInsertLast:
10731                      ;  Function 'QueueInsertLast'; 0 bytes of locals, 2 regs to save.
10732  000098c4  afbefffc	sw	-4(r29),r30; push fp
10733  000098c8  001df020	add	r30,r0,r29; fp = sp
10734  000098cc  afbffff8	sw	-8(r29),r31; push ret addr
10735  000098d0  2fbd0010	subui	r29,r29,#16; alloc local storage
10736  000098d4  afa20000	sw	0(r29),r2
10737  000098d8  afa30004	sw	4(r29),r3
10738  000098dc  8fc30000	lw	r3,(r30)
10739  000098e0  8fc10004	lw	r1,4(r30)
10740  000098e4  8c620004	lw	r2,4(r3)
10741  000098e8  ac230008	sw	8(r1),r3
10742  000098ec  ac220004	sw	4(r1),r2
10743  000098f0  8c5f0000	lw	r31,(r2)
10744  000098f4  ac3f0000	sw	(r1),r31
10745  000098f8  ac410000	sw	(r2),r1
10746  000098fc  8c220000	lw	r2,(r1)
10747  00009900  ac410004	sw	4(r2),r1
10748  00009904  8c610008	lw	r1,8(r3)
10749  00009908  20210001	addi	r1,r1,#1
10750  0000990c  ac610008	sw	8(r3),r1
10751  00009910  8fa20000	lw	r2,0(r29)
10752  00009914  8fa30004	lw	r3,4(r29)
10753  00009918  8fdffff8	lw	r31,-8(r30)
10754  0000991c  001ee820	add	r29,r0,r30
10755  00009920  8fdefffc	lw	r30,-4(r30)
10756  00009924  4be00000	jr	r31
10757  00009928  54000000	nop
10758  0000992c          	.endproc _QueueInsertLast
10759  0000992c          	.align 2
10760  0000992c          	.proc _QueueRemove
10761  0000992c          	.global _QueueRemove
10762  0000992c          	_QueueRemove:
10763                      ;  Function 'QueueRemove'; 0 bytes of locals, 2 regs to save.
10764  0000992c  afbefffc	sw	-4(r29),r30; push fp
10765  00009930  001df020	add	r30,r0,r29; fp = sp
10766  00009934  afbffff8	sw	-8(r29),r31; push ret addr
10767  00009938  2fbd0010	subui	r29,r29,#16; alloc local storage
10768  0000993c  afa20000	sw	0(r29),r2
10769  00009940  afa30004	sw	4(r29),r3
10770  00009944  8fdf0000	lw	r31,(r30)
10771  00009948  8fe10008	lw	r1,8(r31)
10772  0000994c  8c210008	lw	r1,8(r1)
10773  00009950  6c210000	sgti	r1,r1,#0
10774  00009954  1020002c	beqz	r1,L44_LF7
10775  00009958  54000000	nop; not filled.
10776  0000995c  8fe10004	lw	r1,4(r31)
10777  00009960  8fe30000	lw	r3,(r31)
10778  00009964  ac230000	sw	(r1),r3
10779  00009968  8fe10000	lw	r1,(r31)
10780  0000996c  8fe30004	lw	r3,4(r31)
10781  00009970  ac230004	sw	4(r1),r3
10782  00009974  8fe20008	lw	r2,8(r31)
10783  00009978  8c410008	lw	r1,8(r2)
10784  0000997c  2021ffff	addi	r1,r1,#-1
10785  00009980  ac410008	sw	8(r2),r1
10786  00009984          	L44_LF7:
10787  00009984  20030000	addi	r3,r0,#0
10788  00009988  afe30000	sw	(r31),r3
10789  0000998c  8fa20000	lw	r2,0(r29)
10790  00009990  8fa30004	lw	r3,4(r29)
10791  00009994  8fdffff8	lw	r31,-8(r30)
10792  00009998  001ee820	add	r29,r0,r30
10793  0000999c  8fdefffc	lw	r30,-4(r30)
10794  000099a0  4be00000	jr	r31
10795  000099a4  54000000	nop
10796  000099a8          	.endproc _QueueRemove
10797  000099a8          	.align 2
10798  000099a8          	.proc _QueueLength
10799  000099a8          	.global _QueueLength
10800  000099a8          	_QueueLength:
10801                      ;  Function 'QueueLength'; 0 bytes of locals, 0 regs to save.
10802  000099a8  afbefffc	sw	-4(r29),r30; push fp
10803  000099ac  001df020	add	r30,r0,r29; fp = sp
10804  000099b0  afbffff8	sw	-8(r29),r31; push ret addr
10805  000099b4  2fbd0008	subui	r29,r29,#8; alloc local storage
10806  000099b8  8fc10000	lw	r1,(r30)
10807  000099bc  8c210008	lw	r1,8(r1)
10808  000099c0  8fdffff8	lw	r31,-8(r30)
10809  000099c4  001ee820	add	r29,r0,r30
10810  000099c8  8fdefffc	lw	r30,-4(r30)
10811  000099cc  4be00000	jr	r31
10812  000099d0  54000000	nop
10813  000099d4          	.endproc _QueueLength
10814  000099d4          	.align 2
10815  000099d4          	.proc _QueueEmpty
10816  000099d4          	.global _QueueEmpty
10817  000099d4          	_QueueEmpty:
10818                      ;  Function 'QueueEmpty'; 0 bytes of locals, 0 regs to save.
10819  000099d4  afbefffc	sw	-4(r29),r30; push fp
10820  000099d8  001df020	add	r30,r0,r29; fp = sp
10821  000099dc  afbffff8	sw	-8(r29),r31; push ret addr
10822  000099e0  2fbd0008	subui	r29,r29,#8; alloc local storage
10823  000099e4  8fc10000	lw	r1,(r30)
10824  000099e8  8c210008	lw	r1,8(r1)
10825  000099ec  60210000	seqi	r1,r1,#0
10826  000099f0  8fdffff8	lw	r31,-8(r30)
10827  000099f4  001ee820	add	r29,r0,r30
10828  000099f8  8fdefffc	lw	r30,-4(r30)
10829  000099fc  4be00000	jr	r31
10830  00009a00  54000000	nop
10831  00009a04          	.endproc _QueueEmpty
10832  00009a04          	.data
10833  0001305b          	.align 2
10834  0001305c          	LC0_LF7:
10835  0001305c  50726f63	.ascii "Process #\000"
10835  00013060  65737320	
10835  00013064  2300    	
10836  00013066          	.align 2
10837  00013068          	LC1_LF7:
10838  00013068  52756e6e	.ascii "Running process %d (iteration %d)!\n\000"
10838  0001306c  696e6720	
10838  00013070  70726f63	
10838  00013074  65737320	
10838  00013078  25642028	
10838  0001307c  69746572	
10838  00013080  6174696f	
10838  00013084  6e202564	
10838  00013088  29210a00	
10839  0001308c          	.text
10840  00009a04          	.align 2
10841  00009a04          	.proc _doSomething_LF7
10842  00009a04          	_doSomething_LF7:
10843                      ;  Function 'doSomething'; 80 bytes of locals, 7 regs to save.
10844  00009a04  afbefffc	sw	-4(r29),r30; push fp
10845  00009a08  001df020	add	r30,r0,r29; fp = sp
10846  00009a0c  afbffff8	sw	-8(r29),r31; push ret addr
10847  00009a10  2fbd0078	subui	r29,r29,#120; alloc local storage
10848  00009a14  afa20000	sw	0(r29),r2
10849  00009a18  afa30004	sw	4(r29),r3
10850  00009a1c  afa40008	sw	8(r29),r4
10851  00009a20  afa5000c	sw	12(r29),r5
10852  00009a24  afa60010	sw	16(r29),r6
10853  00009a28  afa70014	sw	20(r29),r7
10854  00009a2c  afa80018	sw	24(r29),r8
10855  00009a30  8fc60000	lw	r6,(r30)
10856  00009a34  2001000a	addi	r1,r0,#10
10857  00009a38  00c00035	movi2fp	f0,r6
10858  00009a3c  00200835	movi2fp	f1,r1
10859  00009a40  0401000f	div	f0,f0,f1
10860  00009a44  00001034	movfp2i	r2,f0
10861  00009a48  50410002	slli	r1,r2,#0x2
10862  00009a4c  00220820	add	r1,r1,r2
10863  00009a50  50210001	slli	r1,r1,#0x1
10864  00009a54  00c13822	sub	r7,r6,r1
10865  00009a58  70c10063	slei	r1,r6,#99
10866  00009a5c  102000d4	beqz	r1,L52_LF7
10867  00009a60  54000000	nop; not filled.
10868  00009a64  23bdfff8	addi	r29,r29,#-8
10869  00009a68  50e10004	slli	r1,r7,#0x4
10870  00009a6c  3c080001	lhi	r8,((_mysems_LF7)>>16)&0xffff
10871  00009a70  25083100	addui	r8,r8,(_mysems_LF7)&0xffff
10872  00009a74  00280820	add	r1,r1,r8
10873  00009a78  afa10000	sw	(r29),r1
10874  00009a7c  20080001	addi	r8,r0,#1
10875  00009a80  afa80004	sw	4(r29),r8
10876  00009a84  0fffe308	jal	_SemInit
10877  00009a88  54000000	nop; not filled.
10878  00009a8c  20030001	addi	r3,r0,#1
10879  00009a90  23bd0008	addi	r29,r29,#8
10880  00009a94  23c4ffd0	addi	r4,r30,#-48
10881  00009a98  23c5ffa8	addi	r5,r30,#-88
10882  00009a9c  00061020	add	r2,r0,r6
10883  00009aa0          	L56_LF7:
10884  00009aa0  23bdfff8	addi	r29,r29,#-8
10885  00009aa4  afa40000	sw	(r29),r4
10886  00009aa8  3c080001	lhi	r8,((LC0_LF7)>>16)&0xffff
10887  00009aac  2508305c	addui	r8,r8,(LC0_LF7)&0xffff
10888  00009ab0  afa80004	sw	4(r29),r8
10889  00009ab4  0fff9ba4	jal	_dstrcpy
10890  00009ab8  54000000	nop; not filled.
10891  00009abc  afa30000	sw	(r29),r3
10892  00009ac0  afa50004	sw	4(r29),r5
10893  00009ac4  0fffa0d0	jal	_ditoa
10894  00009ac8  54000000	nop; not filled.
10895  00009acc  afa40000	sw	(r29),r4
10896  00009ad0  afa50004	sw	4(r29),r5
10897  00009ad4  0fff9c74	jal	_dstrcat
10898  00009ad8  54000000	nop; not filled.
10899  00009adc  23bdfff8	addi	r29,r29,#-8
10900  00009ae0  3c080000	lhi	r8,((_doSomething_LF7)>>16)&0xffff
10901  00009ae4  25089a04	addui	r8,r8,(_doSomething_LF7)&0xffff
10902  00009ae8  afa80000	sw	(r29),r8
10903  00009aec  50410005	slli	r1,r2,#0x5
10904  00009af0  00220822	sub	r1,r1,r2
10905  00009af4  50210002	slli	r1,r1,#0x2
10906  00009af8  00220820	add	r1,r1,r2
10907  00009afc  50210003	slli	r1,r1,#0x3
10908  00009b00  00260820	add	r1,r1,r6
10909  00009b04  afa10004	sw	4(r29),r1
10910  00009b08  afa40008	sw	8(r29),r4
10911  00009b0c  20080000	addi	r8,r0,#0
10912  00009b10  afa8000c	sw	12(r29),r8
10913  00009b14  0fffb6a4	jal	_ProcessFork
10914  00009b18  54000000	nop; not filled.
10915  00009b1c  23bd0010	addi	r29,r29,#16
10916  00009b20  00461020	add	r2,r2,r6
10917  00009b24  20630001	addi	r3,r3,#1
10918  00009b28  70610006	slei	r1,r3,#6
10919  00009b2c  1420ff70	bnez	r1,L56_LF7
10920  00009b30  54000000	nop; not filled.
10921  00009b34          	L52_LF7:
10922  00009b34  23bdfff8	addi	r29,r29,#-8
10923  00009b38  50e10004	slli	r1,r7,#0x4
10924  00009b3c  3c080001	lhi	r8,((_mysems_LF7)>>16)&0xffff
10925  00009b40  25083100	addui	r8,r8,(_mysems_LF7)&0xffff
10926  00009b44  00280820	add	r1,r1,r8
10927  00009b48  afa10000	sw	(r29),r1
10928  00009b4c  0fffe294	jal	_SemWait
10929  00009b50  54000000	nop; not filled.
10930  00009b54  20030000	addi	r3,r0,#0
10931  00009b58  23bd0008	addi	r29,r29,#8
10932  00009b5c  50c20001	slli	r2,r6,#0x1
10933  00009b60  0062082a	slt	r1,r3,r2
10934  00009b64  10200070	beqz	r1,L59_LF7
10935  00009b68  54000000	nop; not filled.
10936  00009b6c  200503e8	addi	r5,r0,#1000
10937  00009b70  00022020	add	r4,r0,r2
10938  00009b74          	L61_LF7:
10939  00009b74  00600035	movi2fp	f0,r3
10940  00009b78  00a00835	movi2fp	f1,r5
10941  00009b7c  0401000f	div	f0,f0,f1
10942  00009b80  00001034	movfp2i	r2,f0
10943  00009b84  50410005	slli	r1,r2,#0x5
10944  00009b88  00220822	sub	r1,r1,r2
10945  00009b8c  50210002	slli	r1,r1,#0x2
10946  00009b90  00220820	add	r1,r1,r2
10947  00009b94  50210003	slli	r1,r1,#0x3
10948  00009b98  00610829	sne	r1,r3,r1
10949  00009b9c  14200028	bnez	r1,L62_LF7
10950  00009ba0  54000000	nop; not filled.
10951  00009ba4  23bdfff0	addi	r29,r29,#-16
10952  00009ba8  3c080001	lhi	r8,((LC1_LF7)>>16)&0xffff
10953  00009bac  25083068	addui	r8,r8,(LC1_LF7)&0xffff
10954  00009bb0  afa80000	sw	(r29),r8
10955  00009bb4  afa60004	sw	4(r29),r6
10956  00009bb8  afa30008	sw	8(r29),r3
10957  00009bbc  0c0005c0	jal	_printf
10958  00009bc0  54000000	nop; not filled.
10959  00009bc4  23bd0010	addi	r29,r29,#16
10960  00009bc8          	L62_LF7:
10961  00009bc8  20630001	addi	r3,r3,#1
10962  00009bcc  0064082a	slt	r1,r3,r4
10963  00009bd0  1420ffa0	bnez	r1,L61_LF7
10964  00009bd4  54000000	nop; not filled.
10965  00009bd8          	L59_LF7:
10966  00009bd8  23bdfff8	addi	r29,r29,#-8
10967  00009bdc  50e10004	slli	r1,r7,#0x4
10968  00009be0  3c080001	lhi	r8,((_mysems_LF7)>>16)&0xffff
10969  00009be4  25083100	addui	r8,r8,(_mysems_LF7)&0xffff
10970  00009be8  00280820	add	r1,r1,r8
10971  00009bec  afa10000	sw	(r29),r1
10972  00009bf0  0fffe46c	jal	_SemSignal
10973  00009bf4  54000000	nop; not filled.
10974  00009bf8  23bd0008	addi	r29,r29,#8
10975  00009bfc  8fa20000	lw	r2,0(r29)
10976  00009c00  8fa30004	lw	r3,4(r29)
10977  00009c04  8fa40008	lw	r4,8(r29)
10978  00009c08  8fa5000c	lw	r5,12(r29)
10979  00009c0c  8fa60010	lw	r6,16(r29)
10980  00009c10  8fa70014	lw	r7,20(r29)
10981  00009c14  8fa80018	lw	r8,24(r29)
10982  00009c18  8fdffff8	lw	r31,-8(r30)
10983  00009c1c  001ee820	add	r29,r0,r30
10984  00009c20  8fdefffc	lw	r30,-4(r30)
10985  00009c24  4be00000	jr	r31
10986  00009c28  54000000	nop
10987  00009c2c          	.endproc _doSomething_LF7
10988  00009c2c          	.data
10989  0001308c          	.align 2
10990  0001308c          	LC2_LF7:
10991  0001308c  63686173	.ascii "chasetail\000"
10991  00013090  65746169	
10991  00013094  6c00    	
10992  00013096          	.align 2
10993  00013098          	LC3_LF7:
10994  00013098  43686173	.ascii "Chasing tail %d.\n\000"
10994  0001309c  696e6720	
10994  000130a0  7461696c	
10994  000130a4  2025642e	
10994  000130a8  0a00    	
10995  000130aa          	.align 2
10996  000130ac          	LC4_LF7:
10997  000130ac  4f70656e	.ascii "Open of (%s,0x%x) returns 0x%x.\n\000"
10997  000130b0  206f6620	
10997  000130b4  2825732c	
10997  000130b8  30782578	
10997  000130bc  29207265	
10997  000130c0  7475726e	
10997  000130c4  73203078	
10997  000130c8  25782e0a	
10997  000130cc  00      	
10998  000130cd          	.align 2
10999  000130d0          	LC5_LF7:
11000  000130d0  43686173	.ascii "ChaseTail\000"
11000  000130d4  65546169	
11000  000130d8  6c00    	
11001  000130da          	.text
11002  00009c2c          	.align 2
11003  00009c2c          	.proc _chaseTail_LF7
11004  00009c2c          	_chaseTail_LF7:
11005                      ;  Function 'chaseTail'; 0 bytes of locals, 4 regs to save.
11006  00009c2c  afbefffc	sw	-4(r29),r30; push fp
11007  00009c30  001df020	add	r30,r0,r29; fp = sp
11008  00009c34  afbffff8	sw	-8(r29),r31; push ret addr
11009  00009c38  2fbd0018	subui	r29,r29,#24; alloc local storage
11010  00009c3c  afa20000	sw	0(r29),r2
11011  00009c40  afa30004	sw	4(r29),r3
11012  00009c44  afa40008	sw	8(r29),r4
11013  00009c48  afa5000c	sw	12(r29),r5
11014  00009c4c  8fc40000	lw	r4,(r30)
11015  00009c50  3c030001	lhi	r3,((LC2_LF7)>>16)&0xffff
11016  00009c54  2463308c	addui	r3,r3,(LC2_LF7)&0xffff
11017  00009c58  23bdfff8	addi	r29,r29,#-8
11018  00009c5c  3c050001	lhi	r5,((LC3_LF7)>>16)&0xffff
11019  00009c60  24a53098	addui	r5,r5,(LC3_LF7)&0xffff
11020  00009c64  afa50000	sw	(r29),r5
11021  00009c68  afa40004	sw	4(r29),r4
11022  00009c6c  0c000510	jal	_printf
11023  00009c70  54000000	nop; not filled.
11024  00009c74  afa30000	sw	(r29),r3
11025  00009c78  20822000	addi	r2,r4,#8192
11026  00009c7c  afa20004	sw	4(r29),r2
11027  00009c80  0c0004a8	jal	_Open
11028  00009c84  54000000	nop; not filled.
11029  00009c88  23bdfff8	addi	r29,r29,#-8
11030  00009c8c  3c050001	lhi	r5,((LC4_LF7)>>16)&0xffff
11031  00009c90  24a530ac	addui	r5,r5,(LC4_LF7)&0xffff
11032  00009c94  afa50000	sw	(r29),r5
11033  00009c98  afa30004	sw	4(r29),r3
11034  00009c9c  afa20008	sw	8(r29),r2
11035  00009ca0  afa1000c	sw	12(r29),r1
11036  00009ca4  0c0004d8	jal	_printf
11037  00009ca8  54000000	nop; not filled.
11038  00009cac  23bd0010	addi	r29,r29,#16
11039  00009cb0  70810027	slei	r1,r4,#39
11040  00009cb4  1020003c	beqz	r1,L67_LF7
11041  00009cb8  54000000	nop; not filled.
11042  00009cbc  23bdfff0	addi	r29,r29,#-16
11043  00009cc0  3c050000	lhi	r5,((_chaseTail_LF7)>>16)&0xffff
11044  00009cc4  24a59c2c	addui	r5,r5,(_chaseTail_LF7)&0xffff
11045  00009cc8  afa50000	sw	(r29),r5
11046  00009ccc  20810001	addi	r1,r4,#1
11047  00009cd0  afa10004	sw	4(r29),r1
11048  00009cd4  3c050001	lhi	r5,((LC5_LF7)>>16)&0xffff
11049  00009cd8  24a530d0	addui	r5,r5,(LC5_LF7)&0xffff
11050  00009cdc  afa50008	sw	8(r29),r5
11051  00009ce0  20050000	addi	r5,r0,#0
11052  00009ce4  afa5000c	sw	12(r29),r5
11053  00009ce8  0fffb4d0	jal	_ProcessFork
11054  00009cec  54000000	nop; not filled.
11055  00009cf0  23bd0010	addi	r29,r29,#16
11056  00009cf4          	L67_LF7:
11057  00009cf4  8fa20000	lw	r2,0(r29)
11058  00009cf8  8fa30004	lw	r3,4(r29)
11059  00009cfc  8fa40008	lw	r4,8(r29)
11060  00009d00  8fa5000c	lw	r5,12(r29)
11061  00009d04  8fdffff8	lw	r31,-8(r30)
11062  00009d08  001ee820	add	r29,r0,r30
11063  00009d0c  8fdefffc	lw	r30,-4(r30)
11064  00009d10  4be00000	jr	r31
11065  00009d14  54000000	nop
11066  00009d18          	.endproc _chaseTail_LF7
11067  00009d18          	.data
11068  000130da          	.align 2
11069  000130dc          	LC6_LF7:
11070  000130dc  25642000	.ascii "%d \000"
11071  000130e0          	.align 2
11072  000130e0          	LC7_LF7:
11073  000130e0  52616e64	.ascii "Random number %02i is 0x%08x.\n\000"
11073  000130e4  6f6d206e	
11073  000130e8  756d6265	
11073  000130ec  72202530	
11073  000130f0  32692069	
11073  000130f4  73203078	
11073  000130f8  25303878	
11073  000130fc  2e0a00  	
11074  000130ff          	.text
11075  00009d18          	.align 2
11076  00009d18          	.proc _SysprocCreateProcesses
11077  00009d18          	.global _SysprocCreateProcesses
11078  00009d18          	_SysprocCreateProcesses:
11079                      ;  Function 'SysprocCreateProcesses'; 0 bytes of locals, 3 regs to save.
11080  00009d18  afbefffc	sw	-4(r29),r30; push fp
11081  00009d1c  001df020	add	r30,r0,r29; fp = sp
11082  00009d20  afbffff8	sw	-8(r29),r31; push ret addr
11083  00009d24  2fbd0018	subui	r29,r29,#24; alloc local storage
11084  00009d28  afa20000	sw	0(r29),r2
11085  00009d2c  afa30004	sw	4(r29),r3
11086  00009d30  afa40008	sw	8(r29),r4
11087  00009d34  3c020001	lhi	r2,((_mysems_LF7)>>16)&0xffff
11088  00009d38  24423100	addui	r2,r2,(_mysems_LF7)&0xffff
11089  00009d3c  20430090	addi	r3,r2,#144
11090  00009d40          	L102_LF7:
11091  00009d40  23bdfff8	addi	r29,r29,#-8
11092  00009d44  afa20000	sw	(r29),r2
11093  00009d48  20040001	addi	r4,r0,#1
11094  00009d4c  afa40004	sw	4(r29),r4
11095  00009d50  0fffe03c	jal	_SemInit
11096  00009d54  54000000	nop; not filled.
11097  00009d58  23bd0008	addi	r29,r29,#8
11098  00009d5c  20420010	addi	r2,r2,#16
11099  00009d60  0043082c	sle	r1,r2,r3
11100  00009d64  1420ffd8	bnez	r1,L102_LF7
11101  00009d68  54000000	nop; not filled.
11102  00009d6c  8fa20000	lw	r2,0(r29)
11103  00009d70  8fa30004	lw	r3,4(r29)
11104  00009d74  8fa40008	lw	r4,8(r29)
11105  00009d78  8fdffff8	lw	r31,-8(r30)
11106  00009d7c  001ee820	add	r29,r0,r30
11107  00009d80  8fdefffc	lw	r30,-4(r30)
11108  00009d84  4be00000	jr	r31
11109  00009d88  54000000	nop
11110  00009d8c          	.endproc _SysprocCreateProcesses
11111  00009d8c          	.data
11112  000130ff          	.align 2
11113  00013100          	_mysems_LF7:
11114  00013100          	.space 160
11115                      ;;; This file just includes a single variable that contains the last address
11116                      ;;; in the operating system.  The rest of memory is available for use by
11117                      ;;; processes.
11119  000131a0          	.align 2
11120  000131a0          	.global _lastosaddress
11121  000131a0          	_lastosaddress:
11122  000131a0  000131a8	.word _lastosaddress+8
11123                      ;
11124                      ; Stub functions for DLX traps.
11125                      ;
11126                      ; Aaron Sawdey 1996; released to the Public Domain.
11127                      ;
11128  000131a4          	.text
11129  00009d8c          	.align 2
11130  00009d8c          	.proc _random
11131  00009d8c          	.global _random
11132  00009d8c          	_random:
11133  00009d8c  44002020	trap	#0x2020
11134  00009d90  4be00000	jr	r31
11135  00009d94  54000000	nop
11136  00009d98          	.endproc _random
11138  00009d98          	.proc _srandom
11139  00009d98          	.global _srandom
11140  00009d98          	_srandom:
11141  00009d98  44002021	trap	#0x2021
11142  00009d9c  4be00000	jr	r31
11143  00009da0  54000000	nop
11144  00009da4          	.endproc _srandom
11145                      ;;; 
11146                      ;;; Initialization code for programs running in the DLX simulator.
11147                      ;;; Copyright (c) 1999 by Ethan Miller
11148                      ;;; 
11149                      ;;;
11152  00009da4          	.align 2
11154                      ;;;----------------------------------------------------------------------
11155                      ;;; osinit
11156                      ;;;
11157                      ;;; This is the first function called by the simulator, even before main.
11158                      ;;; Since it's called BEFORE any "real" routines, we can use any registers
11159                      ;;; we want as long as we don't mess up the stack or frame pointers.
11160                      ;;;
11161                      ;;; This routine loads the interrupt vector to point to the interrupt
11162                      ;;; handler later in this file.  It should never return, because _main
11163                      ;;; should call exitsim() or exit() rather than returning here.
11164                      ;;; 
11165                      ;;; After initialization is done, this routine jumps to _main to start the
11166                      ;;; C code portion of the operating system.
11167                      ;;;----------------------------------------------------------------------
11168  00009da4          	.proc _osinit
11169  00009da4          	.global _osinit
11170  00009da4          	_osinit:
11171                      ;; Set up the interrupt handler
11172  00009da4  3c010000	lhi	r1,(_intrhandler>>16)&0xffff
11173  00009da8  24219db4	addui	r1,r1,_intrhandler&0xffff
11174  00009dac  00204030	movi2s	intrvec,r1
11175                      ;; Never returns because exitsim is called first
11176  00009db0  0bffca98	j	_main
11177  00009db4          	.endproc _osinit
11179                      ;;;----------------------------------------------------------------------
11180                      ;;; intrhandler
11181                      ;;;
11182                      ;;; Called when an interrupt or trap is received by the CPU.  It stores the
11183                      ;;; current register set on the system stack.  It then pushes the parameters
11184                      ;;; to the C interrupt handler onto the stack: the ISR, IAR, and CAUSE
11185                      ;;; registers along with the original stack pointer.  The C interrupt
11186                      ;;; handler can then copy arguments from the original stack, performing
11187                      ;;; user -> system translations if necessary.
11188                      ;;; 
11189                      ;;;----------------------------------------------------------------------
11190  00009db4          	.proc _intrhandler
11191  00009db4          	.global _intrhandler
11192  00009db4          	_intrhandler:
11193                      ;; We can use r31 as scratch space because its value was saved in
11194                      ;; ir31.  However, we must save the "real" value of r31 on the
11195                      ;; stack.
11197                      ;; Always store the registers on the system stack.  This way, we don't
11198                      ;; have to worry about translating things from user -> system.  We
11199                      ;; use r31 as the base register because its value was saved in ir31.
11201                      ;; If this was a user process, load r29 with the current system
11202                      ;; stack pointer.  If it was a system process, just use the
11203                      ;; current stack pointer.
11204  00009db4  0060f831	movs2i	r31,isr
11205  00009db8  33ff0040	andi	r31,r31,0x40
11206  00009dbc  17e0001c	bnez	r31,intrSystem_LF10
11207  00009dc0  3c1f0000	lhi	r31,(_currentPCB>>16)&0xffff
11208  00009dc4  27fffcf0	addui	r31,r31,_currentPCB&0xffff
11209  00009dc8  8fff0000	lw	r31,(r31)
11210  00009dcc  8fff0004	lw	r31,4(r31)
11211                      ;; Save the original (user) stack pointer
11212  00009dd0  affdff48	sw	-184(r31),r29; we haven't yet bumped SP, and 156-340 = -184
11213                      ;; Copy the system stack pointer into r29 (current stack pointer)
11214  00009dd4  37fd0000	ori	r29,r31,0
11215  00009dd8  10000004	beqz	r0,intrSaveReg_LF10; skip over the system part....
11216  00009ddc          	intrSystem_LF10:
11217                      ;; Use the stack pointer we're already using
11218                      ;; Save r29 because we won't save it later
11219  00009ddc  afbdff48	sw	-184(r29),r29; we haven't yet bumped SP, and 156-340 = -184
11220  00009de0          	intrSaveReg_LF10:
11221                      ;; Adjust stack pointer for all the stuff we're going to push.  This
11222                      ;; is a bit more space than we need currently, but it leaves room
11223                      ;; for more stuff if needed.
11224  00009de0  2fbd0154	subui	r29,r29,#340
11225                      ;; Push all the stuff onto the stack
11226  00009de4  afa1002c	sw	44(r29),r1
11227  00009de8  afa20030	sw	48(r29),r2
11228  00009dec  afa30034	sw	52(r29),r3
11229  00009df0  afa40038	sw	56(r29),r4
11230  00009df4  afa5003c	sw	60(r29),r5
11231  00009df8  afa60040	sw	64(r29),r6
11232  00009dfc  afa70044	sw	68(r29),r7
11233  00009e00  afa80048	sw	72(r29),r8
11234  00009e04  afa9004c	sw	76(r29),r9
11235  00009e08  afaa0050	sw	80(r29),r10
11236  00009e0c  afab0054	sw	84(r29),r11
11237  00009e10  afac0058	sw	88(r29),r12
11238  00009e14  afad005c	sw	92(r29),r13
11239  00009e18  afae0060	sw	96(r29),r14
11240  00009e1c  afaf0064	sw	100(r29),r15
11241  00009e20  afb00068	sw	104(r29),r16
11242  00009e24  afb1006c	sw	108(r29),r17
11243  00009e28  afb20070	sw	112(r29),r18
11244  00009e2c  afb30074	sw	116(r29),r19
11245  00009e30  afb40078	sw	120(r29),r20
11246  00009e34  afb5007c	sw	124(r29),r21
11247  00009e38  afb60080	sw	128(r29),r22
11248  00009e3c  afb70084	sw	132(r29),r23
11249  00009e40  afb80088	sw	136(r29),r24
11250  00009e44  afb9008c	sw	140(r29),r25
11251  00009e48  afba0090	sw	144(r29),r26
11252  00009e4c  afbb0094	sw	148(r29),r27
11253  00009e50  afbc0098	sw	152(r29),r28
11254                      ;; Skip r29 - stored earlier!
11255  00009e54  afbe00a0	sw	160(r29),r30
11256                      ;; Load the value of r31 from the special register and then save it
11257  00009e58  00401831	movs2i	r3,ir31
11258  00009e5c  afa300a4	sw	164(r29),r3
11259                      ;; Store the floating-point registers
11260  00009e60  bfa000a8	sd	168(r29),f0
11261  00009e64  bfa200b0	sd	176(r29),f2
11262  00009e68  bfa400b8	sd	184(r29),f4
11263  00009e6c  bfa600c0	sd	192(r29),f6
11264  00009e70  bfa800c8	sd	200(r29),f8
11265  00009e74  bfaa00d0	sd	208(r29),f10
11266  00009e78  bfac00d8	sd	216(r29),f12
11267  00009e7c  bfae00e0	sd	224(r29),f14
11268  00009e80  bfb000e8	sd	232(r29),f16
11269  00009e84  bfb200f0	sd	240(r29),f18
11270  00009e88  bfb400f8	sd	248(r29),f20
11271  00009e8c  bfb60100	sd	256(r29),f22
11272  00009e90  bfb80108	sd	264(r29),f24
11273  00009e94  bfba0110	sd	272(r29),f26
11274  00009e98  bfbc0118	sd	280(r29),f28
11275  00009e9c  bfbe0120	sd	288(r29),f30
11276                      ;; NOTE: we don't save the interrupt vector register because it
11277                      ;; doesn't change from process to process.
11278                      ;; NOTE: we don't save the status register because most of the flags
11279                      ;; are the same from process to process if they're in the interrupt
11280                      ;; handler.  Of course, we DO save the ISR.
11281  00009ea0  00802031	movs2i	r4,iar
11282  00009ea4  afa40128	sw	296(r29),r4
11283  00009ea8  00602831	movs2i	r5,isr
11284  00009eac  afa5012c	sw	300(r29),r5
11285  00009eb0  00c03031	movs2i	r6,cause
11286  00009eb4  afa60130	sw	304(r29),r6
11287  00009eb8  01201831	movs2i	r3,fault
11288  00009ebc  afa30134	sw	308(r29),r3
11289  00009ec0  01801831	movs2i	r3,ptbase
11290  00009ec4  afa30138	sw	312(r29),r3
11291  00009ec8  01a01831	movs2i	r3,ptsize
11292  00009ecc  afa3013c	sw	316(r29),r3
11293  00009ed0  01c01831	movs2i	r3,ptbits
11294  00009ed4  afa30140	sw	320(r29),r3
11296                      ;; Push the interrupt information onto the stack
11297  00009ed8  afa60000	sw	0(r29),r6; push CAUSE
11298  00009edc  afa40004	sw	4(r29),r4; push IAR
11299  00009ee0  afa50008	sw	8(r29),r5; push ISR
11300                      ;; Get the original stack pointer
11301  00009ee4  8fa1009c	lw	r1,156(r29)
11302  00009ee8  afa1000c	sw	12(r29),r1
11303                      ;; Save the previous interrupt stack frame address in the current frame
11304  00009eec  3c010000	lhi	r1,(_currentPCB>>16)&0xffff
11305  00009ef0  2421fcf0	addui	r1,r1,_currentPCB&0xffff
11306  00009ef4  8c210000	lw	r1,(r1)
11307  00009ef8  8c220000	lw	r2,0(r1)
11308  00009efc  afa20028	sw	40(r29),r2
11309                      ;; Save this frame address in the PCB.  This is used so the OS can
11310                      ;; easily access the current interrupt save frame
11311  00009f00  ac3d0000	sw	0(r1),r29
11312                      ;; Call the "real" interrupt handler.  This will possibly switch
11313                      ;; contexts.  This call never returns; instead, a separate routine
11314                      ;; (_intrreturn) is called to return from interrupts after restoring
11315                      ;; the current context.
11316  00009f04  0bffec24	j	_dointerrupt
11317  00009f08  54000000	nop
11318  00009f0c          	.endproc _intrhandler
11320                      ;;;----------------------------------------------------------------------
11321                      ;;; intrreturn
11322                      ;;;
11323                      ;;; Return from an interrupt or trap.  This restores all of the previously
11324                      ;;; saved registers and then returns to where the program left off.  The
11325                      ;;; current contents of the registers are destroyed.  This routine uses
11326                      ;;; the saved interrupt frame pointer, so the stack pointer need not
11327                      ;;; be correct.  Note, though, that the register contents from the previous
11328                      ;;; process must have previously been saved - in other words, call this
11329                      ;;; routine from a trap or interrupt handler.
11330                      ;;;----------------------------------------------------------------------
11331  00009f0c          	.proc _intrreturn
11332  00009f0c          	.global _intrreturn
11333  00009f0c          	_intrreturn:
11334                      ;; Disable interrupts - this routine must be atomic, and interrupts
11335                      ;; may not be currently disabled.  Don't worry about saving registers
11336                      ;; because we're about to reload them anyway.
11337  00009f0c  0ffff72c	jal	_DisableIntrs
11338                      ;; Get our interrupt stack frame location and load it into the stack
11339                      ;; pointer.
11340  00009f10  3c010000	lhi	r1,(_currentPCB>>16)&0xffff
11341  00009f14  2421fcf0	addui	r1,r1,_currentPCB&0xffff
11342  00009f18  8c210000	lw	r1,0(r1)
11343  00009f1c  8c3d0000	lw	r29,0(r1)
11344                      ;; Get the previous interrupt stack frame location and make it the
11345                      ;; current interrupt save frame.
11346  00009f20  8fa20028	lw	r2,40(r29)
11347  00009f24  ac220000	sw	0(r1),r2
11349                      ;; Reload the registers for the new process.  We don't have to
11350                      ;; load in the exact opposite order as long as we're careful to
11351                      ;; get the right values back in.
11352  00009f28  8fa30128	lw	r3,296(r29)
11353  00009f2c  00602030	movi2s	iar,r3
11354  00009f30  8fa3012c	lw	r3,300(r29)
11355  00009f34  00601830	movi2s	isr,r3
11356  00009f38  8fa30130	lw	r3,304(r29)
11357  00009f3c  00603030	movi2s	cause,r3
11358  00009f40  8fa30134	lw	r3,308(r29)
11359  00009f44  00604830	movi2s	fault,r3
11360  00009f48  8fa30138	lw	r3,312(r29)
11361  00009f4c  00606030	movi2s	ptbase,r3
11362  00009f50  8fa3013c	lw	r3,316(r29)
11363  00009f54  00606830	movi2s	ptsize,r3
11364  00009f58  8fa30140	lw	r3,320(r29)
11365  00009f5c  00607030	movi2s	ptbits,r3
11367                      ;; Reload the floating point registers
11368  00009f60  9fa000a8	ld	f0,168(r29)
11369  00009f64  9fa200b0	ld	f2,176(r29)
11370  00009f68  9fa400b8	ld	f4,184(r29)
11371  00009f6c  9fa600c0	ld	f6,192(r29)
11372  00009f70  9fa800c8	ld	f8,200(r29)
11373  00009f74  9faa00d0	ld	f10,208(r29)
11374  00009f78  9fac00d8	ld	f12,216(r29)
11375  00009f7c  9fae00e0	ld	f14,224(r29)
11376  00009f80  9fb000e8	ld	f16,232(r29)
11377  00009f84  9fb200f0	ld	f18,240(r29)
11378  00009f88  9fb400f8	ld	f20,248(r29)
11379  00009f8c  9fb60100	ld	f22,256(r29)
11380  00009f90  9fb80108	ld	f24,264(r29)
11381  00009f94  9fba0110	ld	f26,272(r29)
11382  00009f98  9fbc0118	ld	f28,280(r29)
11383  00009f9c  9fbe0120	ld	f30,288(r29)
11385                      ;; Reload the integer registers.  We don't reload r0 because it's
11386                      ;; always 0.  We won't reload r29 here because we're using it as
11387                      ;; the stack pointer.  The same goes for r1, which we'll use as
11388                      ;; scratch so we can store r29.
11389                      ;; Skip r1 - restored later
11390  00009fa0  8fa20030	lw	r2,48(r29)
11391  00009fa4  8fa30034	lw	r3,52(r29)
11392  00009fa8  8fa40038	lw	r4,56(r29)
11393  00009fac  8fa5003c	lw	r5,60(r29)
11394  00009fb0  8fa60040	lw	r6,64(r29)
11395  00009fb4  8fa70044	lw	r7,68(r29)
11396  00009fb8  8fa80048	lw	r8,72(r29)
11397  00009fbc  8fa9004c	lw	r9,76(r29)
11398  00009fc0  8faa0050	lw	r10,80(r29)
11399  00009fc4  8fab0054	lw	r11,84(r29)
11400  00009fc8  8fac0058	lw	r12,88(r29)
11401  00009fcc  8fad005c	lw	r13,92(r29)
11402  00009fd0  8fae0060	lw	r14,96(r29)
11403  00009fd4  8faf0064	lw	r15,100(r29)
11404  00009fd8  8fb00068	lw	r16,104(r29)
11405  00009fdc  8fb1006c	lw	r17,108(r29)
11406  00009fe0  8fb20070	lw	r18,112(r29)
11407  00009fe4  8fb30074	lw	r19,116(r29)
11408  00009fe8  8fb40078	lw	r20,120(r29)
11409  00009fec  8fb5007c	lw	r21,124(r29)
11410  00009ff0  8fb60080	lw	r22,128(r29)
11411  00009ff4  8fb70084	lw	r23,132(r29)
11412  00009ff8  8fb80088	lw	r24,136(r29)
11413  00009ffc  8fb9008c	lw	r25,140(r29)
11414  0000a000  8fba0090	lw	r26,144(r29)
11415  0000a004  8fbb0094	lw	r27,148(r29)
11416  0000a008  8fbc0098	lw	r28,152(r29)
11417                      ;; Skip r29 - restored later
11418  0000a00c  8fbe00a0	lw	r30,160(r29)
11419  0000a010  8fbf00a4	lw	r31,164(r29)
11421  0000a014  27bd0154	addui	r29,r29,#340
11422                      ;; Save the current value of the stack pointer after adjusting it
11423                      ;; Note that this will "destroy" the stack values below this interrupt
11424                      ;; stack frame.  This is exactly what we want!
11425  0000a018  ac3d0004	sw	4(r1),r29
11426  0000a01c  37a10000	ori	r1,r29,#0
11427  0000a020  8c3dff48	lw	r29,-184(r1); 156-340 = -184
11428  0000a024  8c21fed8	lw	r1,-296(r1); 44-340 = -296
11429  0000a028  40000000	rfe
11430  0000a02c          	.endproc _intrreturn
11432                      ;;;----------------------------------------------------------------------
11433                      ;;; SetIntrs
11434                      ;;;
11435                      ;;; This routine sets the interrupt level to the value passed (0 -> all
11436                      ;;; interrupts enabled; 0xf -> all interrupts disabled).  It returns the
11437                      ;;; former value for the interrupt flags.
11438                      ;;;----------------------------------------------------------------------
11439  0000a02c          	.proc _SetIntrs
11440  0000a02c          	.global _SetIntrs
11441  0000a02c          	_SetIntrs:
11442  0000a02c  2fbd0010	subui	r29,r29,#16
11443  0000a030  afa2000c	sw	12(r29),r2; save r2
11444  0000a034  8fa20010	lw	r2,16(r29); Get the new interrupt level
11445  0000a038  3042000f	andi	r2,r2,#0x0f; Mask off interrupt levels
11446  0000a03c  00a00831	movs2i	r1,status
11447  0000a040  afa10008	sw	8(r29),r1; Store the old interrupt values
11448  0000a044  3021fff0	andi	r1,r1,#0xfff0; Mask off old interrupt level
11449  0000a048  00410825	or	r1,r2,r1; OR in new interrupt level
11450  0000a04c  00202830	movi2s	status,r1
11451  0000a050  8fa10008	lw	r1,8(r29); Get back the original interrupt level
11452  0000a054  3021000f	andi	r1,r1,#0x0f; Mask off all but interrupt levels
11453  0000a058  8fa2000c	lw	r2,12(r29); restore r2
11454  0000a05c  27bd0010	addui	r29,r29,#16; restore stack pointer
11455  0000a060  4be00000	jr	r31
11456  0000a064  54000000	nop
11457  0000a068          	.endproc _SetIntrs
11459  0000a068          	.proc _CurrentIntrs
11460  0000a068          	.global _CurrentIntrs
11461  0000a068          	_CurrentIntrs:
11462  0000a068  00a00831	movs2i	r1,status
11463  0000a06c  3021000f	andi	r1,r1,#0xf
11464  0000a070  4be00000	jr	r31
11465  0000a074  54000000	nop
11466  0000a078          	.endproc _CurrentIntrs
11467                      ;;;----------------------------------------------------------------------
11468                      ;;; _ProcessSleep
11469                      ;;;
11470                      ;;; If a context switch from elsewhere in the kernel is desired, take a
11471                      ;;; trap and call this routine from the trap handler.
11472                      ;;;----------------------------------------------------------------------
11473  0000a078          	.proc _ProcessSleep
11474  0000a078          	.global _ProcessSleep
11475  0000a078          	_ProcessSleep:
11476  0000a078  44000410	trap	#0x410; This is a process sleep trap
11477  0000a07c  54000000	nop
11478  0000a080  4be00000	jr	r31
11479  0000a084  54000000	nop
11480  0000a088          	.endproc _ProcessSleep
11481                      ;;;
11482                      ;;; Stub functions for DLX traps.
11483                      ;;;
11484                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
11485                      ;;;
11486                      ;;; The traps such as Open and Close
11487                      ;;; (note the capital letters) are for use by user programs.  The traps
11488                      ;;; with names such as open and close (lower case) are for use by the OS.
11489                      ;;;
11492  0000a088          	.align 2
11494                      ;;; The following are the traps to be used by user-level programs
11495                      ;;;
11497  0000a088          	.align 2
11498  0000a088          	.proc _Open
11499  0000a088          	.global _Open
11500  0000a088          	_Open:
11501                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
11502                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
11503                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
11504  0000a088  44000213	trap	#0x213
11505  0000a08c  4be00000	jr	r31
11506  0000a090  54000000	nop
11507  0000a094          	.endproc _Open
11509  0000a094          	.proc _Close
11510  0000a094          	.global _Close
11511  0000a094          	_Close:
11512  0000a094  44000214	trap	#0x214
11513  0000a098  4be00000	jr	r31
11514  0000a09c  54000000	nop
11515  0000a0a0          	.endproc _Close
11517  0000a0a0          	.proc _Read
11518  0000a0a0          	.global _Read
11519  0000a0a0          	_Read:
11520  0000a0a0  44000210	trap	#0x210
11521  0000a0a4  4be00000	jr	r31
11522  0000a0a8  54000000	nop
11523  0000a0ac          	.endproc _Read
11525  0000a0ac          	.proc _Write
11526  0000a0ac          	.global _Write
11527  0000a0ac          	_Write:
11528  0000a0ac  44000211	trap	#0x211
11529  0000a0b0  4be00000	jr	r31
11530  0000a0b4  54000000	nop
11531  0000a0b8          	.endproc _Write
11533  0000a0b8          	.proc _Lseek
11534  0000a0b8          	.global _Lseek
11535  0000a0b8          	_Lseek:
11536  0000a0b8  44000212	trap	#0x212
11537  0000a0bc  4be00000	jr	r31
11538  0000a0c0  54000000	nop
11539  0000a0c4          	.endproc _Lseek
11541  0000a0c4          	.proc _Printf
11542  0000a0c4          	.global _Printf
11543  0000a0c4          	_Printf:
11544  0000a0c4  44000201	trap	#0x201
11545  0000a0c8  4be00000	jr	r31
11546  0000a0cc  54000000	nop
11547  0000a0d0          	.endproc _Printf
11549                      ;;; STP ADDED
11550  0000a0d0          	.proc _Getpid
11551  0000a0d0          	.global _Getpid
11552  0000a0d0          	_Getpid:
11553  0000a0d0  44000440	trap	#0x440
11554  0000a0d4  4be00000	jr	r31
11555  0000a0d8  54000000	nop
11556  0000a0dc          	.endproc _Getpid
11557                      ;;; Ethan L. Miller, 1999.  Released to the public domain
11558                      ;;;
11559                      ;;; Most of the traps are called in files from libtraps.
11562  0000a0dc          	.align 2
11563  0000a0dc          	.proc _exit
11564  0000a0dc          	.global _exit
11565  0000a0dc          	_exit:
11566  0000a0dc  44000300	trap	#0x300
11567  0000a0e0  4be00000	jr	r31
11568  0000a0e4  54000000	nop
11569  0000a0e8          	.endproc _exit
11571                      ; for the benefit of gcc.
11572  0000a0e8          	.proc ___main
11573  0000a0e8          	.global ___main
11574  0000a0e8          	___main:
11575  0000a0e8  4be00000	jr	r31
11576  0000a0ec  54000000	nop
11577  0000a0f0          	.endproc ___main
11578                      ;;;
11579                      ;;; Stub functions for DLX traps.
11580                      ;;;
11581                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
11582                      ;;;
11583                      ;;; There are two sets of traps here.  The traps such as Open and Close
11584                      ;;; (note the capital letters) are for use by user programs.  The traps
11585                      ;;; with names such as open and close (lower case) are for use by the OS.
11586                      ;;;
11589  0000a0f0          	.align 2
11590  0000a0f0          	.proc _open
11591  0000a0f0          	.global _open
11592  0000a0f0          	_open:
11593  0000a0f0  44002013	trap	#0x2013
11594  0000a0f4  4be00000	jr	r31
11595  0000a0f8  54000000	nop
11596  0000a0fc          	.endproc _open
11598  0000a0fc          	.proc _close
11599  0000a0fc          	.global _close
11600  0000a0fc          	_close:
11601  0000a0fc  44002014	trap	#0x2014
11602  0000a100  4be00000	jr	r31
11603  0000a104  54000000	nop
11604  0000a108          	.endproc _close
11606  0000a108          	.proc _read
11607  0000a108          	.global _read
11608  0000a108          	_read:
11609  0000a108  44002010	trap	#0x2010
11610  0000a10c  4be00000	jr	r31
11611  0000a110  54000000	nop
11612  0000a114          	.endproc _read
11614  0000a114          	.proc _write
11615  0000a114          	.global _write
11616  0000a114          	_write:
11617  0000a114  44002011	trap	#0x2011
11618  0000a118  4be00000	jr	r31
11619  0000a11c  54000000	nop
11620  0000a120          	.endproc _write
11622  0000a120          	.proc _lseek
11623  0000a120          	.global _lseek
11624  0000a120          	_lseek:
11625  0000a120  44002012	trap	#0x2012
11626  0000a124  4be00000	jr	r31
11627  0000a128  54000000	nop
11628  0000a12c          	.endproc _lseek
11630                      ;;; The following are the traps to be used by user-level programs
11631                      ;;;
11633  0000a12c          	.align 2
11634  0000a12c          	.proc _Open
11635  0000a12c          	.global _Open
11636  0000a12c          	_Open:
11637  0000a12c  44000213	trap	#0x213
11638  0000a130  4be00000	jr	r31
11639  0000a134  54000000	nop
11640  0000a138          	.endproc _Open
11642  0000a138          	.proc _Close
11643  0000a138          	.global _Close
11644  0000a138          	_Close:
11645  0000a138  44000214	trap	#0x214
11646  0000a13c  4be00000	jr	r31
11647  0000a140  54000000	nop
11648  0000a144          	.endproc _Close
11650  0000a144          	.proc _Read
11651  0000a144          	.global _Read
11652  0000a144          	_Read:
11653  0000a144  44000210	trap	#0x210
11654  0000a148  4be00000	jr	r31
11655  0000a14c  54000000	nop
11656  0000a150          	.endproc _Read
11658  0000a150          	.proc _Write
11659  0000a150          	.global _Write
11660  0000a150          	_Write:
11661  0000a150  44000211	trap	#0x211
11662  0000a154  4be00000	jr	r31
11663  0000a158  54000000	nop
11664  0000a15c          	.endproc _Write
11666  0000a15c          	.proc _Lseek
11667  0000a15c          	.global _Lseek
11668  0000a15c          	_Lseek:
11669  0000a15c  44000212	trap	#0x212
11670  0000a160  4be00000	jr	r31
11671  0000a164  54000000	nop
11672  0000a168          	.endproc _Lseek
11674                      ;;;
11675                      ;;; Stub functions for DLX traps.
11676                      ;;;
11677                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
11678                      ;;;
11679                      ;;; There are two exit traps.  The first, _exitsim, actually exits the
11680                      ;;; simulator.  The second, _exit, simply calls a regular trap in the
11681                      ;;; DLX simulator, and would be suitable for a user program that wants
11682                      ;;; to signal the OS that it's exiting.
11683                      ;;;
11684                      ;;; IMPORTANT: all code that's run "native" on the simulator - OS code and
11685                      ;;; programs run without an OS - should call exitsim() rather than just
11686                      ;;; falling through to exit.
11687                      ;;;
11690  0000a168          	.align 2
11691  0000a168          	.proc _exitsim
11692  0000a168          	.global _exitsim
11693  0000a168          	_exitsim:
11694  0000a168  44002f00	trap	#0x2f00
11695  0000a16c  4be00000	jr	r31
11696  0000a170  54000000	nop
11697  0000a174          	.endproc _exitsim
11699  0000a174          	.proc _exit
11700  0000a174          	.global _exit
11701  0000a174          	_exit:
11702  0000a174  44000300	trap	#0x300
11703  0000a178  4be00000	jr	r31
11704  0000a17c  54000000	nop
11705  0000a180          	.endproc _exit
11707                      ;
11708                      ; Stub functions for DLX traps.
11709                      ;
11710                      ; Aaron Sawdey 1996; released to the Public Domain.
11711                      ;
11713  0000a180          	.proc _printf
11714  0000a180          	.global _printf
11715  0000a180          	_printf:
11716  0000a180  44002001	trap	#0x2001
11717  0000a184  4be00000	jr	r31
11718  0000a188  54000000	nop
11719  0000a18c          	.endproc _printf
11721  0000a18c          	.text
11722  0000a18c          	.global _etext
11723  0000a18c          	_etext:
11724  0000a18c          	.align 3
11725  0000a190          	.data
11726  000131a4          	.global _edata
11727  000131a4          	_edata:
