 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 20480
    3                      ; Data size: 47
    4                      ; Text size: 200
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x2000
    8                      ; Compiled by GCC
   10  00002000          	.align 2
   11  00002000          	LC0_LF0:
   12  00002000  48656c6c	.ascii "Hello World!\n\000"
   12  00002004  6f20576f	
   12  00002008  726c6421	
   12  0000200c  0a00    	
   13  0000200e          	.align 2
   14  00002010          	LC1_LF0:
   15  00002010  4c414230	.ascii "LAB01: Implementing User Trap\n\000"
   15  00002014  313a2049	
   15  00002018  6d706c65	
   15  0000201c  6d656e74	
   15  00002020  696e6720	
   15  00002024  55736572	
   15  00002028  20547261	
   15  0000202c  700a00  	
   16  0000202f          	.text
   17  00001000          	.align 2
   18  00001000          	.proc _main
   19  00001000          	.global _main
   20  00001000          	_main:
   21                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   22  00001000  afbefffc	sw	-4(r29),r30; push fp
   23  00001004  001df020	add	r30,r0,r29; fp = sp
   24  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   25  0000100c  2fbd0008	subui	r29,r29,#8; alloc local storage
   26  00001010  0c0000ac	jal	___main
   27  00001014  54000000	nop; not filled.
   28  00001018  23bdfff8	addi	r29,r29,#-8
   29  0000101c  3c020000	lhi	r2,((LC0_LF0)>>16)&0xffff
   30  00001020  24422000	addui	r2,r2,(LC0_LF0)&0xffff
   31  00001024  afa20000	sw	(r29),r2
   32  00001028  0c000070	jal	_Printf
   33  0000102c  54000000	nop; not filled.
   34  00001030  3c020000	lhi	r2,((LC1_LF0)>>16)&0xffff
   35  00001034  24422010	addui	r2,r2,(LC1_LF0)&0xffff
   36  00001038  afa20000	sw	(r29),r2
   37  0000103c  0c00005c	jal	_Printf
   38  00001040  54000000	nop; not filled.
   39  00001044  0c000060	jal	_Getpid
   40  00001048  54000000	nop; not filled.
   41  0000104c  23bd0008	addi	r29,r29,#8
   42  00001050          	L7_LF0:
   43  00001050  0bfffffc	j	L7_LF0
   44  00001054  54000000	nop; not filled.
   45  00001058  0c000058	jal	_exit
   46  0000105c  54000000	nop
   47  00001060          	.endproc _main
   48                      ;;;
   49                      ;;; Stub functions for DLX traps.
   50                      ;;;
   51                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
   52                      ;;;
   53                      ;;; The traps such as Open and Close
   54                      ;;; (note the capital letters) are for use by user programs.  The traps
   55                      ;;; with names such as open and close (lower case) are for use by the OS.
   56                      ;;;
   59  00001060          	.align 2
   61                      ;;; The following are the traps to be used by user-level programs
   62                      ;;;
   64  00001060          	.align 2
   65  00001060          	.proc _Open
   66  00001060          	.global _Open
   67  00001060          	_Open:
   68                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
   69                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
   70                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
   71  00001060  44000213	trap	#0x213
   72  00001064  4be00000	jr	r31
   73  00001068  54000000	nop
   74  0000106c          	.endproc _Open
   76  0000106c          	.proc _Close
   77  0000106c          	.global _Close
   78  0000106c          	_Close:
   79  0000106c  44000214	trap	#0x214
   80  00001070  4be00000	jr	r31
   81  00001074  54000000	nop
   82  00001078          	.endproc _Close
   84  00001078          	.proc _Read
   85  00001078          	.global _Read
   86  00001078          	_Read:
   87  00001078  44000210	trap	#0x210
   88  0000107c  4be00000	jr	r31
   89  00001080  54000000	nop
   90  00001084          	.endproc _Read
   92  00001084          	.proc _Write
   93  00001084          	.global _Write
   94  00001084          	_Write:
   95  00001084  44000211	trap	#0x211
   96  00001088  4be00000	jr	r31
   97  0000108c  54000000	nop
   98  00001090          	.endproc _Write
  100  00001090          	.proc _Lseek
  101  00001090          	.global _Lseek
  102  00001090          	_Lseek:
  103  00001090  44000212	trap	#0x212
  104  00001094  4be00000	jr	r31
  105  00001098  54000000	nop
  106  0000109c          	.endproc _Lseek
  108  0000109c          	.proc _Printf
  109  0000109c          	.global _Printf
  110  0000109c          	_Printf:
  111  0000109c  44000201	trap	#0x201
  112  000010a0  4be00000	jr	r31
  113  000010a4  54000000	nop
  114  000010a8          	.endproc _Printf
  116                      ;;; STP ADDED
  117  000010a8          	.proc _Getpid
  118  000010a8          	.global _Getpid
  119  000010a8          	_Getpid:
  120  000010a8  44000440	trap	#0x440
  121  000010ac  4be00000	jr	r31
  122  000010b0  54000000	nop
  123  000010b4          	.endproc _Getpid
  124                      ;;; Ethan L. Miller, 1999.  Released to the public domain
  125                      ;;;
  126                      ;;; Most of the traps are called in files from libtraps.
  129  000010b4          	.align 2
  130  000010b4          	.proc _exit
  131  000010b4          	.global _exit
  132  000010b4          	_exit:
  133  000010b4  44000300	trap	#0x300
  134  000010b8  4be00000	jr	r31
  135  000010bc  54000000	nop
  136  000010c0          	.endproc _exit
  138                      ; for the benefit of gcc.
  139  000010c0          	.proc ___main
  140  000010c0          	.global ___main
  141  000010c0          	___main:
  142  000010c0  4be00000	jr	r31
  143  000010c4  54000000	nop
  144  000010c8          	.endproc ___main
  145  000010c8          	.text
  146  000010c8          	.global _etext
  147  000010c8          	_etext:
  148  000010c8          	.align 3
  149  000010c8          	.data
  150  0000202f          	.global _edata
  151  0000202f          	_edata:
